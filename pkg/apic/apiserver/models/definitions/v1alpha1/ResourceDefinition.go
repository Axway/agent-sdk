/*
 * This file is automatically generated
 */

package v1alpha1

import (
	"encoding/json"
	v1 "git.ecd.axway.int/apigov/apic_agents_sdk/pkg/apic/apiserver/models/api/v1"
)

var (
	_ResourceDefinitionGVK = v1.GroupVersionKind{
		GroupKind: v1.GroupKind{
			Group: "definitions",
			Kind:  "ResourceDefinition",
		},
		ApiVersion: "v1alpha1",
	}
)

const (
	ResourceDefinitionScope = "ResourceGroup"

	ResourceDefinitionResource = "resources"
)

func ResourceDefinitionGVK() v1.GroupVersionKind {
	return _ResourceDefinitionGVK
}

func init() {
	v1.RegisterGVK(_ResourceDefinitionGVK, ResourceDefinitionScope, ResourceDefinitionResource)
}

type ResourceDefinition struct {
	v1.ResourceMeta

	Spec ResourceDefinitionSpec `json:"spec"`
}

func (res *ResourceDefinition) FromInstance(ri *v1.ResourceInstance) error {
	// TODO this needs to be better
	m, err := json.Marshal(ri.Spec)
	if err != nil {
		return err
	}

	spec := &ResourceDefinitionSpec{}
	err = json.Unmarshal(m, spec)
	if err != nil {
		return err
	}

	*res = ResourceDefinition{ResourceMeta: ri.ResourceMeta, Spec: *spec}

	return err
}

func (res *ResourceDefinition) AsInstance() (*v1.ResourceInstance, error) {
	m, err := json.Marshal(res.Spec)
	if err != nil {
		return nil, err
	}

	spec := map[string]interface{}{}
	err = json.Unmarshal(m, &spec)
	if err != nil {
		return nil, err
	}

	return &v1.ResourceInstance{ResourceMeta: res.ResourceMeta, Spec: spec}, nil
}
