package v1

// ErrorResponse Detail for standard error responses.
type ErrorResponse struct {
	Errors []map[string]map[string]interface{} `json:"errors,omitempty"`
}

type GroupKind struct {
	// Defines the group from which the resource belongs to. The server infers this from the endpoint the client submits the request to.
	Group string `json:"group,omitempty"`
	// Defines the kind of the resource. The server infers this from the endpoint the client submits the request to.
	Kind string `json:"kind,omitempty"`
}

type GroupVersionKind struct {
	GroupKind
	ApiVersion string `json:"apiVersion,omitempty"`
}

// MetadataScope The scope where this resource was defined.
type MetadataScope struct {
	// Internal id of the scope resource where the resource is defined.
	Id string `json:"id,omitempty"`
	// The kind of the scope resource where the resource is defined.
	Kind string `json:"kind,omitempty"`
	// The name of the scope where the resource is defined.
	Name string `json:"name,omitempty"`
}

// Reference List of objects dependent by this object.
type Reference struct {
	// Unique id generated by the server.
	Id string `json:"id,omitempty"`
	// The kind of the resource that it is reffering to.
	Kind string `json:"kind,omitempty"`
	// The name of the resource that it is reffering to.
	Name string `json:"name,omitempty"`
	// Defines the type of the reference: * soft - spec property that has this reference will get nulled out if the referenced resource gets removed. * hard - dictates that the current resource will get removed when the referenced resource gets removed.
	Type string `json:"type,omitempty"`
}

// AuditMetadata Read-only metadata for the record.
type AuditMetadata struct {
	// The creation time.
	CreateTimestamp Time `json:"createTimestamp,omitempty"`
	// Id of the user that created the entity.
	CreateUserId string `json:"createUserId,omitempty"`
	// The last modification time.
	ModifyTimestamp Time `json:"modifyTimestamp,omitempty"`
	// Id of the user that last modified the entity.
	ModifyUserId string `json:"modifyUserId,omitempty"`
}

// Metadata Metadata that all server resources have. Data is generated by the server.
type Metadata struct {
	// Internal id of the resource.
	Id    string        `json:"id,omitempty"`
	Audit AuditMetadata `json:"audit,omitempty"`
	Scope MetadataScope `json:"scope,omitempty"`
	// Internal version of this object that can be used by clients to determine when objects have changed.
	ResourceVersion string      `json:"resourceVersion,omitempty"`
	References      []Reference `json:"references,omitempty"`
	// Defines the state of the resource. If present, indicates if the resource is in Deleting state.
	State string `json:"state,omitempty"`
}

type ResourceMeta struct {
	GroupVersionKind
	Name     string   `json:"name"`
	Title    string   `json:"title,omitempty"`
	Metadata Metadata `json:"metadata,omitempty"`
	// Custom attributes added to objects.
	Attributes map[string]string `json:"attributes,omitempty"`
	// List of tags.
	Tags []string `json:"tags,omitempty"`
}

// ResourceInstance API Server generic resource structure.
type ResourceInstance struct {
	ResourceMeta
	// Resource instance specs.
	Spec map[string]interface{} `json:"spec"`
}
