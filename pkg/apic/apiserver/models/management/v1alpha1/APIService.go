/*
 * This file is automatically generated
 */

package v1alpha1

import (
	"encoding/json"

	apiv1 "github.com/Axway/agent-sdk/pkg/apic/apiserver/models/api/v1"
)

var (
	_APIServiceGVK = apiv1.GroupVersionKind{
		GroupKind: apiv1.GroupKind{
			Group: "management",
			Kind:  "APIService",
		},
		APIVersion: "v1alpha1",
	}
)

const (
	APIServiceScope = "Environment"

	APIServiceResourceName = "apiservices"
)

func APIServiceGVK() apiv1.GroupVersionKind {
	return _APIServiceGVK
}

func init() {
	apiv1.RegisterGVK(_APIServiceGVK, APIServiceScope, APIServiceResourceName)
}

// APIService Resource
type APIService struct {
	apiv1.ResourceMeta

	// GENERATE: The following code has been modified after code generation
	// 	Owner struct{} `json:"owner"`
	Owner *struct{} `json:"owner,omitempty"`

	Spec ApiServiceSpec `json:"spec"`
}

// FromInstance converts a ResourceInstance to a APIService
func (res *APIService) FromInstance(ri *apiv1.ResourceInstance) error {
	if ri == nil {
		res = nil
		return nil
	}

	m, err := json.Marshal(ri.Spec)
	if err != nil {
		return err
	}

	spec := &ApiServiceSpec{}
	err = json.Unmarshal(m, spec)
	if err != nil {
		return err
	}

	*res = APIService{ResourceMeta: ri.ResourceMeta, Spec: *spec}

	return err
}

// APIServiceFromInstanceArray converts a []*ResourceInstance to a []*APIService
func APIServiceFromInstanceArray(fromArray []*apiv1.ResourceInstance) ([]*APIService, error) {
	newArray := make([]*APIService, 0)
	for _, item := range fromArray {
		res := &APIService{}
		err := res.FromInstance(item)
		if err != nil {
			return make([]*APIService, 0), err
		}
		newArray = append(newArray, res)
	}

	return newArray, nil
}

// AsInstance converts a APIService to a ResourceInstance
func (res *APIService) AsInstance() (*apiv1.ResourceInstance, error) {
	m, err := json.Marshal(res.Spec)
	if err != nil {
		return nil, err
	}

	spec := map[string]interface{}{}
	err = json.Unmarshal(m, &spec)
	if err != nil {
		return nil, err
	}

	meta := res.ResourceMeta
	meta.GroupVersionKind = APIServiceGVK()

	return &apiv1.ResourceInstance{ResourceMeta: meta, Spec: spec}, nil
}
