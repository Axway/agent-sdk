/*
 * This file is automatically generated
 */

package v1alpha1

import (
	"encoding/json"
	v1 "git.ecd.axway.int/apigov/apic_agents_sdk/pkg/apic/apiserver/models/api/v1"
)

var (
	_APIServiceRevisionGVK = v1.GroupVersionKind{
		GroupKind: v1.GroupKind{
			Group: "management",
			Kind:  "APIServiceRevision",
		},
		ApiVersion: "v1alpha1",
	}
)

const (
	APIServiceRevisionScope = "Environment"

	APIServiceRevisionResource = "apiservicerevisions"
)

func APIServiceRevisionGVK() v1.GroupVersionKind {
	return _APIServiceRevisionGVK
}

func init() {
	v1.RegisterGVK(_APIServiceRevisionGVK, APIServiceRevisionScope, APIServiceRevisionResource)
}

type APIServiceRevision struct {
	v1.ResourceMeta

	Spec ApiServiceRevisionSpec `json:"true"`
}

func (res *APIServiceRevision) FromInstance(ri *v1.ResourceInstance) error {
	// TODO this needs to be better
	m, err := json.Marshal(ri.Spec)
	if err != nil {
		return err
	}

	spec := &ApiServiceRevisionSpec{}
	err = json.Unmarshal(m, spec)
	if err != nil {
		return err
	}

	*res = APIServiceRevision{ResourceMeta: ri.ResourceMeta, Spec: *spec}

	return err
}

func (res *APIServiceRevision) AsInstance() (*v1.ResourceInstance, error) {
	m, err := json.Marshal(res.Spec)
	if err != nil {
		return nil, err
	}

	spec := map[string]interface{}{}
	err = json.Unmarshal(m, &spec)
	if err != nil {
		return nil, err
	}

	return &v1.ResourceInstance{ResourceMeta: res.ResourceMeta, Spec: spec}, nil
}
