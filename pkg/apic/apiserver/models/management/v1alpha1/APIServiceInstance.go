/*
 * This file is automatically generated
 */

package v1alpha1

import (
	"encoding/json"
	v1 "git.ecd.axway.int/apigov/apic_agents_sdk/pkg/apic/apiserver/models/api/v1"
)

var (
	_APIServiceInstanceGVK = v1.GroupVersionKind{
		GroupKind: v1.GroupKind{
			Group: "management",
			Kind:  "APIServiceInstance",
		},
		ApiVersion: "v1alpha1",
	}
)

const (
	APIServiceInstanceScope = "Environment"

	APIServiceInstanceResource = "apiserviceinstances"
)

func APIServiceInstanceGVK() v1.GroupVersionKind {
	return _APIServiceInstanceGVK
}

func init() {
	v1.RegisterGVK(_APIServiceInstanceGVK, APIServiceInstanceScope, APIServiceInstanceResource)
}

type APIServiceInstance struct {
	v1.ResourceMeta

	Spec ApiServiceInstanceSpec `json:"true"`
}

func (res *APIServiceInstance) FromInstance(ri *v1.ResourceInstance) error {
	// TODO this needs to be better
	m, err := json.Marshal(ri.Spec)
	if err != nil {
		return err
	}

	spec := &ApiServiceInstanceSpec{}
	err = json.Unmarshal(m, spec)
	if err != nil {
		return err
	}

	*res = APIServiceInstance{ResourceMeta: ri.ResourceMeta, Spec: *spec}

	return err
}

func (res *APIServiceInstance) AsInstance() (*v1.ResourceInstance, error) {
	m, err := json.Marshal(res.Spec)
	if err != nil {
		return nil, err
	}

	spec := map[string]interface{}{}
	err = json.Unmarshal(m, &spec)
	if err != nil {
		return nil, err
	}

	return &v1.ResourceInstance{ResourceMeta: res.ResourceMeta, Spec: spec}, nil
}
