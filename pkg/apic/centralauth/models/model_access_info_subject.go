/*
AMPLIFY Central internal Auth API v0.1

APIs to validate platform tokens and retrieve principals permissions.

API version: 1.26.0-SNAPSHOT
Contact: support@axway.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package centralauth

import (
	"encoding/json"
)

// AccessInfoSubject struct for AccessInfoSubject
type AccessInfoSubject struct {
	// Platform subject ID.
	Id string `json:"id"`
}

// NewAccessInfoSubject instantiates a new AccessInfoSubject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessInfoSubject(id string) *AccessInfoSubject {
	this := AccessInfoSubject{}
	this.Id = id
	return &this
}

// NewAccessInfoSubjectWithDefaults instantiates a new AccessInfoSubject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessInfoSubjectWithDefaults() *AccessInfoSubject {
	this := AccessInfoSubject{}
	return &this
}

// GetId returns the Id field value
func (o *AccessInfoSubject) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AccessInfoSubject) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AccessInfoSubject) SetId(v string) {
	o.Id = v
}

func (o AccessInfoSubject) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	return json.Marshal(toSerialize)
}

type NullableAccessInfoSubject struct {
	value *AccessInfoSubject
	isSet bool
}

func (v NullableAccessInfoSubject) Get() *AccessInfoSubject {
	return v.value
}

func (v *NullableAccessInfoSubject) Set(val *AccessInfoSubject) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessInfoSubject) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessInfoSubject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessInfoSubject(val *AccessInfoSubject) *NullableAccessInfoSubject {
	return &NullableAccessInfoSubject{value: val, isSet: true}
}

func (v NullableAccessInfoSubject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessInfoSubject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


