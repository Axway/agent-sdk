/*
AMPLIFY Central internal Auth API v0.1

APIs to validate platform tokens and retrieve principals permissions.

API version: 1.26.0-SNAPSHOT
Contact: support@axway.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package centralauth

import (
	"encoding/json"
)

// AccessInfoPermissionsGlobal Global Organization permissions, not restricted under a scope type.
type AccessInfoPermissionsGlobal struct {
	// The values for the permission strings.
	Values []string `json:"values"`
}

// NewAccessInfoPermissionsGlobal instantiates a new AccessInfoPermissionsGlobal object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessInfoPermissionsGlobal(values []string) *AccessInfoPermissionsGlobal {
	this := AccessInfoPermissionsGlobal{}
	this.Values = values
	return &this
}

// NewAccessInfoPermissionsGlobalWithDefaults instantiates a new AccessInfoPermissionsGlobal object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessInfoPermissionsGlobalWithDefaults() *AccessInfoPermissionsGlobal {
	this := AccessInfoPermissionsGlobal{}
	return &this
}

// GetValues returns the Values field value
func (o *AccessInfoPermissionsGlobal) GetValues() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Values
}

// GetValuesOk returns a tuple with the Values field value
// and a boolean to check if the value has been set.
func (o *AccessInfoPermissionsGlobal) GetValuesOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Values, true
}

// SetValues sets field value
func (o *AccessInfoPermissionsGlobal) SetValues(v []string) {
	o.Values = v
}

func (o AccessInfoPermissionsGlobal) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["values"] = o.Values
	}
	return json.Marshal(toSerialize)
}

type NullableAccessInfoPermissionsGlobal struct {
	value *AccessInfoPermissionsGlobal
	isSet bool
}

func (v NullableAccessInfoPermissionsGlobal) Get() *AccessInfoPermissionsGlobal {
	return v.value
}

func (v *NullableAccessInfoPermissionsGlobal) Set(val *AccessInfoPermissionsGlobal) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessInfoPermissionsGlobal) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessInfoPermissionsGlobal) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessInfoPermissionsGlobal(val *AccessInfoPermissionsGlobal) *NullableAccessInfoPermissionsGlobal {
	return &NullableAccessInfoPermissionsGlobal{value: val, isSet: true}
}

func (v NullableAccessInfoPermissionsGlobal) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessInfoPermissionsGlobal) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


