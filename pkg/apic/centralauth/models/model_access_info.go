/*
AMPLIFY Central internal Auth API v0.1

APIs to validate platform tokens and retrieve principals permissions.

API version: 1.26.0-SNAPSHOT
Contact: support@axway.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package centralauth

import (
	"encoding/json"
)

// AccessInfo struct for AccessInfo
type AccessInfo struct {
	Subject AccessInfoSubject `json:"subject"`
	Organization AccessInfoOrganization `json:"organization"`
	Permissions AccessInfoPermissions `json:"permissions"`
}

// NewAccessInfo instantiates a new AccessInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessInfo(subject AccessInfoSubject, organization AccessInfoOrganization, permissions AccessInfoPermissions) *AccessInfo {
	this := AccessInfo{}
	this.Subject = subject
	this.Organization = organization
	this.Permissions = permissions
	return &this
}

// NewAccessInfoWithDefaults instantiates a new AccessInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessInfoWithDefaults() *AccessInfo {
	this := AccessInfo{}
	return &this
}

// GetSubject returns the Subject field value
func (o *AccessInfo) GetSubject() AccessInfoSubject {
	if o == nil {
		var ret AccessInfoSubject
		return ret
	}

	return o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value
// and a boolean to check if the value has been set.
func (o *AccessInfo) GetSubjectOk() (*AccessInfoSubject, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Subject, true
}

// SetSubject sets field value
func (o *AccessInfo) SetSubject(v AccessInfoSubject) {
	o.Subject = v
}

// GetOrganization returns the Organization field value
func (o *AccessInfo) GetOrganization() AccessInfoOrganization {
	if o == nil {
		var ret AccessInfoOrganization
		return ret
	}

	return o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value
// and a boolean to check if the value has been set.
func (o *AccessInfo) GetOrganizationOk() (*AccessInfoOrganization, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Organization, true
}

// SetOrganization sets field value
func (o *AccessInfo) SetOrganization(v AccessInfoOrganization) {
	o.Organization = v
}

// GetPermissions returns the Permissions field value
func (o *AccessInfo) GetPermissions() AccessInfoPermissions {
	if o == nil {
		var ret AccessInfoPermissions
		return ret
	}

	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value
// and a boolean to check if the value has been set.
func (o *AccessInfo) GetPermissionsOk() (*AccessInfoPermissions, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Permissions, true
}

// SetPermissions sets field value
func (o *AccessInfo) SetPermissions(v AccessInfoPermissions) {
	o.Permissions = v
}

func (o AccessInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["subject"] = o.Subject
	}
	if true {
		toSerialize["organization"] = o.Organization
	}
	if true {
		toSerialize["permissions"] = o.Permissions
	}
	return json.Marshal(toSerialize)
}

type NullableAccessInfo struct {
	value *AccessInfo
	isSet bool
}

func (v NullableAccessInfo) Get() *AccessInfo {
	return v.value
}

func (v *NullableAccessInfo) Set(val *AccessInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessInfo(val *AccessInfo) *NullableAccessInfo {
	return &NullableAccessInfo{value: val, isSet: true}
}

func (v NullableAccessInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


