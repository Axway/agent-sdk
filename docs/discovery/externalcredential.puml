@startuml
participant Environment as env
participant SDK as sdk 
participant IDP as idp 
participant Agent as agent
participant Dataplane as dataplane

group IdP Registration
'Register IdP provider
activate sdk
sdk -> sdk: Read IdP config

activate idp
sdk -> idp: Fetch metadata for the provider
deactivate idp
sdk -> sdk: Add provider to registry

end

group API Discovery + associating CRD based on registered provider
' Associating Credential Request Definitions with API service instance
agent -> dataplane: Discover API
deactivate sdk

activate agent
activate dataplane
deactivate dataplane

agent -> sdk: Register CRD for external providers based on the discovered API metadata and registered provider
activate sdk
sdk -> env: Register CRD
activate env
note left agent: Include attribute to identify external provider in CRD e.g. token endpoint


agent -> agent: Associate the CRD with service definition to be published based on the API metadata
agent -> sdk: Publish the service

sdk -> env: Publish the service, revision and instance with associated CRD 

deactivate sdk
deactivate env
deactivate agent
end

group Provisioning Credential 
'Provision Credential
env -> sdk: Credential Create Event
activate env
activate sdk
sdk -> agent: CredentialProvision
activate agent
agent -> sdk: Lookup provider using the attribute from CRD
agent -> agent: Prepare external client metadata using SDK interface
agent -> sdk: Use the provider and client metadata to register client in IdP
sdk -> idp: Create the client using dynamic client registration specification
activate idp
idp --> sdk: Return new client 
deactivate idp

sdk --> agent: Return the new client metadata

agent -> dataplane: Associate the external client in the dataplane app
activate dataplane
agent -> sdk: success
sdk -> env: Update Credential Success
note left sdk: Add credential data, with encrypted fields

deactivate agent
deactivate sdk
deactivate env
deactivate dataplane
end 

group Deprovisioning Credential 
'Deprovision Credential
env -> sdk: Credential Update Event
activate env
activate sdk

sdk -> agent: CredentialDeprovision
activate agent
agent -> sdk: Lookup provider using the attribute from CRD
agent -> sdk: Call interface to deregister client using client id
sdk -> idp: Remove the client using dynamic client registration specification
activate idp
idp --> sdk: Delete client response
deactivate idp
sdk --> agent: Return client deregistration response
agent -> dataplane: Remove the associate of the external client in the dataplane app
activate dataplane
agent -> sdk: success
sdk -> env: Update Credential, allowing resource removal

deactivate agent
deactivate sdk
deactivate env
deactivate dataplane
end

@enduml
