{
  "swagger" : "2.0",
  "info" : {
    "version" : "1.3.0",
    "title" : "API Manager API v1.3",
    "contact" : {
      "email" : "support@axway.com"
    },
    "license" : {
      "name" : "Copyright Axway 2020. All rights reserved."
    }
  },
  "basePath" : "/api/portal/v1.3",
  "tags" : [ {
    "name" : "Applications"
  }, {
    "name" : "OAuth Authorizations"
  }, {
    "name" : "Metrics"
  }, {
    "name" : "Migrate"
  }, {
    "name" : "Organizations"
  }, {
    "name" : "API Manager Services"
  }, {
    "name" : "API Proxy Registration"
  }, {
    "name" : "Quotas"
  }, {
    "name" : "API Repository"
  }, {
    "name" : "Users"
  }, {
    "name" : "Current User"
  }, {
    "name" : "API Discovery"
  }, {
    "name" : "Login"
  } ],
  "paths" : {
    "/applications/{id}/image" : {
      "get" : {
        "tags" : [ "Applications" ],
        "summary" : "Get the image for an application",
        "description" : "Get the JPEG image associated with an application.",
        "produces" : [ "image/jpeg" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the application whose image is to be return",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Applications" ],
        "summary" : "Adds a JPEG image to an application",
        "description" : "Adds a JPEG image to an application with a MultiPart POST",
        "consumes" : [ "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the application whose image is being added",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "file",
          "in" : "formData",
          "description" : "The file uploaded in the POST body as an element in a multipart post",
          "required" : true,
          "type" : "file"
        }, {
          "name" : "type",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "file",
          "in" : "formData",
          "description" : "The file uploaded in the POST body as an element in a multipart post",
          "required" : true,
          "type" : "file"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "404" : {
            "description" : "Not Found"
          },
          "409" : {
            "description" : "Conflict"
          },
          "413" : {
            "description" : "Request Entity Too Large"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/applications" : {
      "get" : {
        "tags" : [ "Applications" ],
        "summary" : "Get the list of applications",
        "description" : "Get the list of applications that are visible to the authenticated user.  The list of applications can be filtered using the expression: field=__field__&op=__op__&value=__value__.  Optionally, you can add a logical operation for all expressions, using the form: &lop=AND|OR.  By default, the logical operation is AND.  Multiple expression filters can be used, specifying field, op, and value for each filter. The __field__ is one of:\n\napiid\n:    Matches the application if the application is using the API, specified by ID\n\nuserid\n:    Matches the application if the user has explicit access to the application, specified by ID\n\ndescription\n:    The application's description\n\nemail\n:    The application's contact email address\n\nenabled\n:     The enabled state of the application, one of: enabled, disabled\n\ncreatedOn\n:    The date the application was created on, time in ms, e.g.: 1372755998542\n\nname\n:    The name of the application\n\norgid\n:    Matches the application if the application is part of the organization, specified by ID\n\nphone\n:    The application's contact phone\n\nstate\n:    The application's current state, one of: approved, pending\n\nThe __op__ is an operation and is one of:\n\neq\n:    Equal\n\nne\n:    Not equal\n\ngt\n:     Greater than\n\nlt\n:     Less than\n\nge\n:     Greater than or equal\n\nle\n:     Less than or equal\n\nlike\n:    Like\n\ngele\n:     Greater than or equal to, and less than or equal to; the __value__ should be a lower-minimum and upper-maximum separated by comma, e.g: value=5,10\n\nThe __value__ will be compared against the __field__, according to the supplied __op__. ",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "field",
          "in" : "query",
          "description" : "Filter field name.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "op",
          "in" : "query",
          "description" : "Filter operation.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "value",
          "in" : "query",
          "description" : "Filter value",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Application"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Applications" ],
        "summary" : "Creates a new application.",
        "description" : "Creates a new application. New applications may need to be approved using [/approve](#APIApplicationsapproveApp). Data posted in this request may include custom properties defined in app.config",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ApplicationRequest"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/Application"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/applications/{id}" : {
      "get" : {
        "tags" : [ "Applications" ],
        "summary" : "Get an application",
        "description" : "Retrieves the details of an application.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the application to be returned.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Application"
            }
          },
          "204" : {
            "description" : "No Content",
            "schema" : {
              "$ref" : "#/definitions/Application"
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Applications" ],
        "summary" : "Update an application",
        "description" : "Only managers of the application, API Manager Administrators, or Organization Administrators with enabled delegated application management privileges, may update an application. Note, if a field is omitted from the payload, or its value is set to null, the existing value for this field will be retained.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the application to be updated",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Application"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Application"
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Applications" ],
        "summary" : "Delete an application",
        "description" : "Only managers of the application, API Manager Administrators, or Organization Administrators with enabled delegated application management privileges, may delete applications.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of application to delete.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/applications/{id}/permissions" : {
      "get" : {
        "tags" : [ "Applications" ],
        "summary" : "Get the list of permissions.",
        "description" : "Get the access-control list (ACL) for the application. Callers with view-only privilege can only access their own permission.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/PermissionDTO"
              }
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Applications" ],
        "summary" : "Create a new permission.",
        "description" : "Add a new access-control entry to the application's ACL. Management privilege required.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PermissionDTO"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/PermissionDTO"
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/applications/{id}/approve" : {
      "post" : {
        "tags" : [ "Applications" ],
        "summary" : "Approves a pending application request",
        "description" : "Approving user must be API Manager Administrator or an Organization Administrator of the application's organization with the correct privileges to approve new application requests.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The application request ID.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "201" : {
            "description" : "Created"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/applications/{id}/permissions/{permId}" : {
      "put" : {
        "tags" : [ "Applications" ],
        "summary" : "Modify a permission",
        "description" : "Modify an existing access-control entry from the application's ACL. Management privilege required.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "permId",
          "in" : "path",
          "description" : "The permission ID.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PermissionDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PermissionDTO"
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Applications" ],
        "summary" : "Remove a permission",
        "description" : "Remove an existing access-control entry from the application's ACL. Management privilege required.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "permId",
          "in" : "path",
          "description" : "The permission ID.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "404" : {
            "description" : "Not Found"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/applications/{id}/apis" : {
      "get" : {
        "tags" : [ "Applications" ],
        "summary" : "Get the list of APIs that the application can access",
        "description" : "Get the list of APIs that the application can access.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/APIAccess"
              }
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Applications" ],
        "summary" : "Create a request for an application to access an API.",
        "description" : "Only API Manager Administrator, or an Organization Administrator of the application's organization with the correct privileges, or the application manager may create API access requests.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/APIAccess"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/APIAccess"
            }
          },
          "204" : {
            "description" : "No Content",
            "schema" : {
              "$ref" : "#/definitions/APIAccess"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/applications/{id}/apis/{apiAccessId}/approve" : {
      "post" : {
        "tags" : [ "Applications" ],
        "summary" : "Creates an API access request to an API for an application.",
        "description" : "Approving user must be API Manager Administrator or an Organization Administrator of the application's organization with the correct privileges to approve API access requests.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "apiAccessId",
          "in" : "path",
          "description" : "The API access ID.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "201" : {
            "description" : "Created"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/applications/{id}/apis/{apiAccessId}" : {
      "put" : {
        "tags" : [ "Applications" ],
        "summary" : "Updates access to an API for an application",
        "description" : "Updates access to an API for an application.  Only __enabled__ may be modified.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "apiAccessId",
          "in" : "path",
          "description" : "The API access ID.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/APIAccess"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/APIAccess"
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Applications" ],
        "summary" : "Deletes access to an API for an application",
        "description" : "Permanently deletes access to an API for an application.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "apiAccessId",
          "in" : "path",
          "description" : "The API access ID.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "404" : {
            "description" : "Not Found"
          },
          "204" : {
            "description" : "No Content",
            "schema" : {
              "$ref" : "#/definitions/APIAccess"
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/applications/{id}/quota" : {
      "get" : {
        "tags" : [ "Applications" ],
        "summary" : "Returns the quota associated with an application.",
        "description" : "Returns the quota associated with an application.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of application who's quota constraints are to be returned.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/QuotaDTO"
            }
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Applications" ],
        "summary" : "Creates a new quota constraint for the application",
        "description" : "Creates a new quota constraint for the application.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of application for the quota contraint.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/QuotaDTO"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/QuotaDTO"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Applications" ],
        "summary" : "Updates a quota contraint for an application",
        "description" : "Updates a quota contraint for the given application.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of application who's quota is to be updated.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/QuotaDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/QuotaDTO"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Applications" ],
        "summary" : "Deletes a quota from an application",
        "description" : "Deletes a quota from an application",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of application who's quota constraint is to be deleted.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "400" : {
            "description" : "Bad Request"
          },
          "204" : {
            "description" : "No Content"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/applications/{id}/availablescopes" : {
      "get" : {
        "tags" : [ "Applications" ],
        "summary" : "Returns the scopes available to an application",
        "description" : "Returns the OAuth scopes available to  an application.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of application whose OAuth scopes are to be returned.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "apiScope",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "array",
                "uniqueItems" : true,
                "items" : {
                  "type" : "object"
                }
              }
            }
          },
          "204" : {
            "description" : "No Content",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "array",
                "uniqueItems" : true,
                "items" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/applications/{id}/extclients" : {
      "get" : {
        "tags" : [ "Applications" ],
        "summary" : "Returns the external clients associated with an application",
        "description" : "Returns the external clients associated with an application. External clients are used when authenticating the application through a 3rd party OAuth service",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of application whose external clients are to be returned.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ExternalClient"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Applications" ],
        "summary" : "Maps a new external client to the application",
        "description" : "Maps a new external client to the application. External clients are used when authenticating the application through a 3rd party OAuth service",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of application to map to an external client.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ExternalClient"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/ExternalClient"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/applications/{id}/extclients/{objectId}" : {
      "put" : {
        "tags" : [ "Applications" ],
        "summary" : "Updates an external client for the application",
        "description" : "Updates an external client for the application. External clients are used when authenticating the application through a 3rd party OAuth service",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of application whose external client is to be updated.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "objectId",
          "in" : "path",
          "description" : "The external client entry to be updated.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ExternalClient"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ExternalClient"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Applications" ],
        "summary" : "Delete an external client",
        "description" : "Deletes an external client. Deleting a mapping means that it will no longer be accepted for application authentication.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of application whose external client is to be deleted.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "objectId",
          "in" : "path",
          "description" : "The ID of the external client entry to be deleted.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/applications/oauthclient/{clientId}" : {
      "get" : {
        "tags" : [ "Applications" ],
        "summary" : "Get an application associated with an OAuth Client ID",
        "description" : "Retrieves the application associated with an OAuth Client ID",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "clientId",
          "in" : "path",
          "description" : "The OAuth Client ID associated with the Application.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Application"
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/applications/{id}/apikeys" : {
      "get" : {
        "tags" : [ "Applications" ],
        "summary" : "Returns the API Keys associated with an application",
        "description" : "Returns the API Keys associated with an application.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of application whose API Keys are to be returned.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/APIKey"
              }
            }
          },
          "204" : {
            "description" : "No Content",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/APIKey"
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Applications" ],
        "summary" : "Creates a new API Key and secret for the application",
        "description" : "Creates a new API Key and secret for the application.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of application requiring an API Key.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "apiKey",
          "description" : "The APIKey to create",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/APIKey"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/APIKey"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "409" : {
            "description" : "Conflict"
          },
          "204" : {
            "description" : "No Content",
            "schema" : {
              "$ref" : "#/definitions/APIKey"
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/applications/{id}/apikeys/{apikeyid}" : {
      "put" : {
        "tags" : [ "Applications" ],
        "summary" : "Updates an API Key",
        "description" : "Updates the secret, enabled and Cors origin field.  The fields __id__, __createdBy__, __createdOn__ are read only.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of application whose API Key is to be updated.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "apikeyid",
          "in" : "path",
          "description" : "The ID of the API Key to be updated.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/APIKey"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content",
            "schema" : {
              "$ref" : "#/definitions/APIKey"
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/applications/{id}/apikeys/{keyId}" : {
      "delete" : {
        "tags" : [ "Applications" ],
        "summary" : "Delete an API Key",
        "description" : "Deletes an API Key. Deleting an API key means that it will no longer be accepted for application authentication.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The API Key ID to be deleted.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "keyId",
          "in" : "path",
          "description" : "The ID of application whose API Key is to be deleted.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/applications/{id}/oauth" : {
      "get" : {
        "tags" : [ "Applications" ],
        "summary" : "Returns the OAuth Credentials associated with an application",
        "description" : "Returns the OAuth Credentials associated with an application.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of application whose OAuth Credentials are to be returned.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/OAuthClient"
              }
            }
          },
          "204" : {
            "description" : "No Content",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/OAuthClient"
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Applications" ],
        "summary" : "Creates a new OAuth client ID and secret for the application",
        "description" : "Creates a new OAuth client ID and secret for the application.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of application requiring an OAuth client ID and secret.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The OAuth credential to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/OAuthClient"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/OAuthClient"
            }
          },
          "204" : {
            "description" : "No Content",
            "schema" : {
              "$ref" : "#/definitions/OAuthClient"
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/applications/{id}/oauth/{clientId}" : {
      "put" : {
        "tags" : [ "Applications" ],
        "summary" : "Updates an OAuth Credential for the application",
        "description" : "Updates an OAuth Credential for the application.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of application whose OAuth credential is to be updated.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "clientId",
          "in" : "path",
          "description" : "The OAuth Credential ID to be updated.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/OAuthClient"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content",
            "schema" : {
              "$ref" : "#/definitions/OAuthClient"
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/applications/{id}/oauth/{clientid}/newsecret" : {
      "put" : {
        "tags" : [ "Applications" ],
        "summary" : "Updates an OAuth Credential for an application by generating a new secret",
        "description" : "Updates an OAuth Credential for an application by generating a new client secret.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of application whose OAuth credential is to be updated with a new secret",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "clientid",
          "in" : "path",
          "description" : "The OAuth Credential ID to be updated with a new secret",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content",
            "schema" : {
              "$ref" : "#/definitions/OAuthClient"
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/applications/{id}/oauth/{oauthId}" : {
      "delete" : {
        "tags" : [ "Applications" ],
        "summary" : "Delete an OAuth client ID and secret",
        "description" : "Deletes an OAuth client ID and secret. Deleting an OAuth client ID and secret means that it will no longer be accepted for OAuth application authentication.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of application whose OAuth Credential is to be deleted.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "oauthId",
          "in" : "path",
          "description" : "The OAuth Client ID to be deleted.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/applications/{id}/oauthresource" : {
      "get" : {
        "tags" : [ "Applications" ],
        "summary" : "Returns the OAuth protected resources (scopes) associated with an application",
        "description" : "Returns the OAuth protected resources (scopes) associated with an application.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of application whose OAuth protected resources (Scopes) are to be returned.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/OAuthResource"
              }
            }
          },
          "204" : {
            "description" : "No Content",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/OAuthResource"
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Applications" ],
        "summary" : "Adds an OAuth protected resource to an application",
        "description" : "An application must define which OAuth Protected resources it wants to access. These resources will define the scope of the application.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of application requiring an OAuth protected resource.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The OAuth protected resource to add to the application",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/OAuthResource"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/OAuthResource"
            }
          },
          "204" : {
            "description" : "No Content",
            "schema" : {
              "$ref" : "#/definitions/OAuthResource"
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/applications/{id}/oauthresource/{resourceId}" : {
      "put" : {
        "tags" : [ "Applications" ],
        "summary" : "Updates a protected resource associate with an application, sets enabled to true/false",
        "description" : "An OAuth Protected resource associated with an application can be enabled or disabled with this method.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of application requiring an updated OAuth protected resource.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resourceId",
          "in" : "path",
          "description" : "The ID of the OAuth protected resource to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The updated OAuth protected resource",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/OAuthResource"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/OAuthResource"
            }
          },
          "204" : {
            "description" : "No Content",
            "schema" : {
              "$ref" : "#/definitions/OAuthResource"
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Applications" ],
        "summary" : "Remove an OAuth protected resource from an application",
        "description" : "Removes the association between an application and an OAuth protected resource on the API Server. The application will no longer have the scope associated with the resource. Tokens issued prior to the removal will still be scoped for the resource.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of application whose protected resource is to be removed.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resourceId",
          "in" : "path",
          "description" : "The uri of the OAuth protected resource to be disassociated from the application.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/applications/{id}/scope" : {
      "get" : {
        "tags" : [ "Applications" ],
        "summary" : "Returns the scopes associated with an application",
        "description" : "Returns the OAuth scopes associated with an application.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of application whose OAuth protected resources (Scopes) are to be returned.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/OAuthAppScope"
              }
            }
          },
          "204" : {
            "description" : "No Content",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/OAuthAppScope"
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Applications" ],
        "summary" : "Adds an OAuth protected resource to an application",
        "description" : "An application must define which scopes it wants to access. These define the scope of the application.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of application requiring an OAuth scope.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The OAuth Scope to add to the application",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/OAuthAppScope"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/OAuthAppScope"
            }
          },
          "204" : {
            "description" : "No Content",
            "schema" : {
              "$ref" : "#/definitions/OAuthAppScope"
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/applications/{id}/scope/{scopeId}" : {
      "put" : {
        "tags" : [ "Applications" ],
        "summary" : "Updates a scope associated with an application, sets default to true/false",
        "description" : "An OAuth Scope associated with an application can be set or unset as a default scope with this method.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of application requiring an updated OAuth protected resource.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "scopeId",
          "in" : "path",
          "description" : "The ID of the Application Scope to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The updated OAuth protected resource",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/OAuthAppScope"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/OAuthAppScope"
            }
          },
          "204" : {
            "description" : "No Content",
            "schema" : {
              "$ref" : "#/definitions/OAuthAppScope"
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Applications" ],
        "summary" : "Remove an OAuth protected resource from an application",
        "description" : "Removes the association between an application and an OAuth protected resource on the API Server. The application will no longer have the scope associated with the resource. Tokens issued prior to the removal will still be scoped for the resource.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of application whose protected resource is to be removed.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "scopeId",
          "in" : "path",
          "description" : "The id of the Scope to be disassociated from the application.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/authorizations" : {
      "get" : {
        "tags" : [ "OAuth Authorizations" ],
        "summary" : "Retrieve all stored OAuth Authorizations for the logged in user.",
        "description" : "If user is a member of the admin group then all authorizations are returned. If not, then the logged in user's authorizations are returned.",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/OAuthAuthorization"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/authorizations/{authzid}" : {
      "delete" : {
        "tags" : [ "OAuth Authorizations" ],
        "summary" : "Delete the OAuth Authorization for the given authorization id.",
        "description" : "Admin or Resource Owner task to delete the given authorization id.",
        "parameters" : [ {
          "name" : "authzid",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/authorizations/owner/{subjectid}/application/{appid}" : {
      "delete" : {
        "tags" : [ "OAuth Authorizations" ],
        "summary" : "",
        "description" : "",
        "parameters" : [ {
          "name" : "subjectid",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "appid",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/metrics/reports/{type}/summary/{level}" : {
      "get" : {
        "tags" : [ "Metrics" ],
        "summary" : "Gets a summary report for application usage",
        "description" : "",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "description" : "The report type, either 'app' or 'api'",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "level",
          "in" : "path",
          "description" : "The report level (0 or 1 for drill-through)",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The starting date/time for the report.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The end date/time for the report.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "client",
          "in" : "query",
          "description" : "Filter a specific client ID (multiple permitted).",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "service",
          "in" : "query",
          "description" : "Filter a specific service name (multiple permitted).",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "method",
          "in" : "query",
          "description" : "Filter a specific method.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "organization",
          "in" : "query",
          "description" : "Filter a specific organziation.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "reportsubtype",
          "in" : "query",
          "description" : "Define the report subtype. Allowed values are : 'original', 'trafficAll' or 'trafficSubset'. Defaults to 'original' if absent",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Monitoring is disabled"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/metrics/reports/{type}/timeline/{level}/{metricType}" : {
      "get" : {
        "tags" : [ "Metrics" ],
        "summary" : "Gets a timeline report for application usage",
        "description" : "Produces a timeline report for a __metricType__ over a specified time range.  The __from__ and __two__ parameters should be a URL encoded ISO-8601 combined date and time format (e.g. 2013-03-13T00%3A00%3A00Z).  The __metricType__ name is one of the types returned from [fields](#APIMetricsgetMetricFields).",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "description" : "The report type, either 'app' or 'api'",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "level",
          "in" : "path",
          "description" : "The report level (0 or 1 for drill-through)",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The starting date/time for the report.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "The end date/time for the report.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "client",
          "in" : "query",
          "description" : "Filter a specific client ID (multiple permitted).",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "service",
          "in" : "query",
          "description" : "Filter a specific service name (multiple permitted).",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "method",
          "in" : "query",
          "description" : "Filter a specific method.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "organization",
          "in" : "query",
          "description" : "Filter a specific organziation.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "metricType",
          "in" : "path",
          "description" : "The metric type to query.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "reportsubtype",
          "in" : "query",
          "description" : "Define the report subtype. Allowed values are : 'original', 'trafficAll' or 'trafficSubset'. Defaults to 'original' if absent",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/MetricTimeline"
            }
          },
          "404" : {
            "description" : "Monitoring is disabled"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/metrics/fields" : {
      "get" : {
        "tags" : [ "Metrics" ],
        "summary" : "Gets a list of metric field names available for summary and timeline queries.",
        "description" : "Retrieves a set of metric fields that may be used when querying or interpreting the summary and timeline reports.  The __metricType__ is the metric name.  The __aggreggateName__ is the metric name for the aggregated __metricType__.",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/MetricField"
              }
            }
          },
          "404" : {
            "description" : "Monitoring is disabled"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/migrate/applications/export/json" : {
      "post" : {
        "tags" : [ "Migrate" ],
        "summary" : "Creates an export of applications based on the export options posted as a JSON object",
        "description" : "Creates an export file based on options including the password used to encrypt the resulting export, export elements: apikeys, oauth & quotas, the filename of the export, and the list of application ids for inclusion in the export. The exported data is returned as part of the response body",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Export options",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ExportOptions"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/migrate/applications/import" : {
      "post" : {
        "tags" : [ "Migrate" ],
        "summary" : "Imports applications to the API Gateway",
        "description" : "Imports a set of applications and assocated API Keys and OAuth credentials, encrypted files require a decryption password",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "file",
          "in" : "formData",
          "description" : "The file containing application data to be imported",
          "required" : true,
          "type" : "file"
        }, {
          "name" : "password",
          "in" : "formData",
          "description" : "Password to be used for decryption",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "organizationId",
          "in" : "formData",
          "description" : "The Organization to associate the imported applications with. If applicable, for Core OAuth this parameter will be ignored",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "userId",
          "in" : "formData",
          "description" : "The user to associate the applications with. Default is the API Admin",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "This value should be unset",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "file",
          "in" : "formData",
          "description" : "The file containing application data to be imported",
          "required" : true,
          "type" : "file"
        } ],
        "responses" : {
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/migrate/applications/export/create" : {
      "post" : {
        "tags" : [ "Migrate" ],
        "summary" : "Creates a set of export options associated with the current http session",
        "description" : "Creates a set of export options associated with the current http session. Options include the password used to encrypt the resulting export, export elements: apikeys, oauth & quotas, the filename of the export, and the list of application ids for inclusion in the export. The exported data can be retrieved subsequently with a GET request",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The options for creating an application export file",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ExportOptions"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/migrate/applications/export/download" : {
      "get" : {
        "tags" : [ "Migrate" ],
        "summary" : "Exports Application data for migration to other API Gateways",
        "description" : "Retrieves the export options associated with the current user HTTP session and creates a stream or returns the exported data in response body.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "filename",
          "in" : "query",
          "description" : "Optional. If present this method will return an octet stream with an file attachment of the same name",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/migrate/applications/export" : {
      "post" : {
        "tags" : [ "Migrate" ],
        "summary" : "Creates an export of applications based on the export options posted in a form data",
        "description" : "Creates an export file based on options including the password used to encrypt the resulting export, export elements: apikeys, oauth & quotas, the filename of the export, and the list of application ids for inclusion in the export. The exported data is returned as part of the response body",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "apikeys",
          "in" : "formData",
          "description" : "True/False. Include/Exclude api keys",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "oauth",
          "in" : "formData",
          "description" : "True/False. Include/Exclude oauth credentials",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "quota",
          "in" : "formData",
          "description" : "True/False. Include/Exclude quotas, if available",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "filename",
          "in" : "formData",
          "description" : "The name of the export file",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "password",
          "in" : "formData",
          "description" : "The password used to encrypt the exported file",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "appIds",
          "in" : "formData",
          "description" : "The list of identifiers for the applications to be exported",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/organizations/{id}/image" : {
      "get" : {
        "tags" : [ "Organizations" ],
        "summary" : "Get the image for an organization",
        "description" : "Returns the jpeg image associated with an organization.",
        "produces" : [ "image/jpeg" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The organization ID whos image is to be returned",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Organizations" ],
        "summary" : "Set the image for an organization",
        "description" : "Set the jpeg image to be associated with an organization.",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The organization ID whos image is to be set",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "file",
          "in" : "formData",
          "required" : false,
          "type" : "file"
        }, {
          "name" : "type",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "413" : {
            "description" : "Request Entity Too Large"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/organizations" : {
      "get" : {
        "tags" : [ "Organizations" ],
        "summary" : "List all organizations",
        "description" : "Get the list of organizations that are visible to the authenticated user.  Only API Administrators may list all organizations, all other users will see their organization.  The list of organizations can be filtered using the expression: field=__field__&op=__op__&value=__value__.  Optionally, you can add a logical operation for all expressions, using the form: &lop=AND|OR.  By default, the logical operation is AND.  Multiple expression filters can be used, specifying field, op, and value for each filter. The __field__ is one of:\n\napiid\n:  Matches the organization if the organization is using the API, specified by ID\n\ndescription\n:  The organization's description\n\nemail\n:  The organization's contact email address\n\nenabled\n:  The enabled state of the organization, one of: enabled, disabled\n\ncreatedOn\n:  The date the organization was created on, time in ms, e.g.: 1372755998542\n\nname\n:  The name of the organization\n\nphone\n:  The organization's contact phone\n\nThe __op__ is an operation and is one of:\n\neq\n:  Equal\n\nne\n:  Not equal\n\ngt\n:  Greater than\n\nlt\n:  Less than\n\nge\n:  Greater than or equal\n\nle\n:  Less than or equal\n\nlike\n:  Like\n\ngele\n:  Greater than or equal to, and less than or equal to; the __value__ should be a lower-minimum and upper-maximum separated by comma, e.g: value=5,10\n\nThe __value__ will be compared against the __field__, according to the supplied __op__. ",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "field",
          "in" : "query",
          "description" : "Filter field name.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "op",
          "in" : "query",
          "description" : "Filter operation.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "value",
          "in" : "query",
          "description" : "Filter value",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Organization"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Organizations" ],
        "summary" : "Creates a new organization",
        "description" : "Creates a new organization.  Only API Administrators may create organizations. Data posted in this request may include custom properties defined in app.config",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Organization"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/Organization"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "413" : {
            "description" : "Request Entity Too Large"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/organizations/{id}" : {
      "get" : {
        "tags" : [ "Organizations" ],
        "summary" : "Get an organization",
        "description" : "Retrieves the details of an organization.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The organization ID to be returned.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Organization"
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Organizations" ],
        "summary" : "Update the details of an organization",
        "description" : "Updates an organization.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The organization ID to update.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Organization"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Organization"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Organizations" ],
        "summary" : "Delete an organization",
        "description" : "Deletes an organization. Deleting an organization will result in all users and associated applications being deleted",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The organization ID to delete.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/organizations/{id}/apis" : {
      "get" : {
        "tags" : [ "Organizations" ],
        "summary" : "Get the list of approved APIs for the organization",
        "description" : "Get the list of aproved APIs for the organization",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The organization ID who's approved APIs are required.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/APIAccess"
            }
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Organizations" ],
        "summary" : "Grants access to an API for an organization.",
        "description" : "Grants access to an API for an organization.  Only the API Admin may call this method.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The organization ID requesting access to an API.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/APIAccess"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/APIAccess"
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/organizations/{id}/apis/{apiAccessId}" : {
      "put" : {
        "tags" : [ "Organizations" ],
        "summary" : "Updates access to an API for an organization",
        "description" : "Updates access to an API for an organization.  Only __enabled__ may be modified, and disabling access will also disable access to all applications that may be using it.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The organization ID.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "apiAccessId",
          "in" : "path",
          "description" : "The API access ID.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/APIAccess"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/APIAccess"
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Organizations" ],
        "summary" : "Deletes access to an API for an organization",
        "description" : "Permanently deletes access to an API for an organization.  Deleting API access will also delete API access to any application.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The organization ID.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "apiAccessId",
          "in" : "path",
          "description" : "The API access ID.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content",
            "schema" : {
              "$ref" : "#/definitions/APIAccess"
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/organizations/{id}/tokens" : {
      "get" : {
        "tags" : [ "Organizations" ],
        "summary" : "Get registration codes for an organization",
        "description" : "Retrieves the registration codes for an organization.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The organization ID whos tokens are to be returned.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RegistrationToken"
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Organizations" ],
        "summary" : "Create a registration code",
        "description" : "Create a registration code for self service onboarding of users to the organization",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The organization ID to be associated with the registration code.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RegistrationToken"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/RegistrationToken"
            }
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/organizations/{id}/tokens/{token}" : {
      "get" : {
        "tags" : [ "Organizations" ],
        "summary" : "Get registration code",
        "description" : "Retrieves the registration code.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The organization ID associated with the registration code.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "token",
          "in" : "path",
          "description" : "The registration code to be returned.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RegistrationToken"
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Organizations" ],
        "summary" : "Update a registration code",
        "description" : "Update a registration code for self service onboarding of users to the organization",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The organization ID to be associated with the registration code.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "token",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RegistrationToken"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/RegistrationToken"
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Organizations" ],
        "summary" : "Delete the registration code",
        "description" : "Delete the registration code.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The organization ID associated with the registration code.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "token",
          "in" : "path",
          "description" : "The registration code to be deleted.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/title" : {
      "get" : {
        "tags" : [ "API Manager Services" ],
        "summary" : "Gets the API Manager's title",
        "description" : "Returns the API Manager title.  Does not require authentication.",
        "produces" : [ "text/plain" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/config" : {
      "get" : {
        "tags" : [ "API Manager Services" ],
        "summary" : "Gets API Manager configuration",
        "description" : "Returns an API Manager configuration object.",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Config"
            }
          },
          "403" : {
            "description" : "Forbidden"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "API Manager Services" ],
        "summary" : "Updates the API Manager configuration",
        "description" : "Updates the API Manager configuration.  Only the API Administrator may call this method.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Config"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Config"
            }
          },
          "403" : {
            "description" : "Forbidden"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/license" : {
      "get" : {
        "tags" : [ "API Manager Services" ],
        "summary" : "Checks that the API Manager has a valid license",
        "description" : "Returns an API Manager license configuration object.  Does not require authentication.",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/LicenseConfig"
            }
          }
        }
      }
    },
    "/appinfo" : {
      "get" : {
        "tags" : [ "API Manager Services" ],
        "summary" : "Gets API Manager feature information.",
        "description" : "Returns an API Manager configuration object describing the application.",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Config"
            }
          }
        }
      }
    },
    "/sysconfig" : {
      "get" : {
        "tags" : [ "API Manager Services" ],
        "summary" : "Gets API Manager system configuration",
        "description" : "Returns an API Manager system configuration object.",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/SystemConfig"
            }
          },
          "403" : {
            "description" : "Forbidden"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "API Manager Services" ],
        "summary" : "Update API Manager system configuration",
        "description" : "Returns an API Manager system configuration object.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/SystemConfig"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/SystemConfig"
            }
          },
          "403" : {
            "description" : "Forbidden"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/policies" : {
      "get" : {
        "tags" : [ "API Manager Services" ],
        "summary" : "Gets a list of the specified policies",
        "description" : "Returns the list of policies (of the specified type) that are available to Portal-registered APIs.  __type__ is one of: faulthandler, globalrequest, globalresponse, request, routing, response, promotion, authentication or token-info.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "type",
          "in" : "query",
          "description" : "The type of policy to return. Possible values are: 'faulthandler', 'globalrequest', 'globalresponse', 'request', 'routing', 'response', 'authentication', 'oauthtokeninfo', 'promotion'",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ReferencedEntity"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/tokenstores" : {
      "get" : {
        "tags" : [ "API Manager Services" ],
        "summary" : "Gets a list of Token Stores",
        "description" : "Returns a list of Token Stores to be used by OAuth Security Devices for inbound security on portal-registered APIs.",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ReferencedEntity"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/certinfo" : {
      "post" : {
        "tags" : [ "API Manager Services" ],
        "summary" : "Extracts certificate information from the supplied data",
        "description" : "Extracts certificate information from the supplied data.",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "username",
          "in" : "formData",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "file",
          "in" : "formData",
          "required" : false,
          "type" : "file"
        }, {
          "name" : "passphrase",
          "in" : "formData",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "inbound",
          "in" : "formData",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "outbound",
          "in" : "formData",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CACert"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/filedata" : {
      "post" : {
        "tags" : [ "API Manager Services" ],
        "summary" : "Returns the DataURI representation of the uploaded file",
        "description" : "Returns the DataURI representation of the uploaded file.",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "file",
          "in" : "formData",
          "required" : false,
          "type" : "file"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Bad Request"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/alerts" : {
      "get" : {
        "tags" : [ "API Manager Services" ],
        "summary" : "Gets the alerts configured for the API Manager",
        "description" : "Gets the alerts configured for the API Manager that shows which alerts are enabled/disabled for the application.  Only the API Administrator may call this method.",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AlertConfig"
            }
          },
          "403" : {
            "description" : "Forbidden"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "API Manager Services" ],
        "summary" : "Updates the API Manager alerts configuration",
        "description" : "Updates the API Manager alerts configuration.  Only the API Administrator may call this method.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AlertConfig"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/AlertConfig"
            }
          },
          "403" : {
            "description" : "Forbidden"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/listeners" : {
      "get" : {
        "tags" : [ "API Manager Services" ],
        "summary" : "Gets the API Manager listeners",
        "description" : "Returns a list of API Manager listeners.",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/PortalTrafficListener"
              }
            }
          },
          "403" : {
            "description" : "Forbidden"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/remotehosts" : {
      "get" : {
        "tags" : [ "API Manager Services" ],
        "summary" : "Returns a list of remote hosts",
        "description" : "Returns a list of API Manager-registered remote hosts.",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RemoteHost"
              }
            }
          },
          "403" : {
            "description" : "Forbidden"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "API Manager Services" ],
        "summary" : "Creates a new remote host",
        "description" : "Creates a new API Manager-regsitered remote host. Dynamically updates the API Gateway runtime so that the remote host is available.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RemoteHost"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/RemoteHost"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/remotehosts/{id}" : {
      "put" : {
        "tags" : [ "API Manager Services" ],
        "summary" : "Updates a remote host",
        "description" : "Updates an API Manager-registered remote host. Dynamically updates the API Gateway runtime so that the new remote host settings are available.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The remote host identifier.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RemoteHost"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/RemoteHost"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "API Manager Services" ],
        "summary" : "Deletes a remote host.",
        "description" : "Deletes an API Manager-registered remote host. Dynamically removes the remote host from the API Gateway runtime.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The remote host identifier.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Forbidden"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/topology" : {
      "post" : {
        "tags" : [ "API Manager Services" ],
        "summary" : "Retrieves the Topology from the specified Admin Node Manager",
        "description" : "Retrieves the Topology from the specified Admin Node Manager",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "host",
          "in" : "formData",
          "description" : "The host on which the Admin Node Manager is running",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "port",
          "in" : "formData",
          "description" : "The Admin Node Manager management port.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "username",
          "in" : "formData",
          "description" : "Username to use for Admin Node Manager authentication .",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "password",
          "in" : "formData",
          "description" : "Password to use for Admin Node Manager authentication.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Topology"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/service-discovery/{instance}/{type}" : {
      "post" : {
        "tags" : [ "API Manager Services" ],
        "summary" : "Returns a list of services hosted on the specified Gateway instance",
        "description" : "Returns a list of services hosted on the specified Gateway instance.  __type__ is one of: rest, wsdl.",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "instance",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "type",
          "in" : "path",
          "description" : "The type of service to return. Possible values are: 'rest', 'wsdl'",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "host",
          "in" : "formData",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "port",
          "in" : "formData",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "username",
          "in" : "formData",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "password",
          "in" : "formData",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Swagger"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/connectors" : {
      "get" : {
        "tags" : [ "API Manager Services" ],
        "summary" : "Return a list of API connectors",
        "description" : "Return a list of API connectors.",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "object"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/connectors/{connectorId}" : {
      "get" : {
        "tags" : [ "API Manager Services" ],
        "summary" : "Return a list of APIs for the specified connector",
        "description" : "Return a list of APIs for the specified connector.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "connectorId",
          "in" : "path",
          "description" : "ID of the connector for which APIs should be returned. Connector IDs can be retrieved by calling /connectors.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "object"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/connectors/{connectorId}/login" : {
      "post" : {
        "tags" : [ "API Manager Services" ],
        "summary" : "Login to an external service from which APIs will be imported",
        "description" : "Login to an external service from which APIs will be imported.",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "connectorId",
          "in" : "path",
          "description" : "ID of the API connector. Connector IDs can be retrieved by calling /connectors.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "username",
          "in" : "formData",
          "description" : "External service username",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "password",
          "in" : "formData",
          "description" : "External service password",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "string"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/oauthclientprofiles" : {
      "get" : {
        "tags" : [ "API Manager Services" ],
        "summary" : "Get a list of OAuth profiles for use in backend API authorisation",
        "description" : "Return a list of OAuth Client Profiles for use in authorising API access to backend APIs.",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ReferencedEntity"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/config/customproperties" : {
      "get" : {
        "tags" : [ "API Manager Services" ],
        "summary" : "Gets API Manager custom property metadata",
        "description" : "Returns an API Manager configuration object containing the metadata for the custom properties defined in the API Manager app.config.",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/CustomPropertiesConfig"
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/proxies/{id}" : {
      "get" : {
        "tags" : [ "API Proxy Registration" ],
        "summary" : "Gets a frontend API by ID.",
        "description" : "",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The frontend API identifier.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/VirtualizedAPI"
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "API Proxy Registration" ],
        "summary" : "Updates an API proxy.",
        "description" : "Updates an API proxy definition. Data in this request may include custom properties defined in app.config.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The frontend API identifier.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The virtualized API to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VirtualizedAPI"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/VirtualizedAPI"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "API Proxy Registration" ],
        "summary" : "Deletes an API proxy.",
        "description" : "Deletes an API proxy, removing all API access in the process.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/proxies/{id}/image" : {
      "get" : {
        "tags" : [ "API Proxy Registration" ],
        "summary" : "Gets the image for the API.",
        "description" : "Returns the jpeg image associated with the API.",
        "produces" : [ "image/jpeg" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The frontend API identifier.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "API Proxy Registration" ],
        "summary" : "Set the image for the frontend API.",
        "description" : "Set the jpeg image to be associated with the API.",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The frontend API identifier.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "file",
          "in" : "formData",
          "required" : false,
          "type" : "file"
        }, {
          "name" : "type",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "413" : {
            "description" : "Request Entity Too Large"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/proxies/{id}/applications" : {
      "get" : {
        "tags" : [ "API Proxy Registration" ],
        "summary" : "Gets a list of Applications that have been granted access to the specified frontend API.",
        "description" : "",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The frontend API identifier.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Application"
              }
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/proxies" : {
      "get" : {
        "tags" : [ "API Proxy Registration" ],
        "summary" : "Queries a list of frontend API.",
        "description" : "Returns a list of API that are visible to the authenticated user.  The list of API can be filtered using the expression: field=__field__&op=__op__&value=__value__.  Optionally, you can add a logical operation for all expressions, using the form: &lop=AND|OR.  By default, the logical operation is AND.  Multiple expression filters can be used, specifying field, op, and value for each filter. The __field__ is one of:\n\nname\n:      The name of the API\n\napiid\n:      Matches the API if the API is virtualized from the specified backend API\n\ncreatedOn\n:      The date the virtualized API was created on, time in ms, e.g.: 1372755998542\n\ndeprecated\n:      The deprecated state of the API, one of: true or false\n\nretired\n:      The retired state of the API, one of: true or false\n\nstate\n:      The API's state, one of: unpublished, pending, or published\n\npath\n:      The path that services this virtualized API.\n\nThe __op__ is an operation and is one of:\n\neq\n:      Equal\n\nne\n:      Not equal\n\ngt\n:      Greater than\n\nlt\n:      Less than\n\nge\n:      Greater than or equal\n\nle\n:      Less than or equal\n\nlike\n:      Like\n\ngele\n:      Greater than or equal to, and less than or equal to; the __value__ should be a lower-minimum and upper-maximum separated by comma, e.g: value=5,10\n\nThe __value__ will be compared against the __field__, according to the supplied __op__. ",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "field",
          "in" : "query",
          "description" : "Filter field name.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "op",
          "in" : "query",
          "description" : "Filter operation.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "value",
          "in" : "query",
          "description" : "Filter value",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/VirtualizedAPI"
              }
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "API Proxy Registration" ],
        "summary" : "Creates a new API proxy from a backend API.",
        "description" : "The [VirtualizedAPI apiId](VirtualizedAPI.html#apiId) is required.  If creating the APIas an API administrator, the [VirtualizedAPI organizationId](VirtualizedAPI.html#organizationId) must also be specified.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The frontend API to create.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VirtualizedAPI"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/VirtualizedAPI"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/proxies/{id}/publish" : {
      "post" : {
        "tags" : [ "API Proxy Registration" ],
        "summary" : "Publish the API.",
        "description" : "If called by an API Administrator, then the API state will be _published_, otherwise the API state will be _pending_, and an email notification will be sent to the API Administrators, notifying them of the event. Optionally, on publishing, a new **name** for the API may be specified.  Similarly, an optional **vhost** may be specified.  The **vhost** is an externally resolvable virtual host from which the API will be accessed.",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The frontend API identifier.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "formData",
          "description" : "The name on which to publish this API.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "vhost",
          "in" : "formData",
          "description" : "The optional virtual host on which to publish this API.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/VirtualizedAPI"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/proxies/{id}/unpublish" : {
      "post" : {
        "tags" : [ "API Proxy Registration" ],
        "summary" : "Unpublish the API.",
        "description" : "Only an API Administrator may unpublish an API.  When an API is _unpublished_, all access to the API is revoked from all applications, and all organizations, save the API development organization that owns the API.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The frontend API identifier.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/VirtualizedAPI"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/proxies/{id}/deprecate" : {
      "post" : {
        "tags" : [ "API Proxy Registration" ],
        "summary" : "Deprecates the API.",
        "description" : "Only an API Administrator may deprecate an API, and only _published_ API may be deprecated.  When an API is _deprecated_, the API can still be used, but users will be informed that the API has been deprecated.  Optionally, a **retirementDate** may be set which will schedule the API to be automatically retired and removed from use. If specified, the **retirementDate** should be in the ISO-8601 format of yyyy-MM-ddTHH:mm:ssZ (e.g. 2015-01-01T12:00:00Z).",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The frontend API identifier.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "retirementDate",
          "in" : "formData",
          "description" : "Optional API retirement date specified in supported ISO-8601 format.  Set to the past to retire immediately.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/VirtualizedAPI"
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/proxies/{id}/undeprecate" : {
      "post" : {
        "tags" : [ "API Proxy Registration" ],
        "summary" : "Undeprecates the API.",
        "description" : "Only an API Administrator may undeprecate an API, and only _published_ API, that are deprecated, may be undeprecated.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The frontend API identifier.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/VirtualizedAPI"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/proxies/export" : {
      "post" : {
        "tags" : [ "API Proxy Registration" ],
        "summary" : "Creates an API export.",
        "description" : "Creates an export for use in promoting the API to a new environment.  The export contains the frontend [VirtualizedAPI](VirtualizedAPI.html), their settings, and all backend [APIDefinition](APIDefinition.html) that are required for the frontend API.  If **password** is supplied, the exported file will be encrypted with the password.  If successful, returns **201 Created**, and the HTTP `Location` header contain the of the URL of the export. The export is temporary, and may only be downloaded once.",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "formData",
          "description" : "The frontend API identifier(s) to export.",
          "required" : true,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "password",
          "in" : "formData",
          "description" : "Encrypts the list of API using the password.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "filename",
          "in" : "formData",
          "description" : "Optional filename to use in response.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "201" : {
            "description" : "Created"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/proxies/export/{id}" : {
      "get" : {
        "tags" : [ "API Proxy Registration" ],
        "summary" : "Downloads an API export.",
        "description" : "The API export is produced from [/exportApis](APIProxyRegistration.html#APIProxyRegistrationexportApis).  If __filename__ is supplied, the download will use it as the `Content-Disposition` filename attachment.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The export identifier.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "filename",
          "in" : "query",
          "description" : "The export will be downloaded using a Content-Dispostion using the supplied filename",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/APIPromotion"
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/proxies/importFromUrl" : {
      "post" : {
        "tags" : [ "API Proxy Registration" ],
        "summary" : "Imports a previously exported API.",
        "description" : "Imports API, previously exported using [/exportApis](APIProxyRegistration.html#APIProxyRegistrationexportApis).  If the API was exported using a password, then the file is encrypted, and a **password** argument must be provided to decrypt.  The import will create  [VirtualizedAPI](VirtualizedAPI.html), their settings, and all backend [APIDefinition](APIDefinition.html) necessary to support the frontend API.  The **url** should be a [data URI scheme](http://en.wikipedia.org/wiki/Data_URI_scheme).",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "formData",
          "description" : "The organization identifier.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "url",
          "in" : "formData",
          "description" : "The data URI.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "password",
          "in" : "formData",
          "description" : "Optional password to decrypt the import file.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "201" : {
            "description" : "Created"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/proxies/import" : {
      "post" : {
        "tags" : [ "API Proxy Registration" ],
        "summary" : "Imports a previously exported API.",
        "description" : "Imports API, previously exported using [/exportApis](APIProxyRegistration.html#APIProxyRegistrationexportApis).  If the API was exported using a password, then the file is encrypted, and a **password** argument must be provided to decrypt.  The import will create  [VirtualizedAPI](VirtualizedAPI.html), their settings, and all backend [APIDefinition](APIDefinition.html) necessary to support the frontend API.  This method is similar to [/importFromUrl](APIProxyRegistration.html#APIProxyRegistrationimportFromUrl), save that this method supports traditional form-based file upload, using `multipart/form-data`.",
        "consumes" : [ "multipart/form-data" ],
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "formData",
          "description" : "The organization identifier.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "password",
          "in" : "formData",
          "description" : "Optional password to decrypt the import file.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "file",
          "in" : "formData",
          "description" : "The data file to import.",
          "required" : true,
          "type" : "file"
        }, {
          "name" : "file",
          "in" : "formData",
          "description" : "The data file to import.",
          "required" : true,
          "type" : "file"
        } ],
        "responses" : {
          "201" : {
            "description" : "Created"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/proxies/promote" : {
      "post" : {
        "tags" : [ "API Proxy Registration" ],
        "summary" : "Invokes the internal API promotion policy for the specified API.",
        "description" : "In API Manager, API promotion must first be enabled in Settings. Also, in Policy Studio (Server Settings -> API Manager -> API Promotion) a promotion policy must be selected. By default a sample promotion policy is installed",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "parameters" : [ {
          "name" : "apiId",
          "in" : "formData",
          "description" : "The frontend API identifier(s) to promote",
          "required" : true,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/proxies/upgrade/{id}" : {
      "post" : {
        "tags" : [ "API Proxy Registration" ],
        "summary" : "Upgrades an existing frontend API to a newer frontend API.",
        "description" : "During an API lifecycle, it is necessary to upgrade users to use a newer frontend API.  The idea being that the old frontend API should be phased-out, and developers should move their applications to use the newer frontend API. This method assigns all organizations and applications the same access to the new frontend API (identified by **upgradeApiId**) that they have to the old API (identified by **id**). Optionally, the old frontend API may be deprecated or retired using **deprecate**, **retire**, or scheduled to be retired using **retirementDate**. If specified, the **retirementDate** should be in the ISO-8601 format of yyyy-MM-ddTHH:mm:ssZ (e.g. 2015-01-01T12:00:00Z).",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "upgradeApiId",
          "in" : "formData",
          "description" : "The id of the frontend API which will be used to upgrade this virtualized API",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deprecate",
          "in" : "formData",
          "description" : "Specifies whether or not the API being upgraded should be depreated",
          "required" : true,
          "type" : "boolean"
        }, {
          "name" : "retire",
          "in" : "formData",
          "description" : "Specifies whether or not the API being upgraded should be retired",
          "required" : true,
          "type" : "boolean"
        }, {
          "name" : "retirementDate",
          "in" : "formData",
          "description" : "Specifies the retirement date of the the API being upgraded if its being retired",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/proxies/grantaccess" : {
      "post" : {
        "tags" : [ "API Proxy Registration" ],
        "summary" : "Macro function to grant API access.",
        "description" : "Function to macro-apply access to selected API.  The access can be granted to organizations or entities having access to specified API. If **action** is _all_orgs_, access will be granted to all organizations; if **action** is _orgs_, access will be granted to the organization(s) specified by **grantOrganizations**; if **action** is _orgs\\_with\\_apis_, access will be granted to the organizations with access to the apis specified by **grantApis**.",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "parameters" : [ {
          "name" : "action",
          "in" : "formData",
          "description" : "Grant action to perform. Possible values are: all\\_orgs, orgs, and orgs\\_with\\_apis.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "apiId",
          "in" : "formData",
          "description" : "List of API ID to which access will be granted.",
          "required" : true,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "grantOrgId",
          "in" : "formData",
          "description" : "List of target organization ID to which access to _apiId_ will be granted (action is _orgs_)",
          "required" : true,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "grantApiId",
          "in" : "formData",
          "description" : "List of API ID to which access to to _apiId_ will be granted (action is _orgs\\_with\\_apis_).",
          "required" : true,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/proxies/{id}/operations/{operationId}" : {
      "get" : {
        "tags" : [ "API Proxy Registration" ],
        "summary" : "Gets an API method by ID.",
        "description" : "",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The frontend API identifier.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "operationId",
          "in" : "path",
          "description" : "The frontend API method identifier.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/VirtualizedAPIMethod"
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "API Proxy Registration" ],
        "summary" : "Updates an API proxy operation.",
        "description" : "",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The frontend API identifier.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "operationId",
          "in" : "path",
          "description" : "The frontend API method identifier.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The method to update.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VirtualizedAPIMethod"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/VirtualizedAPIMethod"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "API Proxy Registration" ],
        "summary" : "Deletes an API method by ID.",
        "description" : "",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The frontend API identifier.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "operationId",
          "in" : "path",
          "description" : "The frontend API method identifier.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/proxies/{id}/operations" : {
      "get" : {
        "tags" : [ "API Proxy Registration" ],
        "summary" : "Gets a list of methods that are avilable to the API proxy.",
        "description" : "",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The frontend API identifier.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/VirtualizedAPIMethod"
              }
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/quotas/{id}" : {
      "get" : {
        "tags" : [ "Quotas" ],
        "summary" : "Returns the quota with the given ID",
        "description" : "Returns a quota.  This method may be called by any member of the Portal, however, only API Administrators may retrieve the system quota.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The quota ID to retrieve.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content",
            "schema" : {
              "$ref" : "#/definitions/QuotaDTO"
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Quotas" ],
        "summary" : "Updates a quota",
        "description" : "Updates an existing quota. Only API Administrators may update quotas.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/QuotaDTO"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/QuotaDTO"
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Quotas" ],
        "summary" : "Deletes a quota",
        "description" : "Deletes a quota.  Only API Administrators may update quotas.  Default system and application quotas may not be deleted.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The quota ID to delete.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/quotas" : {
      "get" : {
        "tags" : [ "Quotas" ],
        "summary" : "Returns all quotas",
        "description" : "This method may be called by any member of the Portal, however only the API Administrator may retrieve the system quota.",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "204" : {
            "description" : "No Content",
            "schema" : {
              "$ref" : "#/definitions/QuotaDTO"
            }
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Quotas" ],
        "summary" : "Creates a new quota",
        "description" : "Creates a new quota.  Only API Administrators may create quotas.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/QuotaDTO"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/QuotaDTO"
            }
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/apirepo/{id}" : {
      "get" : {
        "tags" : [ "API Repository" ],
        "summary" : "Get an API by ID",
        "description" : "",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/APIDefinition"
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "API Repository" ],
        "summary" : "Updates an API",
        "description" : "",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The API identifier.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/APIDefinition"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/APIDefinition"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "API Repository" ],
        "summary" : "Deletes an API.",
        "description" : "Deletes a backend API.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The API identifier.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/apirepo/{id}/methods" : {
      "get" : {
        "tags" : [ "API Repository" ],
        "summary" : "Queries the list of API methods",
        "description" : "Get the list of API methods from the API repository.  The list of methods can be filtered using the expression: field=__field__&op=__op__&value=__value__.  Optionally, you can add a logical operation for all expressions, using the form: &lop=AND|OR.  By default, the logical operation is AND.  Multiple expression filters can be used, specifying field, op, and value for each filter. The __field__ is one of:\n\nid\n:    Matches the API by ID\n\nname\n:    Matches the API by name\n\nThe __op__ is an operation and is one of:\n\neq\n:    Equal\n\nne\n:    Not equal\n\ngt\n:     Greater than\n\nlt\n:     Less than\n\nge\n:     Greater than or equal\n\nle\n:     Less than or equal\n\nlike\n:    Like\n\ngele\n:     Greater than or equal to, and less than or equal to; the __value__ should be a lower-minimum and upper-maximum separated by comma, e.g: value=5,10\n\nThe __value__ will be compared against the __field__, according to the supplied __op__.\n\n",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "field",
          "in" : "query",
          "description" : "Filter field name.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "op",
          "in" : "query",
          "description" : "Filter operation.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "value",
          "in" : "query",
          "description" : "Filter value",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Method"
              }
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "API Repository" ],
        "summary" : "Create an API method",
        "description" : "",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The API identifier to create a method.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "method",
          "description" : "The method to create.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Method"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/Method"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/apirepo" : {
      "get" : {
        "tags" : [ "API Repository" ],
        "summary" : "Get the list of API",
        "description" : "Get the list of API from the API repository.  The list of API can be filtered using the expression: field=__field__&op=__op__&value=__value__.  Optionally, you can add a logical operation for all expressions, using the form: &lop=AND|OR.  By default, the logical operation is AND.  Multiple expression filters can be used, specifying field, op, and value for each filter. The __field__ is one of:\n\nid\n:    Matches the API by ID\n\nname\n:    Matches the API by name\n\ndescription\n:    Matches the API by description\n\nversion\n:    Matches the API by version\n\ncreatedOn\n:      The date the backend API was created/imported on, time in ms, e.g.: 1372755998542\n\nresourcePath\n:      Matches the API by resourcePath\n\nbasePath\n:      Matches the API by basePath\n\norganization\n:      Matches the API by it's organization identifier\n\nThe __op__ is an operation and is one of:\n\neq\n:    Equal\n\nne\n:    Not equal\n\ngt\n:     Greater than\n\nlt\n:     Less than\n\nge\n:     Greater than or equal\n\nle\n:     Less than or equal\n\nlike\n:    Like\n\ngele\n:     Greater than or equal to, and less than or equal to; the __value__ should be a lower-minimum and upper-maximum separated by comma, e.g: value=5,10\n\nThe __value__ will be compared against the __field__, according to the supplied __op__.\n\n",
        "produces" : [ "application/json", "application/octet-stream" ],
        "parameters" : [ {
          "name" : "field",
          "in" : "query",
          "description" : "Filter field name.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "op",
          "in" : "query",
          "description" : "Filter operation.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "value",
          "in" : "query",
          "description" : "Filter value",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/APIDefinition"
              }
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "API Repository" ],
        "summary" : "Create an API definition",
        "description" : "When creating an API, the __name__ and __basePath__ are required.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "api",
          "description" : "The API resource to create.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/APIDefinition"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/APIDefinition"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/apirepo/importFromUrl" : {
      "post" : {
        "tags" : [ "API Repository" ],
        "summary" : "Create an API by loading a file from URL.",
        "description" : "Imports an API definition from a valid standard Swagger, WSDL or WADL definition from the specified __url__.  It is possible to supply an optional __username__ and __password__ if the __url__ requires HTTP Basic authentication.  On import, the original API definition is retained, but the API is converted to an internal format for processing. The API name currently defaults to the filename but this will be deprecated in a future release. The name parameter should be used to name the API and will be required in a future release.",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "formData",
          "description" : "The API development organization ID that owns the import.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "formData",
          "description" : "The name of the API.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fileName",
          "in" : "formData",
          "description" : "The file name of the import.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "type",
          "in" : "formData",
          "description" : "The type of import, one of: swagger, wadl.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "url",
          "in" : "formData",
          "description" : "The URL to import.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "username",
          "in" : "formData",
          "description" : "HTTP Basic username to use for connection.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "password",
          "in" : "formData",
          "description" : "HTTP Basic password to use for connection.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/APIDefinition"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/apirepo/{id}/download" : {
      "get" : {
        "tags" : [ "API Repository" ],
        "summary" : "Downloads an API by ID.",
        "description" : "Downloads an API by ID.  If __filename__ is not supplied, the API name will be used.  If the API was imported using [/import](#importApisFromFile) or [/import](#createApiFromUrl), then it is possible to download the original API definition by setting __original__ to __true__.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "filename",
          "in" : "query",
          "description" : "Override the default filename for download",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "original",
          "in" : "query",
          "description" : "If true, and the API was imported, this will download the original definition",
          "required" : true,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/apirepo/{id}/methods/{methodId}" : {
      "get" : {
        "tags" : [ "API Repository" ],
        "summary" : "Get API method by ID.",
        "description" : "Retrieves a method for a given API.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The API identifier.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "methodId",
          "in" : "path",
          "description" : "The API method ID.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Method"
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "API Repository" ],
        "summary" : "Update an API method",
        "description" : "",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The API identifier.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "methodId",
          "in" : "path",
          "description" : "The method identifier.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "method",
          "description" : "The method to update.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Method"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/Method"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "API Repository" ],
        "summary" : "Delete an API method",
        "description" : "Deletes a backend API method.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The API identifier.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "methodId",
          "in" : "path",
          "description" : "The method identifier.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/apirepo/importFromGw" : {
      "post" : {
        "tags" : [ "API Repository" ],
        "summary" : "Create an API definition by importing a PolicyStudio-registered web service (REST) hosted on the the API Gateway",
        "description" : "Imports an API definition from a Policy Studio REST service hosted on the API Gateway. On import, a Swagger representation of the original API definition is retained, but the API is converted to an internal format for processing.",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "formData",
          "description" : "The id of the PolicyStudio-registered service to import.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "formData",
          "description" : "The service name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "organizationId",
          "in" : "formData",
          "description" : "The API development organization ID that owns the import.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "instance",
          "in" : "formData",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "host",
          "in" : "formData",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "port",
          "in" : "formData",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "username",
          "in" : "formData",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "password",
          "in" : "formData",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/APIDefinition"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/apirepo/importFromExternal" : {
      "post" : {
        "tags" : [ "API Repository" ],
        "summary" : "Create one or more backend APIs for an external service",
        "description" : "Create one or more backend APIs for an external service. External APIs are imported via a connector. If the connector configuration specifies that all external APIs should be merged into a single new backend API, the name and description parameters are applied to this new API. Alternatively, if the connector specifies that a separate backend API should be created for each external API, the name and description parameters are ignored, and the names and descriptions of the new backend APIs are taken from the external service definitions.",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "formData",
          "description" : "The API development organization that owns the new APIs",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "connectorId",
          "in" : "formData",
          "description" : "The API connector through which new APIs should be created",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "formData",
          "description" : "The name of the merged API (see description)",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "description",
          "in" : "formData",
          "description" : "A description of the merged API (see description)",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "api",
          "in" : "formData",
          "description" : "List of external APIs to be imported",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/APIDefinition"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/apirepo/import" : {
      "post" : {
        "tags" : [ "API Repository" ],
        "summary" : "Create an API by uploading a file",
        "description" : "Imports an API definition from a valid standard Swagger or WADL definition.  On import, the original API definition is retained, but the API is converted to an internal format for processing.",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "formData",
          "description" : "The API development organization ID that owns the import.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "formData",
          "description" : "The API name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "type",
          "in" : "formData",
          "description" : "The type of import, one of: swagger, wadl.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "file",
          "in" : "formData",
          "description" : "The API definition file to import",
          "required" : true,
          "type" : "file"
        }, {
          "name" : "file",
          "in" : "formData",
          "description" : "The API definition file to import",
          "required" : true,
          "type" : "file"
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/APIDefinition"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/users/{id}/image" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Get the image for a user",
        "description" : "Returns the jpeg image associated with an user.",
        "produces" : [ "image/jpeg" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The user ID whos image is to be returned",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Users" ],
        "summary" : "Set the image for a user",
        "description" : "Set the jpeg image to be associated with a user.",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The user ID for which an image is to be updated",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "file",
          "in" : "formData",
          "description" : "The file input data",
          "required" : true,
          "type" : "file"
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "This value should be unset",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "file",
          "in" : "formData",
          "description" : "The file input data",
          "required" : true,
          "type" : "file"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "413" : {
            "description" : "Request Entity Too Large"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/users" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Obtains a list of users",
        "description" : "Returns a list of users that are visible to the authenticated user.  The list of users can be filtered using the expression: field=__field__&op=__op__&value=__value__. Optionally, you can add a logical operation for all expressions, using the form: &lop=AND|OR.  By default, the logical operation is AND. Multiple expression filters can be used, specifying field, op, and value for each filter. The __field__ is one of:\n\napiid\n:      Matches the user if the user has explicit access to application(s) that are using the API, specified by ID\n\nappid\n:      Matches the user if the user has explicit access to the application, specified by ID\n\ndescription\n:      The user's description\n\nemail\n:      The user's email address\n\nenabled\n:      The enabled state of the user, one of: enabled, disabled\n\ncreatedOn\n:      The date the user was created on, time in ms, e.g.: 1372755998542\n\nmobile\n:      The user's mobile phone\n\nname\n:      The name of the user\n\nloginName\n:      The login name of the user\n\norgid\n:      Matches the user if the user is a member of the organization, specified by ID\n\nphone\n:      The user's phone\n\nrole\n:      The user's role, one of: user or oadmin\n\nstate\n:      The user's current state, one of: approved, pending\n\nsurname\n:      The surname of the user\n\nThe __op__ is an operation and is one of:\n\neq\n:      Equal\n\nne\n:      Not equal\n\ngt\n:      Greater than\n\nlt\n:      Less than\n\nge\n:      Greater than or equal\n\nle\n:      Less than or equal\n\nlike\n:      Like\n\ngele\n:      Greater than or equal to, and less than or equal to; the __value__ should be a lower-minimum and upper-maximum separated by comma, e.g: value=5,10\n\nThe __value__ will be compared against the __field__, according to the supplied __op__.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "field",
          "in" : "query",
          "description" : "Filter field name.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "op",
          "in" : "query",
          "description" : "Filter operation.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "value",
          "in" : "query",
          "description" : "Filter value",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/User"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Users" ],
        "summary" : "Admin function to create a new user on the system",
        "description" : "Creates a new user on the system. Only Organization Administrators and API Manager Administrators may create users. Data posted in this request may include custom properties defined in app.config.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "413" : {
            "description" : "Request Entity Too Large"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/users/{id}/changepassword" : {
      "post" : {
        "tags" : [ "Users" ],
        "summary" : "Updates the password for a given user.",
        "description" : "The authenticated user must be API Manager Administrator or an Organization Administrator of the user's organization with the correct privileges to invoke this method.",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the user being updated.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "newPassword",
          "in" : "formData",
          "description" : "The new password of the user being updated.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not Found"
          },
          "400" : {
            "description" : "Bad Request"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/users/{id}" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Retrieves the details for a given user.",
        "description" : "Retrieves user details, given a user ID.  The API Manager Administrator may access all users, otherwise, the user ID must be a member of the authenticated user's own organization.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the user to be retreived.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Users" ],
        "summary" : "Updates the details for a given user.",
        "description" : "Updates user details, given a user ID.  The API Manager Administrator may update all users, otherwise, the user ID must be a member of the authenticated user's own organization and the authenticated user must be an Organization Administrator.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the user being updated.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "500" : {
            "description" : "Internal Server Error"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Users" ],
        "summary" : "Deletes a user.",
        "description" : "Deletes a user with the given user ID.  All the applications and keys associated with the deleted user remain in the organization and can be managed by the Organization Administrator or the API Administrator. The API Administrator can delete any user.  The Organization Administrators can only delete users belonging to their organizations..",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The user ID to delete",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/users/register" : {
      "post" : {
        "tags" : [ "Users" ],
        "summary" : "Register a new user.",
        "description" : "Allows a user to register for an account on the system. A validation email request is sent to the provided email address to confirm ownership. The email should contain a link to [/validateuser](#APIUsersvalidateUser) with appropriate parameters. User properties (including custom properties) may be supplied as form parameters. The method will return JSON, but optionally, redirect URLs may be specified for success and failure conditions. If redirect URLs are specified, they must be a known Static File listener configured in the gateway or the request will be rejected.",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "formData",
          "description" : "The name of the user to register.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "email",
          "in" : "formData",
          "description" : "The unique email address of the user to register.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "password",
          "in" : "formData",
          "description" : "The password of the user to register.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "token",
          "in" : "formData",
          "description" : "The registration token to use.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "success",
          "in" : "formData",
          "description" : "The redirect success location (e.g. '/registration-success')",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "failure",
          "in" : "formData",
          "description" : "The redirect failure location (e.g. '/registration-failed')",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "201" : {
            "description" : "Created"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "303" : {
            "description" : "See Other"
          }
        }
      }
    },
    "/users/{id}/approve" : {
      "post" : {
        "tags" : [ "Users" ],
        "summary" : "Grants approval to a request to create a new user on the system.",
        "description" : "Approving user must be API Manager Administrator or an Organization Administrator of the user's organization with the correct privileges to approve new user requests.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the user to be approved.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/users/forgotpassword" : {
      "post" : {
        "tags" : [ "Users" ],
        "summary" : "Allows a user to reset their password.",
        "description" : "When this method is invoked, an email is sent to the owner of _email_ to verify that they wish for their password to be reset. The owner of _email_ must click on a link to reset the password. The link should direct the user to [/resetpassword](#APIUsersresetForgottenPassword) with appropriate query paremeters. Redirect URLs may be specified for success and failure conditions. If redirect URLs are specified, they must be a known Static File listener configured in the gateway or the request will be rejected.",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "email",
          "in" : "formData",
          "description" : "The email address of the user.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "success",
          "in" : "formData",
          "description" : "The redirect success location (e.g. /request-forgotten-pw-success)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "failure",
          "in" : "formData",
          "description" : "The redirect failure location (e.g. /request-forgotten-pw-failed)",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "201" : {
            "description" : "Created"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "303" : {
            "description" : "See Other"
          }
        }
      }
    },
    "/users/validateuser" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Validates the user [/register](#APIUsersregisterUser) request.",
        "description" : "User validation code and email address are expected as query parameters.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "email",
          "in" : "query",
          "description" : "The email address of the user being validated.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "validator",
          "in" : "query",
          "description" : "Validation string for the user entry.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "303" : {
            "description" : "See Other"
          },
          "400" : {
            "description" : "Bad Request"
          }
        }
      }
    },
    "/users/resetpassword" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Validates the user [/forgotpassword](#APIUsersforgotUserPassword) password request.",
        "description" : "User validation code and email address are expected as query string parameters.  When invoked, an email will be sent to the user with their new password.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "email",
          "in" : "query",
          "description" : "The email address of the user being validated.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "validator",
          "in" : "query",
          "description" : "Validation string for the user entry.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "303" : {
            "description" : "See Other"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/users/{id}/resetpassword" : {
      "put" : {
        "tags" : [ "Users" ],
        "summary" : "Admin level function to reset the password for a given user.",
        "description" : "The authenticated user must be API Manager Administrator or an Organization Administrator of the user's organization with the correct privileges to invoke this method.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the user having password reset administratively.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "500" : {
            "description" : "Internal Server Error"
          },
          "404" : {
            "description" : "Not Found"
          },
          "400" : {
            "description" : "Bad Request"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/currentuser/changepassword" : {
      "post" : {
        "tags" : [ "Current User" ],
        "summary" : "Modify the current user's password",
        "description" : "Modify the password of the authenticated user",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "parameters" : [ {
          "name" : "oldPassword",
          "in" : "formData",
          "description" : "The user's old password",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "newPassword",
          "in" : "formData",
          "description" : "The user's new password",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/currentuser" : {
      "get" : {
        "tags" : [ "Current User" ],
        "summary" : "Get the current user",
        "description" : "Get the account details of the authenticated user",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Current User" ],
        "summary" : "Modify the current user",
        "description" : "Modify the account details of the authenticated user",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/discovery/scopes" : {
      "get" : {
        "tags" : [ "API Discovery" ],
        "summary" : "Retrieves every resource on the API Server that is protected by OAuth, and the scopes that cover those resources",
        "description" : "Retrieves every resource on the API Server that is protected by OAuth, and the scopes that cover those resources. Only API Administrators will be able to retrieve information.",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/OAuthProtectedResource"
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/discovery/swagger/apis/{id}/image" : {
      "get" : {
        "tags" : [ "API Discovery" ],
        "summary" : "Retrieves the API image",
        "description" : "",
        "produces" : [ "image/jpeg" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The API identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/discovery/swagger/apis/{id}/service-definition" : {
      "get" : {
        "tags" : [ "API Discovery" ],
        "summary" : "Retrieves the service definition of the API.",
        "description" : "",
        "produces" : [ "text/xml" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The API identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/discovery/swagger/api/id/{id}" : {
      "get" : {
        "tags" : [ "API Discovery" ],
        "summary" : "Retrieves an extended Swagger feed for the specified API.",
        "description" : "Retrieves an extended Swagger feed for the specified API. API Administrators will always see the API. Users will only see the API if it is available for their organization.If __filename__ is supplied, the download will use it as the `Content-Disposition` filename attachment.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The unique ID of the API to return",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "filename",
          "in" : "query",
          "description" : "Override the default filename for download",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "swaggerVersion",
          "in" : "query",
          "description" : "The Swagger version of the feed, either 1.1 (default), 2.0 or 3.0.",
          "required" : false,
          "type" : "string",
          "default" : "1.1"
        }, {
          "name" : "extensions",
          "in" : "query",
          "description" : "If true, extensions such as the x-axway object are returned in the Swagger definitions (default=true)",
          "required" : false,
          "type" : "boolean",
          "default" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/discovery/swagger/api/{name}" : {
      "get" : {
        "tags" : [ "API Discovery" ],
        "summary" : "Retrieves an extended Swagger feed for the specified API.",
        "description" : "Retrieves an extended Swagger feed for the specified API. API Administrators will always see the API. Users will only see the API if it is available for their organization.If __filename__ is supplied, the download will use it as the `Content-Disposition` filename attachment.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the API to return",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "filename",
          "in" : "query",
          "description" : "Override the default filename for download",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "apiVersion",
          "in" : "query",
          "description" : "The version of the API. Should always be provided if there is more than one version",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "swaggerVersion",
          "in" : "query",
          "description" : "The Swagger version of the feed, either 1.1 (default) or 2.0.",
          "required" : false,
          "type" : "string",
          "default" : "1.1"
        }, {
          "name" : "extensions",
          "in" : "query",
          "description" : "If true, extensions such as the x-axway object are returned in the Swagger definitions (default=true)",
          "required" : false,
          "type" : "boolean",
          "default" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ],
        "deprecated" : true
      }
    },
    "/discovery/oauthresources" : {
      "get" : {
        "tags" : [ "API Discovery" ],
        "summary" : "Gets a list OAuth protected resources and their associated scopes.",
        "description" : "Gets a list OAuth protected resources and their associated scopes.",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/discovery/apis" : {
      "get" : {
        "tags" : [ "API Discovery" ],
        "summary" : "Lists all APIs/services virtualised in the API Server.",
        "description" : "Lists all APIs/services virtualised in the API Server. API Administrators see all APIs/services. Users see APIs/services for their organization.",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/DiscoveryAPI"
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/discovery/swagger/apis" : {
      "get" : {
        "tags" : [ "API Discovery" ],
        "summary" : "Convenience method for retrieving all Swagger feeds for all virtualised services.",
        "description" : "Convenience method for retrieving all Swagger feeds for all virtualised services that are visible to the authenticated user.  The list of APIs can be filtered using the expression: field=__field__&op=__op__&value=__value__.  Optionally, you can add a logical operation for all expressions, using the form: &lop=AND|OR.  By default, the logical operation is AND.  Multiple expression filters can be used, specifying field, op, and value for each filter. The __field__ is one of:\n\nid\n:        Matches the API by the specified ID\n\nname\n:        Matches the API by the specified name\n\ndescription\n:        Matches the API by the specified description\n\nsummary\n:        Matches the API by the specified summary\n\nversion\n:        Matches the API by the specified version\n\ntype\n:        Matches the API by the specified type. Type can be 'rest' or 'wsdl'\n\nresourcepath\n:        Matches the API by the specified inbound path\n\ntaggroup\n:        Matches the API by the specified tag group\n\ntag\n:        Matches the API by the specified tag value\n\nmethodtaggroup\n:        Matches the API by the specified method tag group, i.e. if the API contains a method that contains a tag group matching that specified\n\nmethodtag\n:        Matches the API by the specified method tag value, i.e. if the API contains a method that contains a tag value matching that specified\n\nThe __op__ is an operation and is one of:\n\neq\n:    Equal\n\nne\n:    Not equal\n\ngt\n:     Greater than\n\nlt\n:     Less than\n\nge\n:     Greater than or equal\n\nle\n:     Less than or equal\n\nlike\n:    Like\n\ngele\n:     Greater than or equal to, and less than or equal to; the __value__ should be a lower-minimum and upper-maximum separated by comma, e.g: value=5,10\n\nThe __value__ will be compared against the __field__, according to the supplied __op__. ",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "swaggerVersion",
          "in" : "query",
          "description" : "The Swagger version",
          "required" : false,
          "type" : "string",
          "default" : "1.2"
        }, {
          "name" : "apiVersion",
          "in" : "query",
          "description" : "The Swagger API version",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "extensions",
          "in" : "query",
          "description" : "If true, extensions such as the x-axway object are returned in the Swagger definitions (default=true)",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "field",
          "in" : "query",
          "description" : "Filter field name.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "op",
          "in" : "query",
          "description" : "Filter operation.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "value",
          "in" : "query",
          "description" : "Filter value",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/discovery/sdk/{id}/{platform}" : {
      "get" : {
        "tags" : [ "API Discovery" ],
        "summary" : "Generates an SDK package for the specified API based on the type of the client requested",
        "description" : "Generates a client SDK package for the specified API based on the platform. Supported platform are Android, iOS-swift, NodeJS, Titanium",
        "produces" : [ "application/octet-stream" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The name of the API to generate the client SDK package for",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "platform",
          "in" : "path",
          "description" : "Generated client type, one of: android, iOS-swift, nodejS, titanium",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "packagename",
          "in" : "query",
          "description" : "Java package name generated only for Android platform. It must be a valid java package name.",
          "required" : false,
          "type" : "string",
          "default" : "com.axway"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/login" : {
      "post" : {
        "tags" : [ "Login" ],
        "summary" : "Logs a user, identified by _username_ and _password_, into the API Manager by creating unique a session cookie.  The _success_ parameter defaults to a named URL identified by \"/home\" and will return a redirect to the portal after login.  The _failure_ parameter is optional.  If _failure_ is not specified, and the login attempt fails, this method returns a JSON error response.  If _failure_ is specified, and the login attempt fails, then this method will redirect to a named URL, identified by \"/login-failed\".",
        "description" : "Logs a user, identified by _username_ and _password_, into the API Manager by creating unique a session cookie.  The _success_ parameter defaults to a named URL identified by \"/home\" and will return a redirect to the portal after login.  The _failure_ parameter is optional.  If _failure_ is not specified, and the login attempt fails, this method returns a JSON error response.  If _failure_ is specified, and the login attempt fails, then this method will redirect to a named URL, identified by \"/login-failed\".",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "username",
          "in" : "formData",
          "description" : "The login name of the authenticating user",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "password",
          "in" : "formData",
          "description" : "The password of the authenticating user",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "success",
          "in" : "formData",
          "description" : "The redirect success location (defaults to: /home)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "failure",
          "in" : "formData",
          "description" : "Optional redirect failure location (e.g. /login-failed",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "303" : {
            "description" : "Login successful. Redirects to home page"
          },
          "401" : {
            "description" : "The caller cannot be authenticated"
          },
          "403" : {
            "description" : "The caller is not allowed to access this resource"
          },
          "409" : {
            "description" : "Change password required"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        }
      },
      "delete" : {
        "tags" : [ "Login" ],
        "summary" : "Logout from API Manager",
        "description" : "Destroys the caller session with the API Manager.",
        "parameters" : [ ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    }
  },
  "securityDefinitions" : {
    "basic" : {
      "type" : "basic"
    }
  },
  "definitions" : {
    "Application" : {
      "type" : "object",
      "required" : [ "name", "organizationId" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "b76a3e23-deca-49ab-9682-79cd503b7e3a",
          "description" : "The unique identifier for the application",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "example" : "My First iPhone App",
          "description" : "The display name for the application"
        },
        "description" : {
          "type" : "string",
          "example" : "My First iPhone App which is a \"Hello World\" basic application",
          "description" : "Descriptive text for the application"
        },
        "organizationId" : {
          "type" : "string",
          "example" : "3e21b76a-defa-49ab-9682-a9cd60387e37",
          "description" : "The organization identifier to which the application belongs"
        },
        "phone" : {
          "type" : "string",
          "example" : "+1 877-564-7700",
          "description" : "Contact phone number of the application"
        },
        "email" : {
          "type" : "string",
          "example" : "support@acmecorp.com",
          "description" : "The contact email address associated with the application"
        },
        "createdBy" : {
          "type" : "string",
          "example" : "de077cd8-83b7-46d1-b06f-2eaaf1548898",
          "description" : "The unique identifier for user that created the application",
          "readOnly" : true
        },
        "managedBy" : {
          "type" : "array",
          "example" : [ "de077cd8-83b7-46d1-b06f-2eaaf1548898" ],
          "description" : "A list of unique identifier for users that manages the application",
          "items" : {
            "type" : "string"
          }
        },
        "createdOn" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1364407145121,
          "description" : "Epoch/Unix time stamp when the application was created",
          "readOnly" : true
        },
        "enabled" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Flag to indicate if this application is enabled or not"
        },
        "image" : {
          "type" : "string",
          "example" : "resources/photo.jpg",
          "description" : "URI of the image to be used for this application, this field only indicates that the application has an image assigned to it. In order to retrieve the actual image use the following URL /api/portal/applications/{id}/image/"
        },
        "state" : {
          "type" : "string",
          "example" : "approved",
          "description" : "Flag to indicate if an application has been approved by the API Manager admin or if delegated then the org admin"
        }
      },
      "description" : "API Manager application."
    },
    "PermissionDTO" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "46a6e874-a341-4c2d-870e-55e4c6ec27dc",
          "description" : "The permission identifier",
          "readOnly" : true
        },
        "userId" : {
          "type" : "string",
          "example" : "46a6e874-a341-4c2d-870e-55e4c6ec27dc",
          "description" : "The user identifier"
        },
        "permission" : {
          "type" : "string",
          "example" : "manage",
          "description" : "The privilege"
        },
        "createdBy" : {
          "type" : "string",
          "example" : "de077cd8-83b7-46d1-b06f-2eaaf1548898",
          "description" : "The unique identifier for user that create the permission",
          "readOnly" : true
        },
        "createdOn" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1364407145121,
          "description" : "Epoch/Unix time stamp when the permission was created",
          "readOnly" : true
        }
      },
      "description" : "API Manager application permission."
    },
    "APIAccess" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "19da5d5e-b18a-4217-abec-291033cd939c",
          "description" : "Unique identifier for approval decisions (includes pending approvals)"
        },
        "apiId" : {
          "type" : "string",
          "example" : "c1c63d3b-5283-4755-ade7-e2377bd35049",
          "description" : "Virtualised REST API unique id"
        },
        "createdBy" : {
          "type" : "string",
          "example" : "3e21b76a-defa-49ab-9682-a9cd60387e37",
          "description" : "The unique identifier for user that requested access",
          "readOnly" : true
        },
        "state" : {
          "type" : "string",
          "example" : "approved",
          "description" : "Pending or approved state"
        },
        "createdOn" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1364287486876,
          "description" : "Epoch/Unix time stamp when the approval decision was created ",
          "readOnly" : true
        },
        "enabled" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Flag disables access to an API for organization or application"
        }
      },
      "description" : "API Access indicates whether access to an API is available"
    },
    "QuotaApiConstraintDTO" : {
      "type" : "object",
      "required" : [ "type" ],
      "properties" : {
        "api" : {
          "type" : "string",
          "example" : "60d1c7da-9e2e-4f57-948a-eeb1da71beca",
          "description" : "The API identifier from API discovery, or '\\*' for all API"
        },
        "method" : {
          "type" : "string",
          "example" : "0c5f8a4a-0e74-4e66-ad7b-e21962940e02",
          "description" : "The API method identifier from API discovery, or '\\*' for all methods"
        },
        "type" : {
          "type" : "string",
          "example" : "throttle",
          "description" : "The restriction type, one of: throttle, throttlemb"
        },
        "config" : {
          "type" : "object",
          "example" : {
            "messages" : "10",
            "per" : "1",
            "period" : "seconds"
          },
          "description" : "The restriction configuration",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      },
      "description" : "The APIConstraint is restriction that applies to API(s) and API method(s)."
    },
    "QuotaDTO" : {
      "type" : "object",
      "required" : [ "id", "name", "type" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "a1c70859-702b-4f3a-a1ad-a61067fdc4c7",
          "description" : "The quota identifier"
        },
        "type" : {
          "type" : "string",
          "description" : "The quota type, either API or APPLICATION",
          "enum" : [ "API", "APPLICATION" ]
        },
        "name" : {
          "type" : "string",
          "example" : "MyApplication Quota",
          "description" : "The name of the quota"
        },
        "description" : {
          "type" : "string",
          "example" : "A set of restrictions to MyApplication",
          "description" : "The quota for MyApplication the overrides default Application quota"
        },
        "restrictions" : {
          "type" : "array",
          "description" : "An array of restrictions imposed on the quota",
          "items" : {
            "$ref" : "#/definitions/QuotaApiConstraintDTO"
          }
        },
        "system" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates if the quota is system (protected)"
        }
      },
      "description" : "The Quota is a set of restrictions that apply to applications in the Portal."
    },
    "ExternalClient" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "19da5d5e-b18a-4217-abec-291033cd939c",
          "description" : "The ID of the external client",
          "readOnly" : true
        },
        "clientId" : {
          "type" : "string",
          "example" : "296ec1ae-3fc7-4470-8d90-a6cc1482797f",
          "description" : "The 3rd party client ID. This client ID is provided by a 3rd party OAuth service and is used to map an application to an external client. This value is unique, i.e. no other application can specify the same client ID."
        },
        "enabled" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Flag disables the external client so it can't be used in authentication"
        },
        "createdBy" : {
          "type" : "string",
          "example" : "3e21b76a-defa-49ab-9682-a9cd60387e37",
          "description" : "The unique identifier of the user that created the mapping",
          "readOnly" : true
        },
        "createdOn" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1364287486876,
          "description" : "Epoch/Unix time stamp when the mapping was created",
          "readOnly" : true
        },
        "corsOrigins" : {
          "type" : "array",
          "example" : "[example.com]",
          "description" : "The domains to allow access for browser-based clients",
          "items" : {
            "type" : "string"
          }
        }
      },
      "description" : "API Manager external client"
    },
    "ApplicationRequest" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "b76a3e23-deca-49ab-9682-79cd503b7e3a",
          "description" : "The unique identifier for the application request"
        },
        "name" : {
          "type" : "string",
          "example" : "My First iPhone App",
          "description" : "The display name for the application"
        },
        "description" : {
          "type" : "string",
          "example" : "My First iPhone App which is a \"Hello World\" basic application",
          "description" : "Descriptive text for the application"
        },
        "organizationId" : {
          "type" : "string",
          "example" : "3e21b76a-defa-49ab-9682-a9cd60387e37",
          "description" : "The organization identifier to which the application request belongs"
        },
        "phone" : {
          "type" : "string",
          "example" : "+1 877-564-7700",
          "description" : "Contact phone number of the application"
        },
        "email" : {
          "type" : "string",
          "example" : "support@acmecorp.com",
          "description" : "The contact email address associated with the application"
        },
        "image" : {
          "type" : "string",
          "example" : "resources/photo.jpg",
          "description" : "URI of the image to be used for this application, this field only indicates that the application has an image assigned to it. In order to retrieve the actual image use the following URL /api/portal/organizations/{uid of org}/image/"
        },
        "apis" : {
          "type" : "array",
          "example" : [ "c1c63d3b-5283-4755-ade7-e2377bd35049" ],
          "description" : "A list of unqiue API identifiers to which the application wants to use.",
          "items" : {
            "type" : "string"
          }
        }
      },
      "description" : "API Manager application request."
    },
    "APIKey" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "19da5d5e-b18a-4217-abec-291033cd939c",
          "description" : "The ID which is used to identify the API Key. You include it in each request, so it's not a secret."
        },
        "applicationId" : {
          "type" : "string",
          "example" : "19da5d5e-b18a-4217-abec-291033cd939c",
          "description" : "The ID which is used to identify an application. You include it in each request, so it's not a secret."
        },
        "secret" : {
          "type" : "string",
          "example" : "19da5d5e-b18a-4217-abec-291033cd939c",
          "description" : "Each  API Key ID has a Secret Key associated with it. This key is just a long string of characters that can be used to calculate the digital signature that can be included in requests. Your Secret Key is a secret do not distribute."
        },
        "enabled" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Flag disables the API key so can't be used in authentication"
        },
        "createdBy" : {
          "type" : "string",
          "example" : "3e21b76a-defa-49ab-9682-a9cd60387e37",
          "description" : "The unique identifier for user that generated the API Key",
          "readOnly" : true
        },
        "createdOn" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1364287486876,
          "description" : "Epoch/Unix time stamp when the API key was created",
          "readOnly" : true
        },
        "deletedOn" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1364287486876,
          "description" : "Epoch/Unix time stamp when the API key was deleted",
          "readOnly" : true
        },
        "corsOrigins" : {
          "type" : "array",
          "example" : "[example.com]",
          "description" : "The domains to allow access for browser-based clients",
          "items" : {
            "type" : "string"
          }
        }
      },
      "description" : "API Manager API Key for use in authenticating applications"
    },
    "OAuthClient" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "7b32f6c9-9e27-4def-87e2-247aadf7f583",
          "description" : "The client ID to be used in OAuth flows"
        },
        "cert" : {
          "type" : "string",
          "example" : "-----BEGIN CERTIFICATE-----MIICUTC..............-----END CERTIFICATE-----",
          "description" : "The PEM encodeded certificate used in JWT flow"
        },
        "secret" : {
          "type" : "string",
          "example" : "ddf27559-ace0-4c4f-b5e4-ecf2086fddc5",
          "description" : "The client application secret to be used in OAuth flows"
        },
        "type" : {
          "type" : "string",
          "example" : "public",
          "description" : "OAuth defines two client types, based on their ability to authenticate securely with the authorization server. Possible values public or confidential"
        },
        "enabled" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Flag disables the OAuth credentials so they can't be used in authentication"
        },
        "redirectUrls" : {
          "type" : "array",
          "example" : "[https://example.com/callback]",
          "description" : "The URL where the server will redirect the to present authorization codes or access tokens depending on the OAuth flow being executed",
          "items" : {
            "type" : "string"
          }
        },
        "corsOrigins" : {
          "type" : "array",
          "example" : "[example.com]",
          "description" : "The domains to allow access for browser-based clients",
          "items" : {
            "type" : "string"
          }
        },
        "createdBy" : {
          "type" : "string",
          "example" : "3e21b76a-defa-49ab-9682-a9cd60387e37",
          "description" : "The unique identifier for user that generated the OAuth credentials",
          "readOnly" : true
        },
        "createdOn" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1364287486876,
          "description" : "Epoch/Unix time stamp when the OAuth credentials was created",
          "readOnly" : true
        },
        "applicationId" : {
          "type" : "string",
          "description" : "The application identifier associated with the OAuth credential"
        }
      },
      "description" : "API Manager OAuth Credentials."
    },
    "OAuthResource" : {
      "type" : "object",
      "required" : [ "applicationId", "id" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "1e71b76a-defa-49ab-96s2-a9cd60387f31",
          "description" : "The unique identifier for the oauth protected resource"
        },
        "applicationId" : {
          "type" : "string",
          "example" : "3e21b76a-defa-49ab-9682-a9cd60387e37",
          "description" : "The unique identifier for the application who has access to this resource"
        },
        "uriprefix" : {
          "type" : "string",
          "example" : "/api/oauth/protected",
          "description" : "The uri prefix which this oauth protected resource relates to"
        },
        "scopes" : {
          "type" : "array",
          "example" : "email",
          "description" : "Set of scope strings that have been resolved from querying the OAuth Resource Service at the uri prefix",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "enabled" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Flag to indicate if this oauth protected resource is enabled or not"
        },
        "scope" : {
          "type" : "string"
        },
        "isDefault" : {
          "type" : "boolean"
        }
      },
      "description" : "OAuth protected resource."
    },
    "OAuthAppScope" : {
      "type" : "object",
      "required" : [ "applicationId", "id" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "1e71b76a-defa-49ab-96s2-a9cd60387f31",
          "description" : "The unique identifier for the oauth protected resource"
        },
        "applicationId" : {
          "type" : "string",
          "example" : "3e21b76a-defa-49ab-9682-a9cd60387e37",
          "description" : "The unique identifier for the application that has this scope"
        },
        "scope" : {
          "type" : "string",
          "example" : "/api/oauth/protected",
          "description" : "The scope string"
        },
        "isDefault" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Flag to indicate if this scope is one of the applications default scopes"
        }
      },
      "description" : "OAuth Application Scope"
    },
    "OAuthAuthorization" : {
      "type" : "object",
      "properties" : {
        "scopes" : {
          "type" : "array",
          "description" : "A list of scopes that a resource owner has authorized access to.",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "Mon May 04 09:51:52 GMT 2014",
          "description" : "The Date that the resource owner granted access to the scope(s)."
        },
        "applicationID" : {
          "type" : "string",
          "example" : "3c82acfc-26c2-11e4-a149-a6c5e4d22fb7",
          "description" : "The application requesting authorization."
        },
        "subject" : {
          "type" : "string",
          "example" : "sampleuser",
          "description" : "The unique identifier representing the resource owner who granted authorization to the client."
        },
        "id" : {
          "type" : "string",
          "example" : "b76a3e23-deca-49ab-9682-79cd503b7e3a",
          "description" : "The unique identifier for the authorization"
        }
      },
      "description" : "An OAuth Authorization"
    },
    "MetricTimeline" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string",
          "example" : "numMessages",
          "description" : "The metric name.",
          "readOnly" : true
        },
        "series" : {
          "type" : "array",
          "description" : "The time series.",
          "items" : {
            "$ref" : "#/definitions/Series"
          }
        }
      },
      "description" : "The metrics timeline report is a report of a specific metric over a period of time."
    },
    "Series" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "numMessages",
          "description" : "The metric type name",
          "readOnly" : true
        },
        "pointInterval" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 300000,
          "description" : "The amount of time, in milliseconds, between data points"
        },
        "pointStart" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1363737600000,
          "description" : "The time of the first data point in milliseconds"
        },
        "data" : {
          "type" : "array",
          "example" : [ 0, 0, 1, 0, 2, 0, 3, 0, 4 ],
          "description" : "The a metric measurement at a specific time interval",
          "items" : {
            "type" : "number",
            "format" : "float"
          }
        }
      },
      "description" : "A metric time series."
    },
    "MetricField" : {
      "type" : "object",
      "properties" : {
        "metricType" : {
          "type" : "string",
          "example" : "numMessages",
          "description" : "The metric type name",
          "readOnly" : true
        },
        "aggregateName" : {
          "type" : "string",
          "example" : "totalNumMessages",
          "description" : "The metric aggregate name",
          "readOnly" : true
        }
      },
      "description" : "Queryable metric type information"
    },
    "ExportOptions" : {
      "type" : "object",
      "properties" : {
        "filename" : {
          "type" : "string",
          "example" : "export.dat",
          "description" : "If specified, the name of the file that the exported applications will be wrote to"
        },
        "password" : {
          "type" : "string",
          "example" : 1223425,
          "description" : "Password value which, when specified, will be use to encrypt the output stream for the export"
        },
        "appIds" : {
          "type" : "array",
          "example" : "[c95b7c70-fe01-4e31-8f1f-cdd977812d7d]",
          "description" : "List of the application ids that was chosen for export",
          "items" : {
            "type" : "string"
          }
        },
        "quota" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Flag to indicate if api quota information is to be included in the export"
        },
        "oauth" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Flag to indicate if oauth credentials are to be included in the export"
        },
        "apikeys" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Flag to indicate if api keys are to be included in the export"
        }
      },
      "description" : "Options available on export of applications"
    },
    "Organization" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "3e21b76a-defa-49ab-9682-a9cd60387e37",
          "description" : "The unique identifier for the organization",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "example" : "Acme Corporation",
          "description" : "The name of the organization"
        },
        "description" : {
          "type" : "string",
          "example" : "Acme Corporation is a fictional corporation in Road Runner/Wile E. Coyote cartoons",
          "description" : "The description of the organization"
        },
        "email" : {
          "type" : "string",
          "example" : "support@acmecorp.com",
          "description" : "The contact email address associated with the organization"
        },
        "image" : {
          "type" : "string",
          "example" : "resources/photo.jpg",
          "description" : "URI of the image to be used for this organization. To update the image, please refer to the API."
        },
        "restricted" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates that the organization is restricted.  Users in a restricted organization cannot see other users, and users cannot register for the organization using tokens.  Default is 'false'."
        },
        "virtualHost" : {
          "type" : "string",
          "example" : "acme.api.axway.com",
          "description" : "The virtual host associated with the organization"
        },
        "phone" : {
          "type" : "string",
          "example" : "+1 877-564-7700",
          "description" : "Contact phone number of the organization"
        },
        "enabled" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Flag to indicate if this organization is enabled or not"
        },
        "development" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Flag to indicate if this organization is enabled or not for API development."
        },
        "dn" : {
          "type" : "string"
        },
        "createdOn" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1364287486876,
          "description" : "Epoch/Unix time stamp when the organization was created",
          "readOnly" : true
        },
        "startTrialDate" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1364287486876,
          "description" : "Epoch/Unix time stamp when the trial starts"
        },
        "endTrialDate" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1364287486876,
          "description" : "Epoch/Unix time stamp when the trial expires"
        },
        "trialDuration" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 365,
          "description" : "Length of the trial in days"
        },
        "isTrial" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Indicates if this Org is a trial or not"
        }
      },
      "description" : "API Manager organization"
    },
    "RegistrationToken" : {
      "type" : "object",
      "properties" : {
        "token" : {
          "type" : "string",
          "example" : 257690,
          "description" : "The registration code"
        },
        "organizationId" : {
          "type" : "string",
          "example" : "3e21b76a-defa-49ab-9682-a9cd60387e37",
          "description" : "Unique identifier for the organization who the registration code applies to",
          "readOnly" : true
        },
        "expiry" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1366930800000,
          "description" : "Epoch/Unix time stamp when the registration code will expire"
        },
        "createdOn" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1364407145121,
          "description" : "Epoch/Unix time stamp when the registration code was created",
          "readOnly" : true
        },
        "createdBy" : {
          "type" : "string",
          "example" : "de077cd8-83b7-46d1-b06f-2eaaf1548898",
          "description" : "The unique identifier for user that created the registration code",
          "readOnly" : true
        },
        "userQuota" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 10,
          "description" : "The remaining number of users that can use the registration code for self registration to an organization"
        },
        "maxUsers" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 10,
          "description" : "The total number of users that can use the registration code for self registration to an organization since the code has been created"
        },
        "enabled" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Flag disables registration code so that it can no longer be used for registration"
        }
      },
      "description" : "Organization Registration Token."
    },
    "Config" : {
      "type" : "object",
      "required" : [ "sessionIdleTimeout" ],
      "properties" : {
        "portalName" : {
          "type" : "string",
          "example" : "Axway API Manager",
          "description" : "The name of the API Manager."
        },
        "portalHostname" : {
          "type" : "string",
          "example" : "apimanager.axway.com",
          "description" : "The network hostname or IP Address of the API Manager which will be used in email links."
        },
        "apiPortalName" : {
          "type" : "string",
          "example" : "Axway API Portal",
          "description" : "The name of the API Portal"
        },
        "apiPortalHostname" : {
          "type" : "string",
          "example" : "apiportal.axway.com",
          "description" : "The network hostname or IP Address of the API Portal which will be used in email links."
        },
        "isApiPortalConfigured" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Indicates if the API Portal is configured."
        },
        "registrationEnabled" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Enables/disables user registration for the API Manager"
        },
        "resetPasswordEnabled" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Enables/disables support for resetting user passwords for the API Manager"
        },
        "changePasswordOnFirstLogin" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Enables/disables support for changing user passwords on first login for the API Manager"
        },
        "passwordExpiryEnabled" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Enables/disables support for user passwords expiration for the API Manager"
        },
        "passwordLifetimeDays" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 90,
          "description" : "The number of days before user passwords expire for the API Manager"
        },
        "minimumPasswordLength" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 6,
          "description" : "The minimum password length."
        },
        "autoApproveUserRegistration" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Enables/disables auto-approve for user registration whereby API Administrator or Organization Administrator approval is not required."
        },
        "systemOAuthScopesEnabled" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Enables/disables the ability to add System scopes to an Application. These scopes represent Gateway OAuth resources that are not covered by APIs."
        },
        "applicationScopeRestrictions" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Enables/disables the ability to show Application default enabled scopes only."
        },
        "autoApproveApplications" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Enables/disables auto-application approval whereby users do not need API Administrator or Organization Administrator approval."
        },
        "delegateUserAdministration" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Enables/disables user administration to the Organization Administrators."
        },
        "delegateApplicationAdministration" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Enables/disables application administration to the Organization Administrators."
        },
        "apiDefaultVirtualHost" : {
          "type" : "string",
          "example" : "apimanager.axway.com:443",
          "description" : "The network host and port that serves as the default virtual host from which API Manager registered API will be accessible through."
        },
        "apiRoutingKeyEnabled" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Enable routing to APIs on the same base path."
        },
        "apiRoutingKeyLocation" : {
          "type" : "string",
          "example" : "query|param",
          "description" : "An additional routing key is required to support multiple APIs registered on the same base path. This indicates where to look for the value."
        },
        "emailFrom" : {
          "type" : "string",
          "example" : "no-reply@axway.com",
          "description" : "The 'from' address used in emails."
        },
        "emailBounceAddress" : {
          "type" : "string",
          "example" : "apiadmin@axway.com",
          "description" : "An email address where undeliverable emails will be bounced to."
        },
        "promoteApiViaPolicy" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Enables/disables API promotion via policy."
        },
        "globalPoliciesEnabled" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Enables/disables Global policies."
        },
        "globalRequestPolicy" : {
          "type" : "string",
          "example" : "Corporate Security Policy",
          "description" : "The Global Request Policy to be executed for all Frontend API calls. Must be a valid policy ID. Can be null to indicate no policy"
        },
        "globalResponsePolicy" : {
          "type" : "string",
          "example" : "Corporate Response Policy",
          "description" : "The Global Response Policy to be executed for all Frontend API calls. Must be a valid policy ID. Can be null to indicate no policy"
        },
        "faultHandlersEnabled" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Enables/disables API Manager fault handlers."
        },
        "globalFaultHandlerPolicy" : {
          "type" : "string",
          "example" : "Corporate Fault Handler Policy",
          "description" : "The Global Fault Handler Policy to be used by all Frontend APIs in the event of an error. Must be a valid policy ID. Can be null to indicate no policy"
        },
        "strictCertificateChecking" : {
          "type" : "boolean",
          "example" : true,
          "description" : "For API import, strict certificate checking will only allow recognised, valid server certificates when performing API imports from SSL protected endpoints. Default is set to true"
        },
        "serverCertificateVerification" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Fr API import, server certificate verification ensures that the certificate presented by the server matches the name of the remote host being connected to. Default is set to true"
        },
        "advisoryBannerEnabled" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Enables/disables API Manager advisory banner."
        },
        "advisoryBannerText" : {
          "type" : "string",
          "example" : "Usage of this system constitutes consent to abide by the company's security policies and standards.",
          "description" : "Advisory banner text."
        },
        "baseOAuth" : {
          "type" : "boolean"
        },
        "externalUserName" : {
          "type" : "string",
          "example" : "${userinfo.name}",
          "description" : "External user name"
        },
        "externalUserDescription" : {
          "type" : "string",
          "example" : "${userinfo.description}",
          "description" : "External user description"
        },
        "externalUserPhone" : {
          "type" : "string",
          "example" : "${userinfo.phone}",
          "description" : "External user phone"
        },
        "externalUserEmail" : {
          "type" : "string",
          "example" : "${userinfo.email}",
          "description" : "External user email"
        },
        "externalUserOrganization" : {
          "type" : "string",
          "example" : "${userinfo.organization}",
          "description" : "External user organization name"
        },
        "externalUserRole" : {
          "type" : "string",
          "example" : "${userinfo.role}",
          "description" : "External user role"
        },
        "externalUserEnabled" : {
          "type" : "string",
          "example" : "${userinfo.enabled}",
          "description" : "External user enabled"
        },
        "sessionIdleTimeout" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 360000,
          "description" : "Idle session timeout in milliseconds"
        },
        "isTrial" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Is trial enabled"
        },
        "defaultTrialDuration" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 30,
          "description" : "Default trial duration in days"
        },
        "loginNameRegex" : {
          "type" : "string",
          "example" : "[^;,\\/?#<>&!]{1,}",
          "description" : "Login name validation regex"
        },
        "userNameRegex" : {
          "type" : "string",
          "example" : "^[\\p{L}\\d .,'_-]+$",
          "description" : "User name validation regex"
        },
        "productVersion" : {
          "type" : "string",
          "example" : "7.7.0",
          "description" : "The Version information of API Manager."
        },
        "os" : {
          "type" : "string",
          "example" : "Windows 7",
          "description" : "The operating system on which API Manager server is running."
        },
        "architecture" : {
          "type" : "string",
          "example" : "win-x86-32",
          "description" : "The architecture of the operating system on which the API Manager server is running. Supported values: [ win-x86-32, linux-x86-64 ]"
        },
        "apiImportTimeout" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 60,
          "description" : "API Import timeout in seconds. Defaults to 60 seconds"
        },
        "apiImportMimeValidation" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Specifies whether or not mime-type validation is performed during API Import. Currently mime-type validation is implemented for Swagger (1.x and 2.0) and OAS 3.0. This feature is switched on by default"
        },
        "apiImportEditable" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not backend APIs can be edited post import. This option is switched OFF by default."
        }
      },
      "description" : "API Manager configuration"
    },
    "LicenseConfig" : {
      "type" : "object",
      "properties" : {
        "license" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Indicates whether or not a valid license is available"
        }
      },
      "description" : "API Manager license configuration"
    },
    "SystemConfig" : {
      "type" : "object",
      "properties" : {
        "disabledApis" : {
          "type" : "array",
          "example" : [ "c1c63d3b-5283-4755-ade7-e2377bd35049" ],
          "description" : "Returns a list of disabled APIs",
          "items" : {
            "type" : "string"
          }
        }
      },
      "description" : "API Manager system configuration"
    },
    "ReferencedEntity" : {
      "type" : "object",
      "required" : [ "id", "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "My Request Policy",
          "description" : "Name of the referenced entity (as specified in Policy Studio configuration)."
        },
        "id" : {
          "type" : "string",
          "example" : "<key type='Example'>...</key>",
          "description" : "Portable version of the ESPK of this referenced entity, formatted as an XML fragment."
        }
      },
      "description" : "Referenced entity."
    },
    "CACert" : {
      "type" : "object",
      "properties" : {
        "certBlob" : {
          "type" : "string",
          "example" : "YmxvYg==",
          "description" : "Raw certificate data"
        },
        "name" : {
          "type" : "string",
          "example" : "CN=Equifax Secure eBusiness CA-1, O=Equifax Secure Inc., C=US",
          "description" : "Name of the certificate"
        },
        "alias" : {
          "type" : "string",
          "example" : "CN=Equifax Secure eBusiness CA-1, O=Equifax Secure Inc., C=US",
          "description" : "Certificate alias"
        },
        "subject" : {
          "type" : "string",
          "example" : "CN=Equifax Secure eBusiness CA-1, O=Equifax Secure Inc., C=US",
          "description" : "Certificate subject"
        },
        "issuer" : {
          "type" : "string",
          "example" : "CN=Equifax Secure eBusiness CA-1, O=Equifax Secure Inc., C=US",
          "description" : "Certificate issuer"
        },
        "version" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 3,
          "description" : "Version of the certificate"
        },
        "notValidBefore" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1364287486876,
          "description" : "Start date of the certificate"
        },
        "notValidAfter" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1364287486876,
          "description" : "Expiry date of the certificate"
        },
        "signatureAlgorithm" : {
          "type" : "string",
          "example" : "RSA (2048 bits)",
          "description" : "The algorithm used to sign the certificate."
        },
        "sha1Fingerprint" : {
          "type" : "string",
          "example" : "BC:5C:0D:3E:47:58:DF:E8:42:A4:D2:34:C5:D4:97:14:DA:54:F4:CD",
          "description" : "SHA1 fingerprint."
        },
        "md5Fingerprint" : {
          "type" : "string",
          "example" : "89:DD:C1:6C:C0:6E:1D:B1:75:0C:48:E5:E6:AC:76:B0",
          "description" : "MD5 fingerprint."
        },
        "expired" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Flag indicating whether or not the certificate is expired."
        },
        "notYetValid" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Flag indicating whether or not the certificate is valid yet."
        },
        "inbound" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Flag indicating whether this certificate is used for inbound SSL connections when invoking the virtualized API."
        },
        "outbound" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Flag indicating whether this certificate is used for outbound SSL connections when invoking the virtualized API."
        }
      },
      "description" : "Trusted CA certificate"
    },
    "AlertConfig" : {
      "type" : "object",
      "properties" : {
        "runSysquotaExceeded" : {
          "type" : "boolean",
          "example" : false
        },
        "runSysquotaWarning" : {
          "type" : "boolean",
          "example" : false
        },
        "runAppquotaExceeded" : {
          "type" : "boolean",
          "example" : false
        },
        "runAppquotaWarning" : {
          "type" : "boolean",
          "example" : false
        },
        "quotaOverrideChanged" : {
          "type" : "boolean",
          "example" : false
        },
        "quotaOverrideDeleted" : {
          "type" : "boolean",
          "example" : false
        },
        "quotaDefaultChanged" : {
          "type" : "boolean",
          "example" : false
        },
        "quotaSystemChanged" : {
          "type" : "boolean",
          "example" : false
        },
        "organizationCreate" : {
          "type" : "boolean",
          "example" : false
        },
        "organizationDelete" : {
          "type" : "boolean",
          "example" : false
        },
        "organizationEnable" : {
          "type" : "boolean",
          "example" : false
        },
        "organizationDisable" : {
          "type" : "boolean",
          "example" : false
        },
        "organizationAddapi" : {
          "type" : "boolean",
          "example" : false
        },
        "organizationRemoveapi" : {
          "type" : "boolean",
          "example" : false
        },
        "organizationEnableapi" : {
          "type" : "boolean",
          "example" : false
        },
        "organizationDisableapi" : {
          "type" : "boolean",
          "example" : false
        },
        "appdevRegister" : {
          "type" : "boolean",
          "example" : false
        },
        "appdevApprove" : {
          "type" : "boolean",
          "example" : false
        },
        "appdevDelete" : {
          "type" : "boolean",
          "example" : false
        },
        "appdevEnable" : {
          "type" : "boolean",
          "example" : false
        },
        "appdevDisable" : {
          "type" : "boolean",
          "example" : false
        },
        "appdevResetpwd" : {
          "type" : "boolean",
          "example" : false
        },
        "applicationRegister" : {
          "type" : "boolean",
          "example" : false
        },
        "applicationApprove" : {
          "type" : "boolean",
          "example" : false
        },
        "applicationDelete" : {
          "type" : "boolean",
          "example" : false
        },
        "applicationEnable" : {
          "type" : "boolean",
          "example" : false
        },
        "applicationDisable" : {
          "type" : "boolean",
          "example" : false
        },
        "applicationRequestapi" : {
          "type" : "boolean",
          "example" : false
        },
        "applicationApproveapi" : {
          "type" : "boolean",
          "example" : false
        },
        "applicationRemoveapi" : {
          "type" : "boolean",
          "example" : false
        },
        "applicationEnableapi" : {
          "type" : "boolean",
          "example" : false
        },
        "applicationDisableapi" : {
          "type" : "boolean",
          "example" : false
        },
        "apicatalogEnable" : {
          "type" : "boolean",
          "example" : false
        },
        "apicatalogDisable" : {
          "type" : "boolean",
          "example" : false
        },
        "apiproxyPublish" : {
          "type" : "boolean",
          "example" : false
        },
        "apiproxyDeprecate" : {
          "type" : "boolean",
          "example" : false
        },
        "apiproxyUndeprecate" : {
          "type" : "boolean",
          "example" : false
        },
        "apiproxyRetire" : {
          "type" : "boolean",
          "example" : false
        },
        "apiproxyUnpublish" : {
          "type" : "boolean",
          "example" : false
        },
        "applicationcredentialsCreate" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not an alert will be generated when an application credential is created"
        },
        "applicationcredentialsUpdate" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not an alert will be generated when an application credential is updated"
        },
        "applicationcredentialsDelete" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not an alert will be generated when an application credential is deleted"
        },
        "applicationcredentialsEnable" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not an alert will be generated when an application credential is enabled"
        },
        "applicationcredentialsDisable" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not an alert will be generated when an application credential is disabled"
        }
      },
      "description" : "API alert system configuration"
    },
    "PortalTrafficListener" : {
      "type" : "object",
      "required" : [ "address", "id", "name", "port", "protocol" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "/[NetService]name=Service/[HTTP]name=API Portal",
          "description" : "The service listener identifier"
        },
        "name" : {
          "type" : "string",
          "example" : "API Manager",
          "description" : "The name of the service listener"
        },
        "protocol" : {
          "type" : "string",
          "example" : "http",
          "description" : "The listener protocol"
        },
        "port" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 8080,
          "description" : "The listener port"
        },
        "prefix" : {
          "type" : "string",
          "description" : "The listener prefix"
        },
        "address" : {
          "type" : "string",
          "example" : "localhost",
          "description" : "The listener address"
        },
        "url" : {
          "type" : "string",
          "example" : "http://localhost:8080",
          "description" : "The listener URL"
        }
      },
      "description" : "A HTTP service listener."
    },
    "RemoteHost" : {
      "type" : "object",
      "required" : [ "name", "port" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "3e21b76a-defa-49ab-9682-a9cd60387e37",
          "description" : "The unique identifier for the remote host",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "example" : "www.google.com",
          "description" : "The host name of the remote host"
        },
        "port" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 80,
          "description" : "The host port of the remote host"
        },
        "createdOn" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1364287486876,
          "description" : "Epoch/Unix time stamp when the remote host was created",
          "readOnly" : true
        },
        "createdBy" : {
          "type" : "string",
          "example" : "de077cd8-83b7-46d1-b06f-2eaaf1548898",
          "description" : "The unique identifier for user that created the remote host",
          "readOnly" : true
        },
        "organizationId" : {
          "type" : "string",
          "example" : "3e21b76a-defa-49ab-9682-a9cd60387e37",
          "description" : "The organization identifier to which the remote host belongs"
        },
        "maxConnections" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 128,
          "description" : "The maximum number of connections to open to a Remote Host. If the maximum number of connections has already been established, the API Gateway instance waits for a connection to drop or become idle before making another request. The default value is -1, meaning there is no limit"
        },
        "allowHTTP11" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Enables the API Gateway to use HTTP 1.1 when connecting to the remote host. Default value is false, meaning HTTP 1.0 is used"
        },
        "includeContentLengthRequest" : {
          "type" : "boolean",
          "example" : false,
          "description" : "If this option is set, the API Gateway will include the Content-Length HTTP header in all requests to this Remote Host. Default value is false."
        },
        "includeContentLengthResponse" : {
          "type" : "boolean",
          "example" : false,
          "description" : "If this option is set, if the API Gateway receives a response from this Remote Host that contains a Content-Length HTTP header, it returns this length to the client. Default value is false."
        },
        "offerTLSServerName" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Adds a field to outbound TLS/SSL calls that shows the name that the client used to connect. Default value is false."
        },
        "verifyServerHostname" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Ensures that the certificate presented by the server matches the name of the remote host being connected to. This prevents host spoofing and man-in-the-middle attacks. Default value is false."
        },
        "connectionTimeout" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 30000,
          "description" : "If a connection to this remote host is not established within the time set in this field, the connection times out and the connection fails. Default value is 30000 milliseconds (30 seconds)."
        },
        "activeTimeout" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 30000,
          "description" : "The maximum amount of time permitted between reading successive blocks of data. If the Active Timeout is exceeded, the API Gateway closes the connection. This prevents a Remote Host from closing the connection while sending data. Default value is 30000 milliseconds (30 seconds)."
        },
        "transactionTimeout" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 240000,
          "description" : "The maximum amount of time permitted to complete the transaction. Default value is 240000 milliseconds (4 minutes)."
        },
        "idleTimeout" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 15000,
          "description" : "The maximum amount of time that API Gateway waits after sending a message over a persistent connection to the Remote Host before it closes the connection. Default value is 15000 milliseconds (15 seconds)."
        },
        "maxReceiveBytes" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 20971520,
          "description" : "The maximum amount of data the API Gateway can receive per transaction. Default value is 20971520 bytes (20MiB)."
        },
        "maxSendBytes" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 20971520,
          "description" : "The maximum amount of data the API Gateway can transmit per transaction. Default value is 20971520 bytes (20MiB)."
        },
        "inputBufferSize" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 8192,
          "description" : "The maximum amount of memory allocated to each request. Default value is 8192 bytes."
        },
        "outputBufferSize" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 8192,
          "description" : "The maximum amount of memory allocated to each response. Default value is 8192 bytes."
        },
        "addressCacheTimeout" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 300000,
          "description" : "The period of time to cache addressing information after it has been received from the naming service. Default value is 300000 milliseconds (5 minutes)"
        },
        "sslSessionCacheSize" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 32,
          "description" : "Specifies the size of the SSL session cache for connections to the remote host, which controls the number of idle SSL sessions that can be kept in memory. Default value is 32."
        },
        "inputEncodings" : {
          "type" : "array",
          "example" : [ "deflate", "gzip" ],
          "description" : "Specifies the HTTP content encodings that the API Gateway can accept from peers. Supported encodings: *deflate*, *gzip*. If no encodings are specified the default encoding is applied.",
          "items" : {
            "type" : "string"
          }
        },
        "outputEncodings" : {
          "type" : "array",
          "example" : [ "deflate", "gzip" ],
          "description" : "Specifies the HTTP content encodings that the API Gateway can apply to outgoing messages. Supported encodings: *deflate*, *gzip*. If no encodings are specified the default encoding is applied.",
          "items" : {
            "type" : "string"
          }
        },
        "exportCorrelationId" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Specifies whether to add the X-CorrelationID header to outbound messages"
        }
      },
      "description" : "An API Manager-registered remote host."
    },
    "Group" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "tags" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "services" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Service"
          }
        },
        "lock" : {
          "$ref" : "#/definitions/Lock"
        }
      }
    },
    "Host" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        }
      }
    },
    "Lock" : {
      "type" : "object",
      "properties" : {
        "locker" : {
          "type" : "string"
        },
        "timestamp" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "Service" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "gateway", "nodemanager" ]
        },
        "scheme" : {
          "type" : "string"
        },
        "hostID" : {
          "type" : "string"
        },
        "managementPort" : {
          "type" : "integer",
          "format" : "int32"
        },
        "tags" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "enabled" : {
          "type" : "boolean"
        }
      }
    },
    "Topology" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer",
          "format" : "int32"
        },
        "timestamp" : {
          "type" : "integer",
          "format" : "int64"
        },
        "productVersion" : {
          "type" : "string"
        },
        "hosts" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Host"
          }
        },
        "groups" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Group"
          }
        },
        "uniqueIdCounters" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "emtEnabled" : {
          "type" : "boolean"
        },
        "services" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Service"
          }
        }
      }
    },
    "API" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "An identifier",
          "readOnly" : true
        },
        "title" : {
          "type" : "string",
          "description" : "Schema title"
        },
        "description" : {
          "type" : "string",
          "description" : "Description of the Schema"
        },
        "format" : {
          "type" : "string",
          "description" : "The format ex: int32, int64, float, double, byte, binary, date, date-time or password"
        },
        "required" : {
          "type" : "array",
          "description" : "Specifies if the parameter is required",
          "items" : {
            "type" : "string"
          }
        },
        "properties" : {
          "type" : "object",
          "description" : "Not used because our model does not support inline nested types",
          "additionalProperties" : {
            "$ref" : "#/definitions/SchemaObject"
          }
        },
        "additionalProperties" : {
          "type" : "object",
          "description" : "Specifies additional schema properties"
        },
        "items" : {
          "description" : "if the schema is an array specifies the items type",
          "$ref" : "#/definitions/SchemaObject"
        },
        "example" : {
          "type" : "object",
          "description" : "Specifies an example of an instance of this schema"
        },
        "xml" : {
          "type" : "object",
          "description" : "Specifies metadata to describe the XML representation format of this schema"
        },
        "maxLength" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 100,
          "description" : "Indicates the maximum length of a parameter of type 'string'"
        },
        "minLength" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 3,
          "description" : "Indicates the minimum length of a parameter of type 'string'. If not present, assumed default value is 0."
        },
        "pattern" : {
          "type" : "string",
          "example" : 3,
          "description" : "Specifies a valid regular expression against which a parameter of type 'string' is validated."
        },
        "exclusiveMinimum" : {
          "type" : "boolean",
          "example" : true,
          "description" : "If true, specifies that the value of the number parameter must be greater than the specified minimum value, otherwise the value must be great than, or equal to, the specified minimum value."
        },
        "exclusiveMaximum" : {
          "type" : "boolean",
          "example" : false,
          "description" : "If true, specifies that the value of the number parameter must be less than the specified maximum value, otherwise the value must be less than, or equal to, the specified maximum value."
        },
        "minimum" : {
          "type" : "object",
          "example" : 1,
          "description" : "Specifies the minimum possible value of the number parameter."
        },
        "maximum" : {
          "type" : "object",
          "example" : 100,
          "description" : "Specifies the maximum possible value of the number parameter."
        },
        "multipleOf" : {
          "example" : 10,
          "description" : "Specifies that the value of the number parameter must be divisible by this value. Must be an integer value > 0",
          "$ref" : "#/definitions/Number"
        },
        "maxItems" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 3,
          "description" : "Specifies the maximum number of items permitted for array parameters. Must be an integer value greater than, or equal to 0"
        },
        "minItems" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "Specifies the minimum number of items permitted for array parameters. Must be an integer value greater than, or equal to 0"
        },
        "uniqueItems" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Specifies whether or not all array items should be unique."
        },
        "allowEmptyValue" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not an empty value is permitted."
        },
        "maxProperties" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 3,
          "description" : "Specifies the maximum number of items permitted for object parameters. Must be an integer value greater than, or equal to 0"
        },
        "minProperties" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "Specifies the minimum number of items permitted for object parameters. Must be an integer value greater than, or equal to 0"
        },
        "not" : {
          "description" : "Specifies that the schema can not be the one defined in this field",
          "$ref" : "#/definitions/SchemaObject"
        },
        "nullable" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not a null value for the defined schema should be allowed"
        },
        "readOnly" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not an object property is read only and should not be used as part of the request"
        },
        "writeOnly" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not an object property is write only and should not be used as part of the response"
        },
        "deprecated" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not the schema is deprecated. It should be transitioned out of usage"
        },
        "externalDocs" : {
          "description" : "Specifies external documentation",
          "$ref" : "#/definitions/ExternalDocs"
        },
        "discriminator" : {
          "description" : "Specifies an object name that is used to differentiate between other schemas. It adds support for polymorphism.",
          "$ref" : "#/definitions/Discriminator"
        },
        "collectionFormat" : {
          "type" : "string"
        },
        "oneOf" : {
          "type" : "array",
          "description" : "Specifies that the schema can be one of those listed",
          "items" : {
            "$ref" : "#/definitions/SchemaObject"
          }
        },
        "anyOf" : {
          "type" : "array",
          "description" : "Specifies that the schema can be any of those listed",
          "items" : {
            "$ref" : "#/definitions/SchemaObject"
          }
        },
        "allOf" : {
          "type" : "array",
          "description" : "Specifies that the schema is a combination of all of those listed",
          "items" : {
            "$ref" : "#/definitions/SchemaObject"
          }
        },
        "path" : {
          "type" : "string",
          "example" : "/users",
          "description" : "The API path"
        },
        "name" : {
          "type" : "string",
          "description" : "The name of the REST API Method. This contains the exposed path."
        },
        "operations" : {
          "type" : "array",
          "description" : "The list of operations that can be performed on *path*",
          "items" : {
            "$ref" : "#/definitions/Operation"
          }
        },
        "$ref" : {
          "type" : "string",
          "example" : "#/definitions/User",
          "description" : "A Reference to a definition on definitions object"
        },
        "default" : {
          "type" : "object",
          "description" : "Default value for this schema if it is applicable"
        },
        "type" : {
          "type" : "string",
          "example" : "string",
          "description" : "The type ex: array , boolean, integer , null , number, object, string"
        },
        "enum" : {
          "type" : "array",
          "items" : {
            "type" : "object"
          }
        }
      },
      "description" : "The API is a path and operations."
    },
    "Authorization" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "An identifier",
          "readOnly" : true
        },
        "title" : {
          "type" : "string",
          "description" : "Schema title"
        },
        "description" : {
          "type" : "string",
          "description" : "Description of the Schema"
        },
        "format" : {
          "type" : "string",
          "description" : "The format ex: int32, int64, float, double, byte, binary, date, date-time or password"
        },
        "required" : {
          "type" : "array",
          "description" : "Specifies if the parameter is required",
          "items" : {
            "type" : "string"
          }
        },
        "properties" : {
          "type" : "object",
          "description" : "Not used because our model does not support inline nested types",
          "additionalProperties" : {
            "$ref" : "#/definitions/SchemaObject"
          }
        },
        "additionalProperties" : {
          "type" : "object",
          "description" : "Specifies additional schema properties"
        },
        "items" : {
          "description" : "if the schema is an array specifies the items type",
          "$ref" : "#/definitions/SchemaObject"
        },
        "example" : {
          "type" : "object",
          "description" : "Specifies an example of an instance of this schema"
        },
        "xml" : {
          "type" : "object",
          "description" : "Specifies metadata to describe the XML representation format of this schema"
        },
        "maxLength" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 100,
          "description" : "Indicates the maximum length of a parameter of type 'string'"
        },
        "minLength" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 3,
          "description" : "Indicates the minimum length of a parameter of type 'string'. If not present, assumed default value is 0."
        },
        "pattern" : {
          "type" : "string",
          "example" : 3,
          "description" : "Specifies a valid regular expression against which a parameter of type 'string' is validated."
        },
        "exclusiveMinimum" : {
          "type" : "boolean",
          "example" : true,
          "description" : "If true, specifies that the value of the number parameter must be greater than the specified minimum value, otherwise the value must be great than, or equal to, the specified minimum value."
        },
        "exclusiveMaximum" : {
          "type" : "boolean",
          "example" : false,
          "description" : "If true, specifies that the value of the number parameter must be less than the specified maximum value, otherwise the value must be less than, or equal to, the specified maximum value."
        },
        "minimum" : {
          "type" : "object",
          "example" : 1,
          "description" : "Specifies the minimum possible value of the number parameter."
        },
        "maximum" : {
          "type" : "object",
          "example" : 100,
          "description" : "Specifies the maximum possible value of the number parameter."
        },
        "multipleOf" : {
          "example" : 10,
          "description" : "Specifies that the value of the number parameter must be divisible by this value. Must be an integer value > 0",
          "$ref" : "#/definitions/Number"
        },
        "maxItems" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 3,
          "description" : "Specifies the maximum number of items permitted for array parameters. Must be an integer value greater than, or equal to 0"
        },
        "minItems" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "Specifies the minimum number of items permitted for array parameters. Must be an integer value greater than, or equal to 0"
        },
        "uniqueItems" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Specifies whether or not all array items should be unique."
        },
        "allowEmptyValue" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not an empty value is permitted."
        },
        "maxProperties" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 3,
          "description" : "Specifies the maximum number of items permitted for object parameters. Must be an integer value greater than, or equal to 0"
        },
        "minProperties" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "Specifies the minimum number of items permitted for object parameters. Must be an integer value greater than, or equal to 0"
        },
        "not" : {
          "description" : "Specifies that the schema can not be the one defined in this field",
          "$ref" : "#/definitions/SchemaObject"
        },
        "nullable" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not a null value for the defined schema should be allowed"
        },
        "readOnly" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not an object property is read only and should not be used as part of the request"
        },
        "writeOnly" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not an object property is write only and should not be used as part of the response"
        },
        "deprecated" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not the schema is deprecated. It should be transitioned out of usage"
        },
        "externalDocs" : {
          "description" : "Specifies external documentation",
          "$ref" : "#/definitions/ExternalDocs"
        },
        "discriminator" : {
          "description" : "Specifies an object name that is used to differentiate between other schemas. It adds support for polymorphism.",
          "$ref" : "#/definitions/Discriminator"
        },
        "collectionFormat" : {
          "type" : "string"
        },
        "oneOf" : {
          "type" : "array",
          "description" : "Specifies that the schema can be one of those listed",
          "items" : {
            "$ref" : "#/definitions/SchemaObject"
          }
        },
        "anyOf" : {
          "type" : "array",
          "description" : "Specifies that the schema can be any of those listed",
          "items" : {
            "$ref" : "#/definitions/SchemaObject"
          }
        },
        "allOf" : {
          "type" : "array",
          "description" : "Specifies that the schema is a combination of all of those listed",
          "items" : {
            "$ref" : "#/definitions/SchemaObject"
          }
        },
        "passAs" : {
          "type" : "string",
          "example" : "header",
          "description" : "Denotes how the API key must be passed. Valid values are 'header' or 'query'."
        },
        "keyname" : {
          "type" : "string",
          "example" : "apiKey",
          "description" : "The name of the header or query parameter to be used when passing the API key."
        },
        "scopes" : {
          "type" : "array",
          "description" : "The list of OAuth scopes.",
          "items" : {
            "$ref" : "#/definitions/Scope"
          }
        },
        "grantTypes" : {
          "description" : "The OAuth grant types.",
          "$ref" : "#/definitions/GrantTypes"
        },
        "$ref" : {
          "type" : "string",
          "example" : "#/definitions/User",
          "description" : "A Reference to a definition on definitions object"
        },
        "default" : {
          "type" : "object",
          "description" : "Default value for this schema if it is applicable"
        },
        "type" : {
          "type" : "string",
          "description" : "The authorization type.  One of: basicAuth, apiKey, oauth2, none"
        },
        "enum" : {
          "type" : "array",
          "items" : {
            "type" : "object"
          }
        }
      }
    },
    "AuthorizationCode" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "An identifier",
          "readOnly" : true
        },
        "title" : {
          "type" : "string",
          "description" : "Schema title"
        },
        "description" : {
          "type" : "string",
          "description" : "Description of the Schema"
        },
        "format" : {
          "type" : "string",
          "description" : "The format ex: int32, int64, float, double, byte, binary, date, date-time or password"
        },
        "required" : {
          "type" : "array",
          "description" : "Specifies if the parameter is required",
          "items" : {
            "type" : "string"
          }
        },
        "properties" : {
          "type" : "object",
          "description" : "Not used because our model does not support inline nested types",
          "additionalProperties" : {
            "$ref" : "#/definitions/SchemaObject"
          }
        },
        "additionalProperties" : {
          "type" : "object",
          "description" : "Specifies additional schema properties"
        },
        "items" : {
          "description" : "if the schema is an array specifies the items type",
          "$ref" : "#/definitions/SchemaObject"
        },
        "example" : {
          "type" : "object",
          "description" : "Specifies an example of an instance of this schema"
        },
        "xml" : {
          "type" : "object",
          "description" : "Specifies metadata to describe the XML representation format of this schema"
        },
        "maxLength" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 100,
          "description" : "Indicates the maximum length of a parameter of type 'string'"
        },
        "minLength" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 3,
          "description" : "Indicates the minimum length of a parameter of type 'string'. If not present, assumed default value is 0."
        },
        "pattern" : {
          "type" : "string",
          "example" : 3,
          "description" : "Specifies a valid regular expression against which a parameter of type 'string' is validated."
        },
        "exclusiveMinimum" : {
          "type" : "boolean",
          "example" : true,
          "description" : "If true, specifies that the value of the number parameter must be greater than the specified minimum value, otherwise the value must be great than, or equal to, the specified minimum value."
        },
        "exclusiveMaximum" : {
          "type" : "boolean",
          "example" : false,
          "description" : "If true, specifies that the value of the number parameter must be less than the specified maximum value, otherwise the value must be less than, or equal to, the specified maximum value."
        },
        "minimum" : {
          "type" : "object",
          "example" : 1,
          "description" : "Specifies the minimum possible value of the number parameter."
        },
        "maximum" : {
          "type" : "object",
          "example" : 100,
          "description" : "Specifies the maximum possible value of the number parameter."
        },
        "multipleOf" : {
          "example" : 10,
          "description" : "Specifies that the value of the number parameter must be divisible by this value. Must be an integer value > 0",
          "$ref" : "#/definitions/Number"
        },
        "maxItems" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 3,
          "description" : "Specifies the maximum number of items permitted for array parameters. Must be an integer value greater than, or equal to 0"
        },
        "minItems" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "Specifies the minimum number of items permitted for array parameters. Must be an integer value greater than, or equal to 0"
        },
        "uniqueItems" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Specifies whether or not all array items should be unique."
        },
        "allowEmptyValue" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not an empty value is permitted."
        },
        "maxProperties" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 3,
          "description" : "Specifies the maximum number of items permitted for object parameters. Must be an integer value greater than, or equal to 0"
        },
        "minProperties" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "Specifies the minimum number of items permitted for object parameters. Must be an integer value greater than, or equal to 0"
        },
        "not" : {
          "description" : "Specifies that the schema can not be the one defined in this field",
          "$ref" : "#/definitions/SchemaObject"
        },
        "nullable" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not a null value for the defined schema should be allowed"
        },
        "readOnly" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not an object property is read only and should not be used as part of the request"
        },
        "writeOnly" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not an object property is write only and should not be used as part of the response"
        },
        "deprecated" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not the schema is deprecated. It should be transitioned out of usage"
        },
        "externalDocs" : {
          "description" : "Specifies external documentation",
          "$ref" : "#/definitions/ExternalDocs"
        },
        "discriminator" : {
          "description" : "Specifies an object name that is used to differentiate between other schemas. It adds support for polymorphism.",
          "$ref" : "#/definitions/Discriminator"
        },
        "collectionFormat" : {
          "type" : "string"
        },
        "oneOf" : {
          "type" : "array",
          "description" : "Specifies that the schema can be one of those listed",
          "items" : {
            "$ref" : "#/definitions/SchemaObject"
          }
        },
        "anyOf" : {
          "type" : "array",
          "description" : "Specifies that the schema can be any of those listed",
          "items" : {
            "$ref" : "#/definitions/SchemaObject"
          }
        },
        "allOf" : {
          "type" : "array",
          "description" : "Specifies that the schema is a combination of all of those listed",
          "items" : {
            "$ref" : "#/definitions/SchemaObject"
          }
        },
        "tokenRequestEndpoint" : {
          "description" : "The login endpoint definition.",
          "$ref" : "#/definitions/TokenRequestEndpoint"
        },
        "tokenEndpoint" : {
          "description" : "The login endpoint definition.",
          "$ref" : "#/definitions/TokenEndpoint"
        },
        "$ref" : {
          "type" : "string",
          "example" : "#/definitions/User",
          "description" : "A Reference to a definition on definitions object"
        },
        "default" : {
          "type" : "object",
          "description" : "Default value for this schema if it is applicable"
        },
        "type" : {
          "type" : "string",
          "example" : "string",
          "description" : "The type ex: array , boolean, integer , null , number, object, string"
        },
        "enum" : {
          "type" : "array",
          "items" : {
            "type" : "object"
          }
        }
      }
    },
    "Discriminator" : {
      "type" : "object",
      "properties" : {
        "propertyName" : {
          "type" : "string"
        },
        "mapping" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "ErrorResponse" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "An identifier",
          "readOnly" : true
        },
        "title" : {
          "type" : "string",
          "description" : "Schema title"
        },
        "description" : {
          "type" : "string",
          "description" : "Description of the Schema"
        },
        "format" : {
          "type" : "string",
          "description" : "The format ex: int32, int64, float, double, byte, binary, date, date-time or password"
        },
        "required" : {
          "type" : "array",
          "description" : "Specifies if the parameter is required",
          "items" : {
            "type" : "string"
          }
        },
        "properties" : {
          "type" : "object",
          "description" : "Not used because our model does not support inline nested types",
          "additionalProperties" : {
            "$ref" : "#/definitions/SchemaObject"
          }
        },
        "additionalProperties" : {
          "type" : "object",
          "description" : "Specifies additional schema properties"
        },
        "items" : {
          "description" : "if the schema is an array specifies the items type",
          "$ref" : "#/definitions/SchemaObject"
        },
        "example" : {
          "type" : "object",
          "description" : "Specifies an example of an instance of this schema"
        },
        "xml" : {
          "type" : "object",
          "description" : "Specifies metadata to describe the XML representation format of this schema"
        },
        "maxLength" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 100,
          "description" : "Indicates the maximum length of a parameter of type 'string'"
        },
        "minLength" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 3,
          "description" : "Indicates the minimum length of a parameter of type 'string'. If not present, assumed default value is 0."
        },
        "pattern" : {
          "type" : "string",
          "example" : 3,
          "description" : "Specifies a valid regular expression against which a parameter of type 'string' is validated."
        },
        "exclusiveMinimum" : {
          "type" : "boolean",
          "example" : true,
          "description" : "If true, specifies that the value of the number parameter must be greater than the specified minimum value, otherwise the value must be great than, or equal to, the specified minimum value."
        },
        "exclusiveMaximum" : {
          "type" : "boolean",
          "example" : false,
          "description" : "If true, specifies that the value of the number parameter must be less than the specified maximum value, otherwise the value must be less than, or equal to, the specified maximum value."
        },
        "minimum" : {
          "type" : "object",
          "example" : 1,
          "description" : "Specifies the minimum possible value of the number parameter."
        },
        "maximum" : {
          "type" : "object",
          "example" : 100,
          "description" : "Specifies the maximum possible value of the number parameter."
        },
        "multipleOf" : {
          "example" : 10,
          "description" : "Specifies that the value of the number parameter must be divisible by this value. Must be an integer value > 0",
          "$ref" : "#/definitions/Number"
        },
        "maxItems" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 3,
          "description" : "Specifies the maximum number of items permitted for array parameters. Must be an integer value greater than, or equal to 0"
        },
        "minItems" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "Specifies the minimum number of items permitted for array parameters. Must be an integer value greater than, or equal to 0"
        },
        "uniqueItems" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Specifies whether or not all array items should be unique."
        },
        "allowEmptyValue" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not an empty value is permitted."
        },
        "maxProperties" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 3,
          "description" : "Specifies the maximum number of items permitted for object parameters. Must be an integer value greater than, or equal to 0"
        },
        "minProperties" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "Specifies the minimum number of items permitted for object parameters. Must be an integer value greater than, or equal to 0"
        },
        "not" : {
          "description" : "Specifies that the schema can not be the one defined in this field",
          "$ref" : "#/definitions/SchemaObject"
        },
        "nullable" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not a null value for the defined schema should be allowed"
        },
        "readOnly" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not an object property is read only and should not be used as part of the request"
        },
        "writeOnly" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not an object property is write only and should not be used as part of the response"
        },
        "deprecated" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not the schema is deprecated. It should be transitioned out of usage"
        },
        "externalDocs" : {
          "description" : "Specifies external documentation",
          "$ref" : "#/definitions/ExternalDocs"
        },
        "discriminator" : {
          "description" : "Specifies an object name that is used to differentiate between other schemas. It adds support for polymorphism.",
          "$ref" : "#/definitions/Discriminator"
        },
        "collectionFormat" : {
          "type" : "string"
        },
        "oneOf" : {
          "type" : "array",
          "description" : "Specifies that the schema can be one of those listed",
          "items" : {
            "$ref" : "#/definitions/SchemaObject"
          }
        },
        "anyOf" : {
          "type" : "array",
          "description" : "Specifies that the schema can be any of those listed",
          "items" : {
            "$ref" : "#/definitions/SchemaObject"
          }
        },
        "allOf" : {
          "type" : "array",
          "description" : "Specifies that the schema is a combination of all of those listed",
          "items" : {
            "$ref" : "#/definitions/SchemaObject"
          }
        },
        "code" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 404,
          "description" : "The response code"
        },
        "reason" : {
          "type" : "string",
          "example" : "Not Found",
          "description" : "The response reason"
        },
        "schema" : {
          "description" : "The response schema",
          "$ref" : "#/definitions/SchemaObject"
        },
        "$ref" : {
          "type" : "string",
          "example" : "#/definitions/User",
          "description" : "A Reference to a definition on definitions object"
        },
        "default" : {
          "type" : "object",
          "description" : "Default value for this schema if it is applicable"
        },
        "type" : {
          "type" : "string",
          "example" : "string",
          "description" : "The type ex: array , boolean, integer , null , number, object, string"
        },
        "enum" : {
          "type" : "array",
          "items" : {
            "type" : "object"
          }
        }
      },
      "description" : "An operation response code."
    },
    "ExternalDocs" : {
      "type" : "object",
      "properties" : {
        "description" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string"
        }
      }
    },
    "GrantTypes" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "An identifier",
          "readOnly" : true
        },
        "title" : {
          "type" : "string",
          "description" : "Schema title"
        },
        "description" : {
          "type" : "string",
          "description" : "Description of the Schema"
        },
        "format" : {
          "type" : "string",
          "description" : "The format ex: int32, int64, float, double, byte, binary, date, date-time or password"
        },
        "required" : {
          "type" : "array",
          "description" : "Specifies if the parameter is required",
          "items" : {
            "type" : "string"
          }
        },
        "properties" : {
          "type" : "object",
          "description" : "Not used because our model does not support inline nested types",
          "additionalProperties" : {
            "$ref" : "#/definitions/SchemaObject"
          }
        },
        "additionalProperties" : {
          "type" : "object",
          "description" : "Specifies additional schema properties"
        },
        "items" : {
          "description" : "if the schema is an array specifies the items type",
          "$ref" : "#/definitions/SchemaObject"
        },
        "example" : {
          "type" : "object",
          "description" : "Specifies an example of an instance of this schema"
        },
        "xml" : {
          "type" : "object",
          "description" : "Specifies metadata to describe the XML representation format of this schema"
        },
        "maxLength" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 100,
          "description" : "Indicates the maximum length of a parameter of type 'string'"
        },
        "minLength" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 3,
          "description" : "Indicates the minimum length of a parameter of type 'string'. If not present, assumed default value is 0."
        },
        "pattern" : {
          "type" : "string",
          "example" : 3,
          "description" : "Specifies a valid regular expression against which a parameter of type 'string' is validated."
        },
        "exclusiveMinimum" : {
          "type" : "boolean",
          "example" : true,
          "description" : "If true, specifies that the value of the number parameter must be greater than the specified minimum value, otherwise the value must be great than, or equal to, the specified minimum value."
        },
        "exclusiveMaximum" : {
          "type" : "boolean",
          "example" : false,
          "description" : "If true, specifies that the value of the number parameter must be less than the specified maximum value, otherwise the value must be less than, or equal to, the specified maximum value."
        },
        "minimum" : {
          "type" : "object",
          "example" : 1,
          "description" : "Specifies the minimum possible value of the number parameter."
        },
        "maximum" : {
          "type" : "object",
          "example" : 100,
          "description" : "Specifies the maximum possible value of the number parameter."
        },
        "multipleOf" : {
          "example" : 10,
          "description" : "Specifies that the value of the number parameter must be divisible by this value. Must be an integer value > 0",
          "$ref" : "#/definitions/Number"
        },
        "maxItems" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 3,
          "description" : "Specifies the maximum number of items permitted for array parameters. Must be an integer value greater than, or equal to 0"
        },
        "minItems" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "Specifies the minimum number of items permitted for array parameters. Must be an integer value greater than, or equal to 0"
        },
        "uniqueItems" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Specifies whether or not all array items should be unique."
        },
        "allowEmptyValue" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not an empty value is permitted."
        },
        "maxProperties" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 3,
          "description" : "Specifies the maximum number of items permitted for object parameters. Must be an integer value greater than, or equal to 0"
        },
        "minProperties" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "Specifies the minimum number of items permitted for object parameters. Must be an integer value greater than, or equal to 0"
        },
        "not" : {
          "description" : "Specifies that the schema can not be the one defined in this field",
          "$ref" : "#/definitions/SchemaObject"
        },
        "nullable" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not a null value for the defined schema should be allowed"
        },
        "readOnly" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not an object property is read only and should not be used as part of the request"
        },
        "writeOnly" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not an object property is write only and should not be used as part of the response"
        },
        "deprecated" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not the schema is deprecated. It should be transitioned out of usage"
        },
        "externalDocs" : {
          "description" : "Specifies external documentation",
          "$ref" : "#/definitions/ExternalDocs"
        },
        "discriminator" : {
          "description" : "Specifies an object name that is used to differentiate between other schemas. It adds support for polymorphism.",
          "$ref" : "#/definitions/Discriminator"
        },
        "collectionFormat" : {
          "type" : "string"
        },
        "oneOf" : {
          "type" : "array",
          "description" : "Specifies that the schema can be one of those listed",
          "items" : {
            "$ref" : "#/definitions/SchemaObject"
          }
        },
        "anyOf" : {
          "type" : "array",
          "description" : "Specifies that the schema can be any of those listed",
          "items" : {
            "$ref" : "#/definitions/SchemaObject"
          }
        },
        "allOf" : {
          "type" : "array",
          "description" : "Specifies that the schema is a combination of all of those listed",
          "items" : {
            "$ref" : "#/definitions/SchemaObject"
          }
        },
        "implicit" : {
          "description" : "The Implicit Grant flow definition.",
          "$ref" : "#/definitions/Implicit"
        },
        "authorization_code" : {
          "description" : "The Authorization Code Grant flow definition.",
          "$ref" : "#/definitions/AuthorizationCode"
        },
        "$ref" : {
          "type" : "string",
          "example" : "#/definitions/User",
          "description" : "A Reference to a definition on definitions object"
        },
        "default" : {
          "type" : "object",
          "description" : "Default value for this schema if it is applicable"
        },
        "type" : {
          "type" : "string",
          "example" : "string",
          "description" : "The type ex: array , boolean, integer , null , number, object, string"
        },
        "enum" : {
          "type" : "array",
          "items" : {
            "type" : "object"
          }
        }
      }
    },
    "Implicit" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "An identifier",
          "readOnly" : true
        },
        "title" : {
          "type" : "string",
          "description" : "Schema title"
        },
        "description" : {
          "type" : "string",
          "description" : "Description of the Schema"
        },
        "format" : {
          "type" : "string",
          "description" : "The format ex: int32, int64, float, double, byte, binary, date, date-time or password"
        },
        "required" : {
          "type" : "array",
          "description" : "Specifies if the parameter is required",
          "items" : {
            "type" : "string"
          }
        },
        "properties" : {
          "type" : "object",
          "description" : "Not used because our model does not support inline nested types",
          "additionalProperties" : {
            "$ref" : "#/definitions/SchemaObject"
          }
        },
        "additionalProperties" : {
          "type" : "object",
          "description" : "Specifies additional schema properties"
        },
        "items" : {
          "description" : "if the schema is an array specifies the items type",
          "$ref" : "#/definitions/SchemaObject"
        },
        "example" : {
          "type" : "object",
          "description" : "Specifies an example of an instance of this schema"
        },
        "xml" : {
          "type" : "object",
          "description" : "Specifies metadata to describe the XML representation format of this schema"
        },
        "maxLength" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 100,
          "description" : "Indicates the maximum length of a parameter of type 'string'"
        },
        "minLength" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 3,
          "description" : "Indicates the minimum length of a parameter of type 'string'. If not present, assumed default value is 0."
        },
        "pattern" : {
          "type" : "string",
          "example" : 3,
          "description" : "Specifies a valid regular expression against which a parameter of type 'string' is validated."
        },
        "exclusiveMinimum" : {
          "type" : "boolean",
          "example" : true,
          "description" : "If true, specifies that the value of the number parameter must be greater than the specified minimum value, otherwise the value must be great than, or equal to, the specified minimum value."
        },
        "exclusiveMaximum" : {
          "type" : "boolean",
          "example" : false,
          "description" : "If true, specifies that the value of the number parameter must be less than the specified maximum value, otherwise the value must be less than, or equal to, the specified maximum value."
        },
        "minimum" : {
          "type" : "object",
          "example" : 1,
          "description" : "Specifies the minimum possible value of the number parameter."
        },
        "maximum" : {
          "type" : "object",
          "example" : 100,
          "description" : "Specifies the maximum possible value of the number parameter."
        },
        "multipleOf" : {
          "example" : 10,
          "description" : "Specifies that the value of the number parameter must be divisible by this value. Must be an integer value > 0",
          "$ref" : "#/definitions/Number"
        },
        "maxItems" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 3,
          "description" : "Specifies the maximum number of items permitted for array parameters. Must be an integer value greater than, or equal to 0"
        },
        "minItems" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "Specifies the minimum number of items permitted for array parameters. Must be an integer value greater than, or equal to 0"
        },
        "uniqueItems" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Specifies whether or not all array items should be unique."
        },
        "allowEmptyValue" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not an empty value is permitted."
        },
        "maxProperties" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 3,
          "description" : "Specifies the maximum number of items permitted for object parameters. Must be an integer value greater than, or equal to 0"
        },
        "minProperties" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "Specifies the minimum number of items permitted for object parameters. Must be an integer value greater than, or equal to 0"
        },
        "not" : {
          "description" : "Specifies that the schema can not be the one defined in this field",
          "$ref" : "#/definitions/SchemaObject"
        },
        "nullable" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not a null value for the defined schema should be allowed"
        },
        "readOnly" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not an object property is read only and should not be used as part of the request"
        },
        "writeOnly" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not an object property is write only and should not be used as part of the response"
        },
        "deprecated" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not the schema is deprecated. It should be transitioned out of usage"
        },
        "externalDocs" : {
          "description" : "Specifies external documentation",
          "$ref" : "#/definitions/ExternalDocs"
        },
        "discriminator" : {
          "description" : "Specifies an object name that is used to differentiate between other schemas. It adds support for polymorphism.",
          "$ref" : "#/definitions/Discriminator"
        },
        "collectionFormat" : {
          "type" : "string"
        },
        "oneOf" : {
          "type" : "array",
          "description" : "Specifies that the schema can be one of those listed",
          "items" : {
            "$ref" : "#/definitions/SchemaObject"
          }
        },
        "anyOf" : {
          "type" : "array",
          "description" : "Specifies that the schema can be any of those listed",
          "items" : {
            "$ref" : "#/definitions/SchemaObject"
          }
        },
        "allOf" : {
          "type" : "array",
          "description" : "Specifies that the schema is a combination of all of those listed",
          "items" : {
            "$ref" : "#/definitions/SchemaObject"
          }
        },
        "loginEndpoint" : {
          "description" : "The login endpoint definition.",
          "$ref" : "#/definitions/LoginEndpoint"
        },
        "tokenName" : {
          "type" : "string",
          "example" : "access_token",
          "description" : "An optional alternative name to standard 'access_token' OAuth2 parameter."
        },
        "$ref" : {
          "type" : "string",
          "example" : "#/definitions/User",
          "description" : "A Reference to a definition on definitions object"
        },
        "default" : {
          "type" : "object",
          "description" : "Default value for this schema if it is applicable"
        },
        "type" : {
          "type" : "string",
          "example" : "string",
          "description" : "The type ex: array , boolean, integer , null , number, object, string"
        },
        "enum" : {
          "type" : "array",
          "items" : {
            "type" : "object"
          }
        }
      }
    },
    "LoginEndpoint" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "An identifier",
          "readOnly" : true
        },
        "title" : {
          "type" : "string",
          "description" : "Schema title"
        },
        "description" : {
          "type" : "string",
          "description" : "Description of the Schema"
        },
        "format" : {
          "type" : "string",
          "description" : "The format ex: int32, int64, float, double, byte, binary, date, date-time or password"
        },
        "required" : {
          "type" : "array",
          "description" : "Specifies if the parameter is required",
          "items" : {
            "type" : "string"
          }
        },
        "properties" : {
          "type" : "object",
          "description" : "Not used because our model does not support inline nested types",
          "additionalProperties" : {
            "$ref" : "#/definitions/SchemaObject"
          }
        },
        "additionalProperties" : {
          "type" : "object",
          "description" : "Specifies additional schema properties"
        },
        "items" : {
          "description" : "if the schema is an array specifies the items type",
          "$ref" : "#/definitions/SchemaObject"
        },
        "example" : {
          "type" : "object",
          "description" : "Specifies an example of an instance of this schema"
        },
        "xml" : {
          "type" : "object",
          "description" : "Specifies metadata to describe the XML representation format of this schema"
        },
        "maxLength" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 100,
          "description" : "Indicates the maximum length of a parameter of type 'string'"
        },
        "minLength" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 3,
          "description" : "Indicates the minimum length of a parameter of type 'string'. If not present, assumed default value is 0."
        },
        "pattern" : {
          "type" : "string",
          "example" : 3,
          "description" : "Specifies a valid regular expression against which a parameter of type 'string' is validated."
        },
        "exclusiveMinimum" : {
          "type" : "boolean",
          "example" : true,
          "description" : "If true, specifies that the value of the number parameter must be greater than the specified minimum value, otherwise the value must be great than, or equal to, the specified minimum value."
        },
        "exclusiveMaximum" : {
          "type" : "boolean",
          "example" : false,
          "description" : "If true, specifies that the value of the number parameter must be less than the specified maximum value, otherwise the value must be less than, or equal to, the specified maximum value."
        },
        "minimum" : {
          "type" : "object",
          "example" : 1,
          "description" : "Specifies the minimum possible value of the number parameter."
        },
        "maximum" : {
          "type" : "object",
          "example" : 100,
          "description" : "Specifies the maximum possible value of the number parameter."
        },
        "multipleOf" : {
          "example" : 10,
          "description" : "Specifies that the value of the number parameter must be divisible by this value. Must be an integer value > 0",
          "$ref" : "#/definitions/Number"
        },
        "maxItems" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 3,
          "description" : "Specifies the maximum number of items permitted for array parameters. Must be an integer value greater than, or equal to 0"
        },
        "minItems" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "Specifies the minimum number of items permitted for array parameters. Must be an integer value greater than, or equal to 0"
        },
        "uniqueItems" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Specifies whether or not all array items should be unique."
        },
        "allowEmptyValue" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not an empty value is permitted."
        },
        "maxProperties" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 3,
          "description" : "Specifies the maximum number of items permitted for object parameters. Must be an integer value greater than, or equal to 0"
        },
        "minProperties" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "Specifies the minimum number of items permitted for object parameters. Must be an integer value greater than, or equal to 0"
        },
        "not" : {
          "description" : "Specifies that the schema can not be the one defined in this field",
          "$ref" : "#/definitions/SchemaObject"
        },
        "nullable" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not a null value for the defined schema should be allowed"
        },
        "readOnly" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not an object property is read only and should not be used as part of the request"
        },
        "writeOnly" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not an object property is write only and should not be used as part of the response"
        },
        "deprecated" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not the schema is deprecated. It should be transitioned out of usage"
        },
        "externalDocs" : {
          "description" : "Specifies external documentation",
          "$ref" : "#/definitions/ExternalDocs"
        },
        "discriminator" : {
          "description" : "Specifies an object name that is used to differentiate between other schemas. It adds support for polymorphism.",
          "$ref" : "#/definitions/Discriminator"
        },
        "collectionFormat" : {
          "type" : "string"
        },
        "oneOf" : {
          "type" : "array",
          "description" : "Specifies that the schema can be one of those listed",
          "items" : {
            "$ref" : "#/definitions/SchemaObject"
          }
        },
        "anyOf" : {
          "type" : "array",
          "description" : "Specifies that the schema can be any of those listed",
          "items" : {
            "$ref" : "#/definitions/SchemaObject"
          }
        },
        "allOf" : {
          "type" : "array",
          "description" : "Specifies that the schema is a combination of all of those listed",
          "items" : {
            "$ref" : "#/definitions/SchemaObject"
          }
        },
        "url" : {
          "type" : "string",
          "example" : "http://myapi.io/oauth/dialog",
          "description" : "The URL of the authorization endpoint for the implicit grant flow. The value should be in a URL format."
        },
        "$ref" : {
          "type" : "string",
          "example" : "#/definitions/User",
          "description" : "A Reference to a definition on definitions object"
        },
        "default" : {
          "type" : "object",
          "description" : "Default value for this schema if it is applicable"
        },
        "type" : {
          "type" : "string",
          "example" : "string",
          "description" : "The type ex: array , boolean, integer , null , number, object, string"
        },
        "enum" : {
          "type" : "array",
          "items" : {
            "type" : "object"
          }
        }
      }
    },
    "Number" : {
      "type" : "object"
    },
    "Operation" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "An identifier",
          "readOnly" : true
        },
        "title" : {
          "type" : "string",
          "description" : "Schema title"
        },
        "description" : {
          "type" : "string",
          "description" : "Description of the Schema"
        },
        "format" : {
          "type" : "string",
          "description" : "The format ex: int32, int64, float, double, byte, binary, date, date-time or password"
        },
        "required" : {
          "type" : "array",
          "description" : "Specifies if the parameter is required",
          "items" : {
            "type" : "string"
          }
        },
        "properties" : {
          "type" : "object",
          "description" : "Not used because our model does not support inline nested types",
          "additionalProperties" : {
            "$ref" : "#/definitions/SchemaObject"
          }
        },
        "additionalProperties" : {
          "type" : "object",
          "description" : "Specifies additional schema properties"
        },
        "items" : {
          "description" : "if the schema is an array specifies the items type",
          "$ref" : "#/definitions/SchemaObject"
        },
        "example" : {
          "type" : "object",
          "description" : "Specifies an example of an instance of this schema"
        },
        "xml" : {
          "type" : "object",
          "description" : "Specifies metadata to describe the XML representation format of this schema"
        },
        "maxLength" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 100,
          "description" : "Indicates the maximum length of a parameter of type 'string'"
        },
        "minLength" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 3,
          "description" : "Indicates the minimum length of a parameter of type 'string'. If not present, assumed default value is 0."
        },
        "pattern" : {
          "type" : "string",
          "example" : 3,
          "description" : "Specifies a valid regular expression against which a parameter of type 'string' is validated."
        },
        "exclusiveMinimum" : {
          "type" : "boolean",
          "example" : true,
          "description" : "If true, specifies that the value of the number parameter must be greater than the specified minimum value, otherwise the value must be great than, or equal to, the specified minimum value."
        },
        "exclusiveMaximum" : {
          "type" : "boolean",
          "example" : false,
          "description" : "If true, specifies that the value of the number parameter must be less than the specified maximum value, otherwise the value must be less than, or equal to, the specified maximum value."
        },
        "minimum" : {
          "type" : "object",
          "example" : 1,
          "description" : "Specifies the minimum possible value of the number parameter."
        },
        "maximum" : {
          "type" : "object",
          "example" : 100,
          "description" : "Specifies the maximum possible value of the number parameter."
        },
        "multipleOf" : {
          "example" : 10,
          "description" : "Specifies that the value of the number parameter must be divisible by this value. Must be an integer value > 0",
          "$ref" : "#/definitions/Number"
        },
        "maxItems" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 3,
          "description" : "Specifies the maximum number of items permitted for array parameters. Must be an integer value greater than, or equal to 0"
        },
        "minItems" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "Specifies the minimum number of items permitted for array parameters. Must be an integer value greater than, or equal to 0"
        },
        "uniqueItems" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Specifies whether or not all array items should be unique."
        },
        "allowEmptyValue" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not an empty value is permitted."
        },
        "maxProperties" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 3,
          "description" : "Specifies the maximum number of items permitted for object parameters. Must be an integer value greater than, or equal to 0"
        },
        "minProperties" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "Specifies the minimum number of items permitted for object parameters. Must be an integer value greater than, or equal to 0"
        },
        "not" : {
          "description" : "Specifies that the schema can not be the one defined in this field",
          "$ref" : "#/definitions/SchemaObject"
        },
        "nullable" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not a null value for the defined schema should be allowed"
        },
        "readOnly" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not an object property is read only and should not be used as part of the request"
        },
        "writeOnly" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not an object property is write only and should not be used as part of the response"
        },
        "externalDocs" : {
          "description" : "Specifies external documentation",
          "$ref" : "#/definitions/ExternalDocs"
        },
        "discriminator" : {
          "description" : "Specifies an object name that is used to differentiate between other schemas. It adds support for polymorphism.",
          "$ref" : "#/definitions/Discriminator"
        },
        "collectionFormat" : {
          "type" : "string"
        },
        "oneOf" : {
          "type" : "array",
          "description" : "Specifies that the schema can be one of those listed",
          "items" : {
            "$ref" : "#/definitions/SchemaObject"
          }
        },
        "anyOf" : {
          "type" : "array",
          "description" : "Specifies that the schema can be any of those listed",
          "items" : {
            "$ref" : "#/definitions/SchemaObject"
          }
        },
        "allOf" : {
          "type" : "array",
          "description" : "Specifies that the schema is a combination of all of those listed",
          "items" : {
            "$ref" : "#/definitions/SchemaObject"
          }
        },
        "httpMethod" : {
          "type" : "string",
          "example" : "GET",
          "description" : "The HTTP method"
        },
        "nickname" : {
          "type" : "string",
          "example" : "getUserById",
          "description" : "The nickname of the operation"
        },
        "summary" : {
          "type" : "string",
          "example" : "Gets a user by ID",
          "description" : "A short summary description of the operation"
        },
        "notes" : {
          "type" : "string",
          "example" : "If the user does not exist, then a *404 Not Found* error is returned",
          "description" : "A detailed description of the operation"
        },
        "responseClass" : {
          "type" : "string",
          "example" : "User",
          "description" : "The return type of the method, e.g. void, array, or a type found in models"
        },
        "errorResponses" : {
          "type" : "array",
          "description" : "A list of possible response messages and their meanings",
          "items" : {
            "$ref" : "#/definitions/ErrorResponse"
          }
        },
        "consumes" : {
          "type" : "array",
          "example" : [ "application/json" ],
          "description" : "The content types that the operation consumes",
          "items" : {
            "type" : "string"
          }
        },
        "produces" : {
          "type" : "array",
          "example" : [ "application/json" ],
          "description" : "The content types that the operation produces",
          "items" : {
            "type" : "string"
          }
        },
        "authorizations" : {
          "type" : "object",
          "example" : { },
          "description" : "Authorizations",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          }
        },
        "tags" : {
          "type" : "object",
          "example" : {
            "Category" : [ "Social Network", "Photos" ],
            "Type" : [ "REST" ],
            "Department" : [ "Development" ]
          },
          "description" : "The list of tags associated with this API operation. Each tag can have multiple values",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "securityProfile" : {
          "description" : "The security profile associated with the API Method. This profile will override the profile associated with the API",
          "$ref" : "#/definitions/SwaggerSecurityProfile"
        },
        "documentationUrl" : {
          "type" : "string",
          "example" : "http://api.acme.com/docs#method",
          "description" : "The documentation URL for the operation"
        },
        "cors" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Indicates that the API is CORS enabled"
        },
        "parameters" : {
          "type" : "array",
          "description" : "A list of accepted parameters",
          "items" : {
            "$ref" : "#/definitions/ParameterV11ex"
          }
        },
        "$ref" : {
          "type" : "string",
          "example" : "#/definitions/User",
          "description" : "A Reference to a definition on definitions object"
        },
        "default" : {
          "type" : "object",
          "description" : "Default value for this schema if it is applicable"
        },
        "type" : {
          "type" : "string",
          "example" : "User",
          "description" : "The return type of the method, e.g. void, array, or a type found in models"
        },
        "enum" : {
          "type" : "array",
          "items" : {
            "type" : "object"
          }
        }
      },
      "description" : "An operation available to an API path."
    },
    "ParameterV11ex" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "An identifier",
          "readOnly" : true
        },
        "title" : {
          "type" : "string",
          "description" : "Schema title"
        },
        "description" : {
          "type" : "string",
          "description" : "Description of the Schema"
        },
        "format" : {
          "type" : "string",
          "description" : "The format ex: int32, int64, float, double, byte, binary, date, date-time or password"
        },
        "required" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Indicates that the parameter is required"
        },
        "properties" : {
          "type" : "object",
          "description" : "Not used because our model does not support inline nested types",
          "additionalProperties" : {
            "$ref" : "#/definitions/SchemaObject"
          }
        },
        "additionalProperties" : {
          "type" : "object",
          "description" : "Specifies additional schema properties"
        },
        "items" : {
          "example" : {
            "$ref" : "User"
          },
          "description" : "If the parameter *type* is \"array\", then the parameter should reference a model schema.",
          "$ref" : "#/definitions/SchemaObject"
        },
        "example" : {
          "type" : "object",
          "description" : "Specifies an example of an instance of this schema"
        },
        "xml" : {
          "type" : "object",
          "description" : "Specifies metadata to describe the XML representation format of this schema"
        },
        "maxLength" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 100,
          "description" : "Indicates the maximum length of a parameter of type 'string'"
        },
        "minLength" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 3,
          "description" : "Indicates the minimum length of a parameter of type 'string'. If not present, assumed default value is 0."
        },
        "pattern" : {
          "type" : "string",
          "example" : 3,
          "description" : "Specifies a valid regular expression against which a parameter of type 'string' is validated."
        },
        "exclusiveMinimum" : {
          "type" : "boolean",
          "example" : true,
          "description" : "If true, specifies that the value of the number parameter must be greater than the specified minimum value, otherwise the value must be great than, or equal to, the specified minimum value."
        },
        "exclusiveMaximum" : {
          "type" : "boolean",
          "example" : false,
          "description" : "If true, specifies that the value of the number parameter must be less than the specified maximum value, otherwise the value must be less than, or equal to, the specified maximum value."
        },
        "multipleOf" : {
          "example" : 10,
          "description" : "Specifies that the value of the number parameter must be divisible by this value. Must be an integer value > 0",
          "$ref" : "#/definitions/Number"
        },
        "maxItems" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 3,
          "description" : "Specifies the maximum number of items permitted for array parameters. Must be an integer value greater than, or equal to 0"
        },
        "minItems" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "Specifies the minimum number of items permitted for array parameters. Must be an integer value greater than, or equal to 0"
        },
        "uniqueItems" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Specifies whether or not all array items should be unique."
        },
        "allowEmptyValue" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not an empty value is permitted."
        },
        "maxProperties" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 3,
          "description" : "Specifies the maximum number of items permitted for object parameters. Must be an integer value greater than, or equal to 0"
        },
        "minProperties" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "Specifies the minimum number of items permitted for object parameters. Must be an integer value greater than, or equal to 0"
        },
        "not" : {
          "description" : "Specifies that the schema can not be the one defined in this field",
          "$ref" : "#/definitions/SchemaObject"
        },
        "nullable" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not a null value for the defined schema should be allowed"
        },
        "readOnly" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not an object property is read only and should not be used as part of the request"
        },
        "writeOnly" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not an object property is write only and should not be used as part of the response"
        },
        "externalDocs" : {
          "description" : "Specifies external documentation",
          "$ref" : "#/definitions/ExternalDocs"
        },
        "discriminator" : {
          "description" : "Specifies an object name that is used to differentiate between other schemas. It adds support for polymorphism.",
          "$ref" : "#/definitions/Discriminator"
        },
        "collectionFormat" : {
          "type" : "string"
        },
        "oneOf" : {
          "type" : "array",
          "description" : "Specifies that the schema can be one of those listed",
          "items" : {
            "$ref" : "#/definitions/SchemaObject"
          }
        },
        "anyOf" : {
          "type" : "array",
          "description" : "Specifies that the schema can be any of those listed",
          "items" : {
            "$ref" : "#/definitions/SchemaObject"
          }
        },
        "allOf" : {
          "type" : "array",
          "description" : "Specifies that the schema is a combination of all of those listed",
          "items" : {
            "$ref" : "#/definitions/SchemaObject"
          }
        },
        "name" : {
          "type" : "string",
          "example" : "userId",
          "description" : "The parameter name"
        },
        "dataType" : {
          "type" : "string",
          "example" : "string",
          "description" : "The parameter data type, e.g. boolean, byte, date, double, float, integer, long, string, or a type name found in models"
        },
        "paramType" : {
          "type" : "string",
          "example" : "body",
          "description" : "The parameter type, e.g. query, path, body, header"
        },
        "allowMultiple" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates that the parameter can be included multiple times (e.g. query or form)"
        },
        "$ref" : {
          "type" : "string",
          "example" : "#/definitions/User",
          "description" : "A Reference to a definition on definitions object"
        },
        "default" : {
          "type" : "object",
          "description" : "Default value for this schema if it is applicable"
        },
        "type" : {
          "type" : "string",
          "example" : "string",
          "description" : "The type ex: array , boolean, integer , null , number, object, string"
        },
        "enum" : {
          "type" : "array",
          "items" : {
            "type" : "object"
          }
        }
      },
      "description" : "An operation parameter."
    },
    "SchemaObject" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "An identifier",
          "readOnly" : true
        },
        "title" : {
          "type" : "string",
          "description" : "Schema title"
        },
        "description" : {
          "type" : "string",
          "description" : "Description of the Schema"
        },
        "format" : {
          "type" : "string",
          "description" : "The format ex: int32, int64, float, double, byte, binary, date, date-time or password"
        },
        "required" : {
          "type" : "array",
          "description" : "Specifies if the parameter is required",
          "items" : {
            "type" : "string"
          }
        },
        "properties" : {
          "type" : "object",
          "description" : "Not used because our model does not support inline nested types",
          "additionalProperties" : {
            "$ref" : "#/definitions/SchemaObject"
          }
        },
        "additionalProperties" : {
          "type" : "object",
          "description" : "Specifies additional schema properties"
        },
        "items" : {
          "description" : "if the schema is an array specifies the items type",
          "$ref" : "#/definitions/SchemaObject"
        },
        "example" : {
          "type" : "object",
          "description" : "Specifies an example of an instance of this schema"
        },
        "xml" : {
          "type" : "object",
          "description" : "Specifies metadata to describe the XML representation format of this schema"
        },
        "maxLength" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 100,
          "description" : "Indicates the maximum length of a parameter of type 'string'"
        },
        "minLength" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 3,
          "description" : "Indicates the minimum length of a parameter of type 'string'. If not present, assumed default value is 0."
        },
        "pattern" : {
          "type" : "string",
          "example" : 3,
          "description" : "Specifies a valid regular expression against which a parameter of type 'string' is validated."
        },
        "exclusiveMinimum" : {
          "type" : "boolean",
          "example" : true,
          "description" : "If true, specifies that the value of the number parameter must be greater than the specified minimum value, otherwise the value must be great than, or equal to, the specified minimum value."
        },
        "exclusiveMaximum" : {
          "type" : "boolean",
          "example" : false,
          "description" : "If true, specifies that the value of the number parameter must be less than the specified maximum value, otherwise the value must be less than, or equal to, the specified maximum value."
        },
        "minimum" : {
          "type" : "object",
          "example" : 1,
          "description" : "Specifies the minimum possible value of the number parameter."
        },
        "maximum" : {
          "type" : "object",
          "example" : 100,
          "description" : "Specifies the maximum possible value of the number parameter."
        },
        "multipleOf" : {
          "example" : 10,
          "description" : "Specifies that the value of the number parameter must be divisible by this value. Must be an integer value > 0",
          "$ref" : "#/definitions/Number"
        },
        "maxItems" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 3,
          "description" : "Specifies the maximum number of items permitted for array parameters. Must be an integer value greater than, or equal to 0"
        },
        "minItems" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "Specifies the minimum number of items permitted for array parameters. Must be an integer value greater than, or equal to 0"
        },
        "uniqueItems" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Specifies whether or not all array items should be unique."
        },
        "allowEmptyValue" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not an empty value is permitted."
        },
        "maxProperties" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 3,
          "description" : "Specifies the maximum number of items permitted for object parameters. Must be an integer value greater than, or equal to 0"
        },
        "minProperties" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "Specifies the minimum number of items permitted for object parameters. Must be an integer value greater than, or equal to 0"
        },
        "not" : {
          "description" : "Specifies that the schema can not be the one defined in this field",
          "$ref" : "#/definitions/SchemaObject"
        },
        "nullable" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not a null value for the defined schema should be allowed"
        },
        "readOnly" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not an object property is read only and should not be used as part of the request"
        },
        "writeOnly" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not an object property is write only and should not be used as part of the response"
        },
        "deprecated" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not the schema is deprecated. It should be transitioned out of usage"
        },
        "externalDocs" : {
          "description" : "Specifies external documentation",
          "$ref" : "#/definitions/ExternalDocs"
        },
        "discriminator" : {
          "description" : "Specifies an object name that is used to differentiate between other schemas. It adds support for polymorphism.",
          "$ref" : "#/definitions/Discriminator"
        },
        "collectionFormat" : {
          "type" : "string"
        },
        "oneOf" : {
          "type" : "array",
          "description" : "Specifies that the schema can be one of those listed",
          "items" : {
            "$ref" : "#/definitions/SchemaObject"
          }
        },
        "anyOf" : {
          "type" : "array",
          "description" : "Specifies that the schema can be any of those listed",
          "items" : {
            "$ref" : "#/definitions/SchemaObject"
          }
        },
        "allOf" : {
          "type" : "array",
          "description" : "Specifies that the schema is a combination of all of those listed",
          "items" : {
            "$ref" : "#/definitions/SchemaObject"
          }
        },
        "$ref" : {
          "type" : "string",
          "example" : "#/definitions/User",
          "description" : "A Reference to a definition on definitions object"
        },
        "default" : {
          "type" : "object",
          "description" : "Default value for this schema if it is applicable"
        },
        "type" : {
          "type" : "string",
          "example" : "string",
          "description" : "The type ex: array , boolean, integer , null , number, object, string"
        },
        "enum" : {
          "type" : "array",
          "items" : {
            "type" : "object"
          }
        }
      }
    },
    "Scope" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "An identifier",
          "readOnly" : true
        },
        "title" : {
          "type" : "string",
          "description" : "Schema title"
        },
        "description" : {
          "type" : "string",
          "description" : "Description of the Schema"
        },
        "format" : {
          "type" : "string",
          "description" : "The format ex: int32, int64, float, double, byte, binary, date, date-time or password"
        },
        "required" : {
          "type" : "array",
          "description" : "Specifies if the parameter is required",
          "items" : {
            "type" : "string"
          }
        },
        "properties" : {
          "type" : "object",
          "description" : "Not used because our model does not support inline nested types",
          "additionalProperties" : {
            "$ref" : "#/definitions/SchemaObject"
          }
        },
        "additionalProperties" : {
          "type" : "object",
          "description" : "Specifies additional schema properties"
        },
        "items" : {
          "description" : "if the schema is an array specifies the items type",
          "$ref" : "#/definitions/SchemaObject"
        },
        "example" : {
          "type" : "object",
          "description" : "Specifies an example of an instance of this schema"
        },
        "xml" : {
          "type" : "object",
          "description" : "Specifies metadata to describe the XML representation format of this schema"
        },
        "maxLength" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 100,
          "description" : "Indicates the maximum length of a parameter of type 'string'"
        },
        "minLength" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 3,
          "description" : "Indicates the minimum length of a parameter of type 'string'. If not present, assumed default value is 0."
        },
        "pattern" : {
          "type" : "string",
          "example" : 3,
          "description" : "Specifies a valid regular expression against which a parameter of type 'string' is validated."
        },
        "exclusiveMinimum" : {
          "type" : "boolean",
          "example" : true,
          "description" : "If true, specifies that the value of the number parameter must be greater than the specified minimum value, otherwise the value must be great than, or equal to, the specified minimum value."
        },
        "exclusiveMaximum" : {
          "type" : "boolean",
          "example" : false,
          "description" : "If true, specifies that the value of the number parameter must be less than the specified maximum value, otherwise the value must be less than, or equal to, the specified maximum value."
        },
        "minimum" : {
          "type" : "object",
          "example" : 1,
          "description" : "Specifies the minimum possible value of the number parameter."
        },
        "maximum" : {
          "type" : "object",
          "example" : 100,
          "description" : "Specifies the maximum possible value of the number parameter."
        },
        "multipleOf" : {
          "example" : 10,
          "description" : "Specifies that the value of the number parameter must be divisible by this value. Must be an integer value > 0",
          "$ref" : "#/definitions/Number"
        },
        "maxItems" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 3,
          "description" : "Specifies the maximum number of items permitted for array parameters. Must be an integer value greater than, or equal to 0"
        },
        "minItems" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "Specifies the minimum number of items permitted for array parameters. Must be an integer value greater than, or equal to 0"
        },
        "uniqueItems" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Specifies whether or not all array items should be unique."
        },
        "allowEmptyValue" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not an empty value is permitted."
        },
        "maxProperties" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 3,
          "description" : "Specifies the maximum number of items permitted for object parameters. Must be an integer value greater than, or equal to 0"
        },
        "minProperties" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "Specifies the minimum number of items permitted for object parameters. Must be an integer value greater than, or equal to 0"
        },
        "not" : {
          "description" : "Specifies that the schema can not be the one defined in this field",
          "$ref" : "#/definitions/SchemaObject"
        },
        "nullable" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not a null value for the defined schema should be allowed"
        },
        "readOnly" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not an object property is read only and should not be used as part of the request"
        },
        "writeOnly" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not an object property is write only and should not be used as part of the response"
        },
        "deprecated" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not the schema is deprecated. It should be transitioned out of usage"
        },
        "externalDocs" : {
          "description" : "Specifies external documentation",
          "$ref" : "#/definitions/ExternalDocs"
        },
        "discriminator" : {
          "description" : "Specifies an object name that is used to differentiate between other schemas. It adds support for polymorphism.",
          "$ref" : "#/definitions/Discriminator"
        },
        "collectionFormat" : {
          "type" : "string"
        },
        "oneOf" : {
          "type" : "array",
          "description" : "Specifies that the schema can be one of those listed",
          "items" : {
            "$ref" : "#/definitions/SchemaObject"
          }
        },
        "anyOf" : {
          "type" : "array",
          "description" : "Specifies that the schema can be any of those listed",
          "items" : {
            "$ref" : "#/definitions/SchemaObject"
          }
        },
        "allOf" : {
          "type" : "array",
          "description" : "Specifies that the schema is a combination of all of those listed",
          "items" : {
            "$ref" : "#/definitions/SchemaObject"
          }
        },
        "scope" : {
          "type" : "string",
          "example" : "read",
          "description" : "The OAuth2 scope name."
        },
        "$ref" : {
          "type" : "string",
          "example" : "#/definitions/User",
          "description" : "A Reference to a definition on definitions object"
        },
        "default" : {
          "type" : "object",
          "description" : "Default value for this schema if it is applicable"
        },
        "type" : {
          "type" : "string",
          "example" : "string",
          "description" : "The type ex: array , boolean, integer , null , number, object, string"
        },
        "enum" : {
          "type" : "array",
          "items" : {
            "type" : "object"
          }
        }
      }
    },
    "Swagger" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "An identifier",
          "readOnly" : true
        },
        "title" : {
          "type" : "string",
          "description" : "Schema title"
        },
        "description" : {
          "type" : "string",
          "description" : "Description of the Schema"
        },
        "format" : {
          "type" : "string",
          "description" : "The format ex: int32, int64, float, double, byte, binary, date, date-time or password"
        },
        "required" : {
          "type" : "array",
          "description" : "Specifies if the parameter is required",
          "items" : {
            "type" : "string"
          }
        },
        "properties" : {
          "type" : "object",
          "description" : "Not used because our model does not support inline nested types",
          "additionalProperties" : {
            "$ref" : "#/definitions/SchemaObject"
          }
        },
        "additionalProperties" : {
          "type" : "object",
          "description" : "Specifies additional schema properties"
        },
        "items" : {
          "description" : "if the schema is an array specifies the items type",
          "$ref" : "#/definitions/SchemaObject"
        },
        "example" : {
          "type" : "object",
          "description" : "Specifies an example of an instance of this schema"
        },
        "xml" : {
          "type" : "object",
          "description" : "Specifies metadata to describe the XML representation format of this schema"
        },
        "maxLength" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 100,
          "description" : "Indicates the maximum length of a parameter of type 'string'"
        },
        "minLength" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 3,
          "description" : "Indicates the minimum length of a parameter of type 'string'. If not present, assumed default value is 0."
        },
        "pattern" : {
          "type" : "string",
          "example" : 3,
          "description" : "Specifies a valid regular expression against which a parameter of type 'string' is validated."
        },
        "exclusiveMinimum" : {
          "type" : "boolean",
          "example" : true,
          "description" : "If true, specifies that the value of the number parameter must be greater than the specified minimum value, otherwise the value must be great than, or equal to, the specified minimum value."
        },
        "exclusiveMaximum" : {
          "type" : "boolean",
          "example" : false,
          "description" : "If true, specifies that the value of the number parameter must be less than the specified maximum value, otherwise the value must be less than, or equal to, the specified maximum value."
        },
        "minimum" : {
          "type" : "object",
          "example" : 1,
          "description" : "Specifies the minimum possible value of the number parameter."
        },
        "maximum" : {
          "type" : "object",
          "example" : 100,
          "description" : "Specifies the maximum possible value of the number parameter."
        },
        "multipleOf" : {
          "example" : 10,
          "description" : "Specifies that the value of the number parameter must be divisible by this value. Must be an integer value > 0",
          "$ref" : "#/definitions/Number"
        },
        "maxItems" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 3,
          "description" : "Specifies the maximum number of items permitted for array parameters. Must be an integer value greater than, or equal to 0"
        },
        "minItems" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "Specifies the minimum number of items permitted for array parameters. Must be an integer value greater than, or equal to 0"
        },
        "uniqueItems" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Specifies whether or not all array items should be unique."
        },
        "allowEmptyValue" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not an empty value is permitted."
        },
        "maxProperties" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 3,
          "description" : "Specifies the maximum number of items permitted for object parameters. Must be an integer value greater than, or equal to 0"
        },
        "minProperties" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "Specifies the minimum number of items permitted for object parameters. Must be an integer value greater than, or equal to 0"
        },
        "not" : {
          "description" : "Specifies that the schema can not be the one defined in this field",
          "$ref" : "#/definitions/SchemaObject"
        },
        "nullable" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not a null value for the defined schema should be allowed"
        },
        "readOnly" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not an object property is read only and should not be used as part of the request"
        },
        "writeOnly" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not an object property is write only and should not be used as part of the response"
        },
        "deprecated" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates that the API is deprecated.  If 'true', then the API may have a 'retirementDate'."
        },
        "externalDocs" : {
          "description" : "Specifies external documentation",
          "$ref" : "#/definitions/ExternalDocs"
        },
        "discriminator" : {
          "description" : "Specifies an object name that is used to differentiate between other schemas. It adds support for polymorphism.",
          "$ref" : "#/definitions/Discriminator"
        },
        "collectionFormat" : {
          "type" : "string"
        },
        "oneOf" : {
          "type" : "array",
          "description" : "Specifies that the schema can be one of those listed",
          "items" : {
            "$ref" : "#/definitions/SchemaObject"
          }
        },
        "anyOf" : {
          "type" : "array",
          "description" : "Specifies that the schema can be any of those listed",
          "items" : {
            "$ref" : "#/definitions/SchemaObject"
          }
        },
        "allOf" : {
          "type" : "array",
          "description" : "Specifies that the schema is a combination of all of those listed",
          "items" : {
            "$ref" : "#/definitions/SchemaObject"
          }
        },
        "apiVersion" : {
          "type" : "string",
          "example" : 1.0,
          "description" : "The API version"
        },
        "swaggerVersion" : {
          "type" : "string",
          "example" : 1.1,
          "description" : "The Swagger version"
        },
        "basePath" : {
          "type" : "string",
          "example" : "http://basepath.org",
          "description" : "The base path"
        },
        "resourcePath" : {
          "type" : "string",
          "example" : "/api",
          "description" : "The resource path hosted"
        },
        "models" : {
          "type" : "object",
          "example" : {
            "User" : {
              "type" : "object",
              "required" : [ "id", "name", "email" ],
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "name" : {
                  "type" : "string"
                },
                "email" : {
                  "type" : "string"
                }
              }
            }
          },
          "description" : "The models/schema for the API",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "consumes" : {
          "type" : "array",
          "example" : [ "application/json" ],
          "description" : "The content types that the API consumes",
          "items" : {
            "type" : "string"
          }
        },
        "produces" : {
          "type" : "array",
          "example" : [ "application/json" ],
          "description" : "The content types that the API produces",
          "items" : {
            "type" : "string"
          }
        },
        "authorizations" : {
          "type" : "object",
          "example" : { },
          "description" : "The Authorization schemes provided for this API",
          "additionalProperties" : {
            "$ref" : "#/definitions/Authorization"
          }
        },
        "name" : {
          "type" : "string",
          "example" : "Flickr",
          "description" : "The name of the API"
        },
        "summary" : {
          "type" : "string",
          "example" : "The Flickr photo-sharing API",
          "description" : "Brief summary of the API."
        },
        "securityProfile" : {
          "description" : "The security profile associated with the API",
          "$ref" : "#/definitions/SwaggerSecurityProfile"
        },
        "basePaths" : {
          "type" : "array",
          "example" : [ "http://localhost:8080", "https://localhost:8081" ],
          "description" : "Array of basePaths supported for this API/service, based on the configured ports",
          "items" : {
            "type" : "string"
          }
        },
        "image" : {
          "type" : "string",
          "description" : "API image URL"
        },
        "state" : {
          "type" : "string",
          "example" : "rest",
          "description" : "The state of the API.  Possible values: 'pending', 'unpublished', or 'published'."
        },
        "cors" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Indicates that the API is CORS enabled"
        },
        "expired" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates that the API is expired."
        },
        "retirementDate" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1420070400000,
          "description" : "Indicates that the API is deprecated and will be retired on the supplied date (in milliseconds)."
        },
        "retired" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates that the API is retired."
        },
        "tags" : {
          "type" : "object",
          "example" : {
            "Category" : [ "Social Network", "Photos" ],
            "Type" : [ "REST" ],
            "Department" : [ "Development" ]
          },
          "description" : "The list of tags associated with this API. Each tag can have multiple values",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "documentationUrl" : {
          "type" : "string",
          "example" : "http://api.acme.com/docs#method",
          "description" : "The documentation URL for the operation"
        },
        "availableApiDefinitions" : {
          "type" : "object",
          "example" : { },
          "description" : "The schema definitions that this API supports and links to those definitions.",
          "additionalProperties" : {
            "type" : "string",
            "format" : "uri"
          }
        },
        "availableSDK" : {
          "type" : "object",
          "example" : { },
          "description" : "The SDK downloads that this API supports and links to those downloads.",
          "additionalProperties" : {
            "type" : "string",
            "format" : "uri"
          }
        },
        "apis" : {
          "type" : "array",
          "description" : "The API resources",
          "items" : {
            "$ref" : "#/definitions/API"
          }
        },
        "$ref" : {
          "type" : "string",
          "example" : "#/definitions/User",
          "description" : "A Reference to a definition on definitions object"
        },
        "default" : {
          "type" : "object",
          "description" : "Default value for this schema if it is applicable"
        },
        "type" : {
          "type" : "string",
          "example" : "rest",
          "description" : "The resource type. Possible values: 'rest', 'wsdl'"
        },
        "enum" : {
          "type" : "array",
          "items" : {
            "type" : "object"
          }
        }
      },
      "description" : "A Swagger API definition."
    },
    "SwaggerSecurityDevice" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "example" : "HTTPBasicSecurityDevice",
          "description" : "Type identifier for the device. Possible Values: HTTPBasicSecurityDevice, OAuthSecurityDevice, AWSRESTRequestSecurityDevice, AWSQueryStringRequestSecurityDevice, APIKeyOnlySecurityDevice, APIKeyAndSecretSecurityDevice, TwoWaySSLSecurityDevice"
        },
        "typeDisplayName" : {
          "type" : "string",
          "example" : "HTTP Basic Authentication",
          "description" : "Textual display name for the device"
        },
        "name" : {
          "type" : "string",
          "example" : "HTTP Basic Device",
          "description" : "Name of the device"
        },
        "order" : {
          "type" : "integer",
          "format" : "int32",
          "example" : "HTTP Basic Device",
          "description" : "Order of preference, zero being highest. Devices will attempt to authenticate the incoming request using this order of preference."
        },
        "scopes" : {
          "type" : "array",
          "example" : "resource.READ",
          "description" : "The list of scopes defined for the security device.",
          "items" : {
            "type" : "string"
          }
        },
        "scopeMatching" : {
          "type" : "string",
          "example" : "Any",
          "description" : "Specifies how scopes will be matched. Possible values: [ Any, All ]"
        }
      },
      "description" : "Security Device details."
    },
    "SwaggerSecurityProfile" : {
      "type" : "object",
      "properties" : {
        "devices" : {
          "type" : "array",
          "example" : [ {
            "type" : "APIKeyOnlySecurityDevice",
            "typeDisplayName" : "API Key only",
            "name" : "API Key Device",
            "order" : 1,
            "keyField" : "KeyId"
          }, {
            "type" : "HTTPBasicSecurityDevice",
            "typeDisplayName" : "HTTP Basic Authentication",
            "name" : "HTTP Basic Device",
            "order" : 0,
            "realm" : "axway"
          } ],
          "description" : "List of Security Devices associated with this profile",
          "items" : {
            "$ref" : "#/definitions/SwaggerSecurityDevice"
          }
        }
      },
      "description" : "Security Profile details."
    },
    "TokenEndpoint" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "An identifier",
          "readOnly" : true
        },
        "title" : {
          "type" : "string",
          "description" : "Schema title"
        },
        "description" : {
          "type" : "string",
          "description" : "Description of the Schema"
        },
        "format" : {
          "type" : "string",
          "description" : "The format ex: int32, int64, float, double, byte, binary, date, date-time or password"
        },
        "required" : {
          "type" : "array",
          "description" : "Specifies if the parameter is required",
          "items" : {
            "type" : "string"
          }
        },
        "properties" : {
          "type" : "object",
          "description" : "Not used because our model does not support inline nested types",
          "additionalProperties" : {
            "$ref" : "#/definitions/SchemaObject"
          }
        },
        "additionalProperties" : {
          "type" : "object",
          "description" : "Specifies additional schema properties"
        },
        "items" : {
          "description" : "if the schema is an array specifies the items type",
          "$ref" : "#/definitions/SchemaObject"
        },
        "example" : {
          "type" : "object",
          "description" : "Specifies an example of an instance of this schema"
        },
        "xml" : {
          "type" : "object",
          "description" : "Specifies metadata to describe the XML representation format of this schema"
        },
        "maxLength" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 100,
          "description" : "Indicates the maximum length of a parameter of type 'string'"
        },
        "minLength" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 3,
          "description" : "Indicates the minimum length of a parameter of type 'string'. If not present, assumed default value is 0."
        },
        "pattern" : {
          "type" : "string",
          "example" : 3,
          "description" : "Specifies a valid regular expression against which a parameter of type 'string' is validated."
        },
        "exclusiveMinimum" : {
          "type" : "boolean",
          "example" : true,
          "description" : "If true, specifies that the value of the number parameter must be greater than the specified minimum value, otherwise the value must be great than, or equal to, the specified minimum value."
        },
        "exclusiveMaximum" : {
          "type" : "boolean",
          "example" : false,
          "description" : "If true, specifies that the value of the number parameter must be less than the specified maximum value, otherwise the value must be less than, or equal to, the specified maximum value."
        },
        "minimum" : {
          "type" : "object",
          "example" : 1,
          "description" : "Specifies the minimum possible value of the number parameter."
        },
        "maximum" : {
          "type" : "object",
          "example" : 100,
          "description" : "Specifies the maximum possible value of the number parameter."
        },
        "multipleOf" : {
          "example" : 10,
          "description" : "Specifies that the value of the number parameter must be divisible by this value. Must be an integer value > 0",
          "$ref" : "#/definitions/Number"
        },
        "maxItems" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 3,
          "description" : "Specifies the maximum number of items permitted for array parameters. Must be an integer value greater than, or equal to 0"
        },
        "minItems" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "Specifies the minimum number of items permitted for array parameters. Must be an integer value greater than, or equal to 0"
        },
        "uniqueItems" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Specifies whether or not all array items should be unique."
        },
        "allowEmptyValue" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not an empty value is permitted."
        },
        "maxProperties" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 3,
          "description" : "Specifies the maximum number of items permitted for object parameters. Must be an integer value greater than, or equal to 0"
        },
        "minProperties" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "Specifies the minimum number of items permitted for object parameters. Must be an integer value greater than, or equal to 0"
        },
        "not" : {
          "description" : "Specifies that the schema can not be the one defined in this field",
          "$ref" : "#/definitions/SchemaObject"
        },
        "nullable" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not a null value for the defined schema should be allowed"
        },
        "readOnly" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not an object property is read only and should not be used as part of the request"
        },
        "writeOnly" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not an object property is write only and should not be used as part of the response"
        },
        "deprecated" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not the schema is deprecated. It should be transitioned out of usage"
        },
        "externalDocs" : {
          "description" : "Specifies external documentation",
          "$ref" : "#/definitions/ExternalDocs"
        },
        "discriminator" : {
          "description" : "Specifies an object name that is used to differentiate between other schemas. It adds support for polymorphism.",
          "$ref" : "#/definitions/Discriminator"
        },
        "collectionFormat" : {
          "type" : "string"
        },
        "oneOf" : {
          "type" : "array",
          "description" : "Specifies that the schema can be one of those listed",
          "items" : {
            "$ref" : "#/definitions/SchemaObject"
          }
        },
        "anyOf" : {
          "type" : "array",
          "description" : "Specifies that the schema can be any of those listed",
          "items" : {
            "$ref" : "#/definitions/SchemaObject"
          }
        },
        "allOf" : {
          "type" : "array",
          "description" : "Specifies that the schema is a combination of all of those listed",
          "items" : {
            "$ref" : "#/definitions/SchemaObject"
          }
        },
        "url" : {
          "type" : "string",
          "description" : "The URL of the token endpoint for the authentication code grant flow. The value should be in a URL format."
        },
        "tokenName" : {
          "type" : "string",
          "example" : "access_code",
          "description" : "An optional alternative name to standard 'access_code' OAuth2 parameter."
        },
        "$ref" : {
          "type" : "string",
          "example" : "#/definitions/User",
          "description" : "A Reference to a definition on definitions object"
        },
        "default" : {
          "type" : "object",
          "description" : "Default value for this schema if it is applicable"
        },
        "type" : {
          "type" : "string",
          "example" : "string",
          "description" : "The type ex: array , boolean, integer , null , number, object, string"
        },
        "enum" : {
          "type" : "array",
          "items" : {
            "type" : "object"
          }
        }
      }
    },
    "TokenRequestEndpoint" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "An identifier",
          "readOnly" : true
        },
        "title" : {
          "type" : "string",
          "description" : "Schema title"
        },
        "description" : {
          "type" : "string",
          "description" : "Description of the Schema"
        },
        "format" : {
          "type" : "string",
          "description" : "The format ex: int32, int64, float, double, byte, binary, date, date-time or password"
        },
        "required" : {
          "type" : "array",
          "description" : "Specifies if the parameter is required",
          "items" : {
            "type" : "string"
          }
        },
        "properties" : {
          "type" : "object",
          "description" : "Not used because our model does not support inline nested types",
          "additionalProperties" : {
            "$ref" : "#/definitions/SchemaObject"
          }
        },
        "additionalProperties" : {
          "type" : "object",
          "description" : "Specifies additional schema properties"
        },
        "items" : {
          "description" : "if the schema is an array specifies the items type",
          "$ref" : "#/definitions/SchemaObject"
        },
        "example" : {
          "type" : "object",
          "description" : "Specifies an example of an instance of this schema"
        },
        "xml" : {
          "type" : "object",
          "description" : "Specifies metadata to describe the XML representation format of this schema"
        },
        "maxLength" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 100,
          "description" : "Indicates the maximum length of a parameter of type 'string'"
        },
        "minLength" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 3,
          "description" : "Indicates the minimum length of a parameter of type 'string'. If not present, assumed default value is 0."
        },
        "pattern" : {
          "type" : "string",
          "example" : 3,
          "description" : "Specifies a valid regular expression against which a parameter of type 'string' is validated."
        },
        "exclusiveMinimum" : {
          "type" : "boolean",
          "example" : true,
          "description" : "If true, specifies that the value of the number parameter must be greater than the specified minimum value, otherwise the value must be great than, or equal to, the specified minimum value."
        },
        "exclusiveMaximum" : {
          "type" : "boolean",
          "example" : false,
          "description" : "If true, specifies that the value of the number parameter must be less than the specified maximum value, otherwise the value must be less than, or equal to, the specified maximum value."
        },
        "minimum" : {
          "type" : "object",
          "example" : 1,
          "description" : "Specifies the minimum possible value of the number parameter."
        },
        "maximum" : {
          "type" : "object",
          "example" : 100,
          "description" : "Specifies the maximum possible value of the number parameter."
        },
        "multipleOf" : {
          "example" : 10,
          "description" : "Specifies that the value of the number parameter must be divisible by this value. Must be an integer value > 0",
          "$ref" : "#/definitions/Number"
        },
        "maxItems" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 3,
          "description" : "Specifies the maximum number of items permitted for array parameters. Must be an integer value greater than, or equal to 0"
        },
        "minItems" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "Specifies the minimum number of items permitted for array parameters. Must be an integer value greater than, or equal to 0"
        },
        "uniqueItems" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Specifies whether or not all array items should be unique."
        },
        "allowEmptyValue" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not an empty value is permitted."
        },
        "maxProperties" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 3,
          "description" : "Specifies the maximum number of items permitted for object parameters. Must be an integer value greater than, or equal to 0"
        },
        "minProperties" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "Specifies the minimum number of items permitted for object parameters. Must be an integer value greater than, or equal to 0"
        },
        "not" : {
          "description" : "Specifies that the schema can not be the one defined in this field",
          "$ref" : "#/definitions/SchemaObject"
        },
        "nullable" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not a null value for the defined schema should be allowed"
        },
        "readOnly" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not an object property is read only and should not be used as part of the request"
        },
        "writeOnly" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not an object property is write only and should not be used as part of the response"
        },
        "deprecated" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not the schema is deprecated. It should be transitioned out of usage"
        },
        "externalDocs" : {
          "description" : "Specifies external documentation",
          "$ref" : "#/definitions/ExternalDocs"
        },
        "discriminator" : {
          "description" : "Specifies an object name that is used to differentiate between other schemas. It adds support for polymorphism.",
          "$ref" : "#/definitions/Discriminator"
        },
        "collectionFormat" : {
          "type" : "string"
        },
        "oneOf" : {
          "type" : "array",
          "description" : "Specifies that the schema can be one of those listed",
          "items" : {
            "$ref" : "#/definitions/SchemaObject"
          }
        },
        "anyOf" : {
          "type" : "array",
          "description" : "Specifies that the schema can be any of those listed",
          "items" : {
            "$ref" : "#/definitions/SchemaObject"
          }
        },
        "allOf" : {
          "type" : "array",
          "description" : "Specifies that the schema is a combination of all of those listed",
          "items" : {
            "$ref" : "#/definitions/SchemaObject"
          }
        },
        "url" : {
          "type" : "string",
          "example" : ".",
          "description" : "The URL of the authorization endpoint for the authentication code grant flow. The value should be in a URL format."
        },
        "clientIdName" : {
          "type" : "string",
          "example" : ".",
          "description" : "An optional alternative name to standard \"client_id\" OAuth2 parameter."
        },
        "clientSecretName" : {
          "type" : "string",
          "example" : ".",
          "description" : "An optional alternative name to standard \"client_secret\" OAuth2 parameter."
        },
        "$ref" : {
          "type" : "string",
          "example" : "#/definitions/User",
          "description" : "A Reference to a definition on definitions object"
        },
        "default" : {
          "type" : "object",
          "description" : "Default value for this schema if it is applicable"
        },
        "type" : {
          "type" : "string",
          "example" : "string",
          "description" : "The type ex: array , boolean, integer , null , number, object, string"
        },
        "enum" : {
          "type" : "array",
          "items" : {
            "type" : "object"
          }
        }
      }
    },
    "CustomPropertiesConfig" : {
      "type" : "object",
      "properties" : {
        "user" : {
          "type" : "object",
          "description" : "Dictionary containing the custom properties defined for API Manager User entities",
          "additionalProperties" : {
            "$ref" : "#/definitions/CustomProperty"
          }
        },
        "organization" : {
          "type" : "object",
          "description" : "Dictionary containing the custom properties defined for API Manager Organization entities",
          "additionalProperties" : {
            "$ref" : "#/definitions/CustomProperty"
          }
        },
        "application" : {
          "type" : "object",
          "description" : "Dictionary containing the custom properties defined for API Manager Application entities",
          "additionalProperties" : {
            "$ref" : "#/definitions/CustomProperty"
          }
        },
        "api" : {
          "type" : "object",
          "description" : "Dictionary containing the custom properties defined for API Manager Frontend API entities",
          "additionalProperties" : {
            "$ref" : "#/definitions/CustomProperty"
          }
        }
      },
      "description" : "Custom property metadata configuration. This data represents the customPropertiesConfig object as defined in the API Manager app.config file."
    },
    "CustomProperty" : {
      "type" : "object",
      "properties" : {
        "label" : {
          "type" : "string",
          "example" : "My first custom property",
          "description" : "The label for the custom property, which will be displayed in the API Manager UI"
        },
        "type" : {
          "type" : "string",
          "example" : "custom",
          "description" : "The type of the custom property. Can be one of the following values: ['custom', 'switch', 'select', 'number']. Default value is 'custom' (i.e. free-form text)"
        },
        "disabled" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether the custom property is disabled. Default value is false"
        },
        "required" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether the custom property is required or optional. Default value is false"
        },
        "help" : {
          "type" : "string",
          "example" : "This is the help text for my first custom property",
          "description" : "Specifies the help text for the custom property that will appear in the API Manager UI. This field is optional"
        },
        "permissions" : {
          "type" : "object",
          "description" : "Specifies the read/write permissions per role (admin, oadmin and user) for the custom property. This field is optional. By default all roles have read/write access",
          "additionalProperties" : {
            "$ref" : "#/definitions/CustomPropertyPermission"
          }
        },
        "options" : {
          "type" : "array",
          "description" : "Specifies the options for 'switch' and 'select' custom properties which will be available in the API Manager UI. This field is conditional and only required for custom properties of type 'switch' or 'select', otherwise it is ignored.",
          "items" : {
            "$ref" : "#/definitions/CustomPropertyOption"
          }
        },
        "defaultValue" : {
          "type" : "object",
          "example" : "Hello World!",
          "description" : "Specifies the default value for the custom property. This field is optional, but recommended. This type of this field depends on the type of the custom property. It can be one of the following: string, integer, double, boolean"
        },
        "regex" : {
          "type" : "string",
          "example" : "^\\d+$",
          "description" : "Specifies a validation regular expression for custom properties of type 'custom'. This field is conditional, i.e. optional for custom properties of type 'custom', otherwise ignored"
        },
        "minValue" : {
          "type" : "object",
          "example" : 0,
          "description" : "Specifies a validation minimum value for custom properties of type 'number'. Can be an integer, a floating point number, or a string represation of an integer or floating point number. This field is conditional, i.e. optional for custom properties of type 'number', otherwise ignored. minValue and maxValue must both be of the same type so as to avoid unexpected behaviour during validation. Scientific notation is not supported."
        },
        "maxValue" : {
          "type" : "object",
          "example" : 100,
          "description" : "Specifies a validation maximum value for custom properties of type 'number'. Can be an integer, a floating point number, or a string represation of an integer or floating point number. This field is conditional, i.e. optional for custom properties of type 'number', otherwise ignored. minValue and maxValue must both be of the same type so as to avoid unexpected behaviour during validation. Scientific notation is not supported."
        },
        "decimalPlaces" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 2,
          "description" : "Specifies the number of decimal places to be used when validating 'number' fields. Default value is 0, which indicates that the value is a whole number."
        },
        "error" : {
          "type" : "string",
          "example" : "Invalid input. Please enter a valid Version 4 UUID",
          "description" : "Specifies an error message which will appear when input validation fails. The format of this field is a string. This field is only valid for custom properties of type 'custom' and 'number', otherwise ignored"
        },
        "custom" : {
          "type" : "object",
          "example" : "{ portalPermissions: { joomlaAdmin: { read: true, write: true }, joomlaUser: { read: true, write: false } } }",
          "description" : "Optional field allowing for the definition of custom metadata for the custom property. This will be used by clients other than API Manager, but API Manager may populate this field with API Manager-specific values in the future. If present, must be a valid JSON 'object'."
        }
      },
      "description" : "Custom property metadata."
    },
    "CustomPropertyOption" : {
      "type" : "object",
      "properties" : {
        "value" : {
          "type" : "object",
          "example" : 2,
          "description" : "Specifies the value associated with a custom property option. The field can be of the following formats: string, integer, double, boolean"
        },
        "label" : {
          "type" : "string",
          "example" : "Two",
          "description" : "Specifies the label (as displayed in the API Manager UI) associated with a custom property option."
        }
      },
      "description" : "Custom property option configuration for 'switch' and 'select' custom properties."
    },
    "CustomPropertyPermission" : {
      "type" : "object",
      "properties" : {
        "read" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Value specifying the read permission on a custom property for the associated role. Default value is true"
        },
        "write" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Value specifying the write permission on a custom property for the associated role. Default value is true"
        },
        "visible" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Value specifying whether or not the custom property is visible in API Manager for the associated role. Default value is true"
        }
      },
      "description" : "Custom property permission configuration specifying whether read/write/visible permissions are allowed on the custom property."
    },
    "AuthenticationProfile" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "Default Security Profile",
          "description" : "Unique name of the Profile"
        },
        "isDefault" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates that this is the default profile.  There can be only one default."
        },
        "parameters" : {
          "type" : "object",
          "example" : {
            "apiKey" : "e7812c14-b67a-4eef-84a1-e18c0d8436ba",
            "apiKeyField" : "KeyId",
            "httpLocation" : "query"
          },
          "description" : "Parameters for the backend authentication profile",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "type" : {
          "type" : "string",
          "example" : "apikey",
          "description" : "Type of backend authentication. Possible values: *none*, *http_basic*, *http_digest*, *apiKey*, *oauth*, and *ssl*."
        }
      },
      "description" : "Outbound authentication profile."
    },
    "CORSProfile" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "Default Security Profile",
          "description" : "Unique name of the Profile"
        },
        "isDefault" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates that this is the default profile.  There can be only one default."
        },
        "origins" : {
          "type" : "array",
          "example" : [ "http://api.google.com", "http://api.flickr.com" ],
          "description" : "List of origins for this CORS Profile",
          "items" : {
            "type" : "string"
          }
        },
        "allowedHeaders" : {
          "type" : "array",
          "example" : [ "X-Request-Value", "X-Hello-World" ],
          "description" : "List of headers...",
          "items" : {
            "type" : "string"
          }
        },
        "exposedHeaders" : {
          "type" : "array",
          "example" : [ "X-Trace", "X-CorrelationID" ],
          "description" : "List of headers...",
          "items" : {
            "type" : "string"
          }
        },
        "supportCredentials" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or credentials are supported for APIs/API Methods employing this CORS Profile."
        },
        "maxAgeSeconds" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 84600,
          "description" : "Specifies the amount of time responses to OPTIONS requests are stored, in seconds, in the preflight result cache"
        }
      },
      "description" : "CORS configuration profile."
    },
    "InboundProfiles" : {
      "type" : "object",
      "properties" : {
        "securityProfile" : {
          "type" : "string",
          "example" : "Default Inbound Security",
          "description" : "The name of the Security Profile to be used for this Virtualized API."
        },
        "corsProfile" : {
          "type" : "string",
          "example" : "Default CORS profile",
          "description" : "The name of the CORS Profile to be used for this Virtualized API."
        },
        "monitorAPI" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Enables metrics monitoring for the API"
        },
        "monitorSubject" : {
          "type" : "string",
          "example" : "authentication.subject.id",
          "description" : "Identifies the client for metrics monitoring"
        }
      },
      "description" : "Inbound profiles"
    },
    "OutboundProfiles" : {
      "type" : "object",
      "properties" : {
        "authenticationProfile" : {
          "type" : "string",
          "example" : "My Backend",
          "description" : "Outbound authentication credentials if __routeType__ is 'proxy'.  Can be null to indicate no credentials."
        },
        "routeType" : {
          "type" : "string",
          "example" : "proxy",
          "description" : "The route type.  Values are either: 'proxy' or 'policy'.    Can be null and defaults to *proxy*."
        },
        "requestPolicy" : {
          "type" : "string",
          "description" : "Request policy that applies to all outbound requests.  Can be null to indicate no policy."
        },
        "responsePolicy" : {
          "type" : "string",
          "description" : "Response policy that applies to all responses from outbound requests.  Can be null to indicate no policy."
        },
        "routePolicy" : {
          "type" : "string",
          "description" : "Route policy if the routeType is 'policy', in which case it must be a valid policy ID.  Can be null if __routeType__ is 'proxy'."
        },
        "faultHandlerPolicy" : {
          "type" : "string",
          "description" : "Fault handler policy that gets executed in the event of an error.  Can be null to indicate no policy."
        },
        "apiId" : {
          "type" : "string",
          "example" : "9064396e-7743-4644-a0b7-d30b421e2b30",
          "description" : "Route to a different API.  Can be null.  Ignored on the 'default' outbound profile."
        },
        "apiMethodId" : {
          "type" : "string",
          "example" : "7fd18d9a-1258-4031-a168-d7f6bf612dc1",
          "description" : "Route to a different API method.  Can be null.  Ignored on the 'default' outbound profile."
        },
        "parameters" : {
          "type" : "array",
          "description" : "A list of outbound parameters values - maps from frontend parameters to backend parameters.",
          "items" : {
            "$ref" : "#/definitions/ParamValue"
          }
        }
      },
      "description" : "Outbound profiles"
    },
    "ParamValue" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "id",
          "description" : "The parameter name."
        },
        "paramType" : {
          "type" : "string",
          "example" : "query",
          "description" : "The type of parameter type.  Can be one of: *body*, *query*, *path*, *form*, or *header*."
        },
        "type" : {
          "type" : "string",
          "example" : "string",
          "description" : "The parameter data type.  Can be one of: *string*, *integer*, etc."
        },
        "format" : {
          "type" : "string",
          "example" : "int64",
          "description" : "The parameter format"
        },
        "value" : {
          "type" : "string",
          "example" : "${params.path.id}",
          "description" : "The parameter value.  Can be a regular value, or a selector, e.g.: ${params.path.id}."
        },
        "required" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Indicates whether or not the parameter is required for the backend API."
        },
        "exclude" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates whether or not the parameter is excluded for the backend API."
        },
        "additional" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates whether or not the parameter is an additional parameter (does not replace an existing parameter)."
        }
      },
      "description" : "Outbound parameter value."
    },
    "SecurityDevice" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "My Pass-through Device",
          "description" : "Unique name of the Security Device."
        },
        "type" : {
          "type" : "string",
          "example" : "apiKey",
          "description" : "The Security device type.  Values are one of: *apiKey*, *awsHeader*, *awsQuery*, *basic*, *authPolicy*, *oauth*, *oauthExternal*, *passThrough*, or *twoWaySSL*."
        },
        "order" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "description" : "Specifies the order in which this device will be invoked."
        },
        "properties" : {
          "type" : "object",
          "example" : {
            "apiKeyFieldName" : "APIKey",
            "takeFrom" : "HEADER"
          },
          "description" : "List of device-specific properties.",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      },
      "description" : "Inbound security device."
    },
    "SecurityProfile" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "Default Security Profile",
          "description" : "Unique name of the Profile"
        },
        "isDefault" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates that this is the default profile.  There can be only one default."
        },
        "devices" : {
          "type" : "array",
          "description" : "List of SecurityDevice for this security profile",
          "items" : {
            "$ref" : "#/definitions/SecurityDevice"
          }
        }
      },
      "description" : "Inbound security profile."
    },
    "ServiceProfiles" : {
      "type" : "object",
      "properties" : {
        "apiId" : {
          "type" : "string",
          "example" : "96f745ae-a41a-41a9-aad8-8bf24b5cc27e",
          "description" : "The backend service API identifier"
        },
        "basePath" : {
          "type" : "string",
          "example" : "http://backend.io",
          "description" : "The backend service base path URL"
        }
      },
      "description" : "Service profile configuration for backend services"
    },
    "VirtualizedAPI" : {
      "type" : "object",
      "required" : [ "apiId", "apiRoutingKey", "authenticationProfiles", "caCerts", "corsProfiles", "deprecated", "descriptionManual", "descriptionMarkdown", "descriptionType", "descriptionUrl", "expired", "id", "image", "inboundProfiles", "name", "organizationId", "path", "retired", "retirementDate", "securityProfiles", "serviceProfiles", "state", "summary", "tags", "version", "vhost" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "bacb827e-e555-43fa-b006-50c7404aa990",
          "description" : "Unique ID of the virtualized API.",
          "readOnly" : true
        },
        "organizationId" : {
          "type" : "string",
          "example" : "b6889722b7-222-b06f-2eaaf1548898",
          "description" : "The organization that created the virtualized API."
        },
        "apiId" : {
          "type" : "string",
          "example" : "9064396e-7743-4644-a0b7-d30b421e2b30",
          "description" : "The identifier of the API that was virtualized.  This is the only attribute that is required to create a virtualized API."
        },
        "name" : {
          "type" : "string",
          "example" : "My virtualized API",
          "description" : "The name of this virtualized API."
        },
        "version" : {
          "type" : "string",
          "example" : 1.0,
          "description" : "The API version."
        },
        "apiRoutingKey" : {
          "type" : "string",
          "example" : 1,
          "description" : "The key for routing between two APIs on the same path."
        },
        "vhost" : {
          "type" : "string",
          "example" : "host.company.com",
          "description" : "The virtual host of this virtualized API."
        },
        "path" : {
          "type" : "string",
          "example" : "/flikr",
          "description" : "The path that services this virtualized API."
        },
        "descriptionType" : {
          "type" : "string",
          "example" : "manual",
          "description" : "Type of descripton to use.  One of: _manual_, _markdown_, _url_, or _original_ (default)."
        },
        "descriptionManual" : {
          "type" : "string",
          "example" : "My API\n====\n\nThis is my API.",
          "description" : "Markdown string to use as the description of the API."
        },
        "descriptionMarkdown" : {
          "type" : "string",
          "example" : "${environment.VINSTDIR}/../markdown/flickr/flickr.md",
          "description" : "Markdown file to use as the description of the API within the API Catalog."
        },
        "descriptionUrl" : {
          "type" : "string",
          "example" : "http://doc.api.org/myapi/mymethod#anchor",
          "description" : "External URL to use as the description of the API."
        },
        "summary" : {
          "type" : "string",
          "example" : "My API\n====\n\nThis is my API.",
          "description" : "A short summary description of the API."
        },
        "retired" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Immediately retires the virtualized API."
        },
        "expired" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Immediately expires the virtualized API."
        },
        "image" : {
          "type" : "string",
          "example" : "resources/photo.jpg",
          "description" : "URI of the image to be used for this virtualized API. To update the image, please refer to the API."
        },
        "retirementDate" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1364287486876,
          "description" : "Date to retire the virtualized API.  If _retired_ is true, this is the date on which it was retired."
        },
        "deprecated" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Immediately deprecates the virtualized API.  If deprecated, then _retiredOn_ is optionally used to retire the virtualized API on the specified date."
        },
        "state" : {
          "type" : "string",
          "example" : "unpublished",
          "description" : "The state of the virtualized API.  One of: unpublished, pending, or published."
        },
        "createdOn" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1364287486876,
          "description" : "Epoch/Unix time stamp when the virtualized API was created.",
          "readOnly" : true
        },
        "createdBy" : {
          "type" : "string",
          "example" : "de077cd8-83b7-46d1-b06f-2eaaf1548898",
          "description" : "The unique identifier for user that created the virtualized API.",
          "readOnly" : true
        },
        "corsProfiles" : {
          "type" : "array",
          "description" : "The suite of CORS Profiles for this virtualized API.",
          "items" : {
            "$ref" : "#/definitions/CORSProfile"
          }
        },
        "securityProfiles" : {
          "type" : "array",
          "description" : "The suite of Security Profiles for this virtualized API.",
          "items" : {
            "$ref" : "#/definitions/SecurityProfile"
          }
        },
        "authenticationProfiles" : {
          "type" : "array",
          "description" : "The suite of Authentication Profiles for this virtualized API.",
          "items" : {
            "$ref" : "#/definitions/AuthenticationProfile"
          }
        },
        "inboundProfiles" : {
          "type" : "object",
          "example" : {
            "_default" : {
              "monitorAPI" : "true",
              "securityProfile" : "Default Inbound Security",
              "corsProfile" : "Default CORS profile",
              "monitorSubject" : "authentication.subject.id"
            }
          },
          "description" : "The inbound profiles that apply to the virtualized API.  There must always a *\\_default* profile.",
          "additionalProperties" : {
            "$ref" : "#/definitions/InboundProfiles"
          }
        },
        "outboundProfiles" : {
          "type" : "object",
          "example" : {
            "_default" : {
              "authenticationProfile" : "My Backend",
              "apiMethodId" : "7fd18d9a-1258-4031-a168-d7f6bf612dc1",
              "routeType" : "proxy",
              "apiId" : "9064396e-7743-4644-a0b7-d30b421e2b30"
            }
          },
          "description" : "The outbound profiles that apply to the virtualized API.  There must always a *\\_default* profile.",
          "additionalProperties" : {
            "$ref" : "#/definitions/OutboundProfiles"
          }
        },
        "serviceProfiles" : {
          "type" : "object",
          "example" : {
            "_default" : {
              "basePath" : "http://backend.io",
              "apiId" : "96f745ae-a41a-41a9-aad8-8bf24b5cc27e"
            }
          },
          "description" : "The service profiles that apply to the virtualized API.  There must always a *\\_default* profile.",
          "additionalProperties" : {
            "$ref" : "#/definitions/ServiceProfiles"
          }
        },
        "caCerts" : {
          "type" : "array",
          "description" : "The outbound profiles that apply to the virtualized API.  There must always a *\\_default* profile.",
          "items" : {
            "$ref" : "#/definitions/CACert"
          }
        },
        "tags" : {
          "type" : "object",
          "example" : {
            "Category" : [ "Social Network, Photos" ],
            "Type" : [ "REST" ]
          },
          "description" : "The list of tags associated with this API. Each tag can have multiple values",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "description" : "Represents a virtualized, frontend API."
    },
    "APIDefinition" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "6d81f576-bf40-4fbd-8625-63d8f206f649",
          "description" : "A unique identifier."
        },
        "name" : {
          "type" : "string",
          "example" : "My API",
          "description" : "The name of the API."
        },
        "summary" : {
          "type" : "string",
          "example" : "This is a summary of my API",
          "description" : "A summary of the API."
        },
        "description" : {
          "type" : "string",
          "example" : "This is my API",
          "description" : "A detailed description of the API."
        },
        "version" : {
          "type" : "string",
          "example" : 1.0,
          "description" : "The API version."
        },
        "basePath" : {
          "type" : "string",
          "example" : "http://basepath.org",
          "description" : "The base path is where the API service is hosted."
        },
        "resourcePath" : {
          "type" : "string",
          "example" : "/api",
          "description" : "The resource path is applied to **basePath** to provide the prefix for all API methods."
        },
        "models" : {
          "type" : "object",
          "example" : {
            "User" : {
              "type" : "object",
              "required" : [ "id", "name", "email" ],
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "name" : {
                  "type" : "string"
                },
                "email" : {
                  "type" : "string"
                }
              }
            }
          },
          "description" : "The models/schema the that the API",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "consumes" : {
          "type" : "array",
          "example" : [ "application/json" ],
          "description" : "The content types that the API consumes",
          "items" : {
            "type" : "string"
          }
        },
        "produces" : {
          "type" : "array",
          "example" : [ "application/json" ],
          "description" : "The content types that the API produces",
          "items" : {
            "type" : "string"
          }
        },
        "integral" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Indicates that the API definition is integral to a frontend API; that the API was imported to define the frontend API."
        },
        "createdOn" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1364287486876,
          "description" : "Epoch/Unix time stamp when the organization was created."
        },
        "createdBy" : {
          "type" : "string",
          "example" : "a1c70859-702b-4f3a-a1ad-a61067fdc4c7",
          "description" : "The identifier of the user that created the API."
        },
        "organizationId" : {
          "type" : "string",
          "example" : "7d82323230-4fbd-8625-63d8f206f649",
          "description" : "The [Organization](Organization.html) identifier."
        },
        "serviceType" : {
          "type" : "string",
          "example" : "wsdl",
          "description" : "Indicates the type of service being imported. Possible values: rest, wsdl."
        },
        "hasOriginalDefinition" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Indicates whether or not an original definition is available"
        },
        "importUrl" : {
          "type" : "string",
          "example" : "http://petstore.swagger.io/v1/swagger.json",
          "description" : "Specifies the URL used to import the backend API definition."
        },
        "properties" : {
          "type" : "object",
          "example" : {
            "ServiceName" : "Calculator",
            "Type" : "WSDL"
          },
          "description" : "A list of properties associated with this API.",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      },
      "description" : "An API definition."
    },
    "APIPromotion" : {
      "type" : "object",
      "properties" : {
        "frontend" : {
          "description" : "Frontend API export.",
          "$ref" : "#/definitions/FrontendExport"
        },
        "backend" : {
          "description" : "Backend API export.",
          "$ref" : "#/definitions/BackendExport"
        },
        "exportVersion" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Export version"
        }
      },
      "description" : "API promotion package."
    },
    "Agnostic" : {
      "type" : "object",
      "properties" : {
        "api" : {
          "description" : "Agnostic API Definition representation",
          "$ref" : "#/definitions/APIDefinition"
        },
        "methods" : {
          "type" : "array",
          "description" : "List of agnostic method representation",
          "items" : {
            "$ref" : "#/definitions/Method"
          }
        }
      },
      "description" : "Backend API agnostic representation"
    },
    "BackendBlob" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "588c51d8-5b6f-4c2f-b0e8-3eeaf25d1458",
          "description" : "Unique identifier"
        },
        "type" : {
          "type" : "string",
          "example" : "swagger11",
          "description" : "Type of blob"
        },
        "blob" : {
          "type" : "string",
          "example" : "YmxvYg==",
          "description" : "Base64 encoded API"
        },
        "name" : {
          "type" : "string",
          "example" : "My API",
          "description" : "API name"
        },
        "importURL" : {
          "type" : "string",
          "example" : "My API",
          "description" : "Original URL"
        },
        "agnostic" : {
          "description" : "Backend API agnostic representation of the blob",
          "$ref" : "#/definitions/Agnostic"
        }
      },
      "description" : "Backend blob export definition."
    },
    "BackendExport" : {
      "type" : "object",
      "properties" : {
        "apiBlobs" : {
          "type" : "array",
          "description" : "List of backend API blobs",
          "items" : {
            "$ref" : "#/definitions/BackendBlob"
          }
        }
      },
      "description" : "Backend API export definition."
    },
    "BackendMethodExport" : {
      "type" : "object",
      "properties" : {
        "apiId" : {
          "type" : "string",
          "example" : "0a275f85-aec2-4100-8f9e-b4e7abdca108",
          "description" : "Internal use only."
        },
        "apiMethodId" : {
          "type" : "string",
          "example" : "19ec174e-b217-4c60-aa40-c22040569363",
          "description" : "Internal use only."
        },
        "op" : {
          "type" : "string",
          "example" : "MyAPI-1.0:GET:/things",
          "description" : "Internal use only."
        }
      },
      "description" : "Backend API method export."
    },
    "FrontendExport" : {
      "type" : "object",
      "properties" : {
        "apis" : {
          "type" : "array",
          "description" : "List of frontend API",
          "items" : {
            "$ref" : "#/definitions/VirtualizedAPI"
          }
        },
        "methods" : {
          "type" : "array",
          "description" : "List of frontend API methods",
          "items" : {
            "$ref" : "#/definitions/VirtualizedMethodExport"
          }
        },
        "backendMethods" : {
          "type" : "array",
          "description" : "List of backend API methods",
          "items" : {
            "$ref" : "#/definitions/BackendMethodExport"
          }
        },
        "imagedata" : {
          "type" : "object",
          "example" : { },
          "description" : "Image Export",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      },
      "description" : "Frontend API export definition."
    },
    "Method" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "014d138b-816c-42b8-8a2a-5b63e72ea46d",
          "description" : "The method identifier"
        },
        "apiId" : {
          "type" : "string",
          "example" : "6d81f576-bf40-4fbd-8625-63d8f206f649",
          "description" : "The API identifier to which this method belongs"
        },
        "path" : {
          "type" : "string",
          "example" : "/users",
          "description" : "The API path"
        },
        "verb" : {
          "type" : "string",
          "example" : "GET",
          "description" : "The HTTP verb"
        },
        "name" : {
          "type" : "string",
          "example" : "getUserById",
          "description" : "The name of the operation"
        },
        "summary" : {
          "type" : "string",
          "example" : "Gets a user by ID",
          "description" : "A short summary description of the operation"
        },
        "description" : {
          "type" : "string",
          "example" : "If the user does not exist, then a *404 Not Found* error is returned",
          "description" : "A detailed description of the operation"
        },
        "returnType" : {
          "type" : "string",
          "example" : "User",
          "description" : "The return type of the method, e.g. void, array, or a type found in models"
        },
        "parameters" : {
          "type" : "array",
          "description" : "A list of accepted parameters",
          "items" : {
            "$ref" : "#/definitions/Parameter"
          }
        },
        "responseCodes" : {
          "type" : "array",
          "description" : "A list of possible response messages and their meanings",
          "items" : {
            "$ref" : "#/definitions/ResponseCode"
          }
        },
        "consumes" : {
          "type" : "array",
          "example" : "application/json",
          "description" : "The content types that the operation consumes",
          "items" : {
            "type" : "string"
          }
        },
        "produces" : {
          "type" : "array",
          "example" : "application/json",
          "description" : "The content types that the operation produces",
          "items" : {
            "type" : "string"
          }
        },
        "properties" : {
          "type" : "object",
          "example" : {
            "soapOperation" : "calculator",
            "soapNamespace" : ""
          },
          "description" : "A list of properties associated with this API Method. The list of properties may vary, depending on the type of the parent API.",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "blob" : {
          "type" : "string"
        }
      },
      "description" : "A method available on an API resource."
    },
    "Parameter" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "userId",
          "description" : "The parameter name."
        },
        "type" : {
          "type" : "string",
          "example" : "string",
          "description" : "The parameter data type, e.g. *boolean*, *byte*, *date*, *double*, *float*, *integer*, *long*, *string*, or a type name found in [APIDefinition models](APIDefinition.html#models)."
        },
        "format" : {
          "type" : "string",
          "example" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "required" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Indicates that the parameter is required"
        },
        "allowMultiple" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates that the parameter can be included multiple times (e.g. query or form)"
        },
        "items" : {
          "$ref" : "#/definitions/SchemaObject"
        },
        "defaultValue" : {
          "type" : "object",
          "example" : "text",
          "description" : "Provides a default value for the parameter"
        },
        "maxLength" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 100,
          "description" : "Indicates the maximum length of a parameter of type 'string'"
        },
        "minLength" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 3,
          "description" : "Indicates the minimum length of a parameter of type 'string'. If not present, assumed default value is 0."
        },
        "pattern" : {
          "type" : "string",
          "example" : "^[a-z]$",
          "description" : "Specifies a valid regular expression against which a parameter of type 'string' is validated."
        },
        "exclusiveMinimum" : {
          "type" : "boolean",
          "example" : true,
          "description" : "If true, specifies that the value of the number parameter must be greater than the specified minimum value, otherwise the value must be great than, or equal to, the specified minimum value."
        },
        "exclusiveMaximum" : {
          "type" : "boolean",
          "example" : false,
          "description" : "If true, specifies that the value of the number parameter must be less than the specified maximum value, otherwise the value must be less than, or equal to, the specified maximum value."
        },
        "minimum" : {
          "type" : "object",
          "example" : 1,
          "description" : "Specifies the minimum possible value of the number parameter."
        },
        "maximum" : {
          "type" : "object",
          "example" : 100,
          "description" : "Specifies the maximum possible value of the number parameter."
        },
        "multipleOf" : {
          "example" : 10,
          "description" : "Specifies that the value of the number parameter must be divisible by this value. Must be an integer value > 0",
          "$ref" : "#/definitions/Number"
        },
        "maxItems" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 3,
          "description" : "Specifies the maximum number of items permitted for array parameters. Must be an integer value greater than, or equal to 0"
        },
        "minItems" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 0,
          "description" : "Specifies the minimum number of items permitted for array parameters. Must be an integer value greater than, or equal to 0"
        },
        "uniqueItems" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Specifies whether or not all array items should be unique."
        },
        "collectionFormat" : {
          "type" : "string",
          "example" : "multi",
          "description" : "Specifies the format of array parameters. Possible values: [ csv, ssv, tsv, pipes, multi ]."
        },
        "schema" : {
          "description" : "The parameter schema",
          "$ref" : "#/definitions/SchemaObject"
        },
        "allowEmptyValue" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not an empty value is allowed for this parameter. Only relevant for query and form parameters."
        },
        "deprecated" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not an empty value is deprecated for this parameter. It should be transitioned out of usage."
        },
        "style" : {
          "type" : "string",
          "example" : "form",
          "description" : "Describes how the parameter value will be serialized depending on the type of the parameter value."
        },
        "explode" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not a separated parameter is generated. Only relevant for array or object types of parameters."
        },
        "allowReserved" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies whether or not the parameter value allows reserved characters"
        },
        "mediaType" : {
          "type" : "string",
          "example" : "application/json",
          "description" : "Specifies the media type of the parameter. Used specificially to cater for advanced OAS3 parameter definitions"
        },
        "enum" : {
          "type" : "array",
          "items" : {
            "type" : "object"
          }
        },
        "paramType" : {
          "type" : "string",
          "example" : "body",
          "description" : "The parameter type, e.g. query, form, path, body, header"
        }
      },
      "description" : "An API operation parameter for a [Method](Method.html), as part of the  [APIDefinition](APIDefinition.html)."
    },
    "ResponseCode" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 404,
          "description" : "The response code"
        },
        "message" : {
          "type" : "string",
          "example" : "Not Found",
          "description" : "The response message"
        },
        "schema" : {
          "description" : "The response schema",
          "$ref" : "#/definitions/SchemaObject"
        },
        "headers" : {
          "type" : "object",
          "description" : "The response headers",
          "additionalProperties" : {
            "$ref" : "#/definitions/SchemaObject"
          }
        },
        "content" : {
          "type" : "object",
          "description" : "The response content",
          "additionalProperties" : {
            "$ref" : "#/definitions/SchemaObject"
          }
        }
      },
      "description" : "An operation response code."
    },
    "VirtualizedMethodExport" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "f2a0d13a-51f3-4256-855e-2b1d838a5cd2",
          "description" : "Unique ID of the method."
        },
        "virtualizedApiId" : {
          "type" : "string",
          "example" : "bacb827e-e555-43fa-b006-50c7404aa990",
          "description" : "The identifier of the [VirtualizedAPI](VirtualizedAPI.html)."
        },
        "name" : {
          "type" : "string",
          "example" : "MyMethod",
          "description" : "The virtualized method name.  This defaults to the original [APIDefinition](APIDefinition.html) method name."
        },
        "apiId" : {
          "type" : "string",
          "example" : "ec5e0a01-832b-4ecb-8cae-b35630527bb4",
          "description" : "The reference identifier for the original [APIDefinition](APIDefinition.html) that was virtualized."
        },
        "apiMethodId" : {
          "type" : "string",
          "example" : "21490aa6-ed14-4059-b8b7-d5bf0dc22dc6",
          "description" : "The reference identifier for the original API [APIDefinition](APIDefinition.html) method that was virtualized."
        },
        "summary" : {
          "type" : "string",
          "example" : "This is a summary of my API Method",
          "description" : "A summary of the API Method."
        },
        "descriptionType" : {
          "type" : "string",
          "example" : "original",
          "description" : "The source for the method's description.  One of: *original*, *manual*, *markdown*, or *url*.  Defaults to *original*."
        },
        "descriptionManual" : {
          "type" : "string",
          "example" : "This is _my_ API method",
          "description" : "Specifies a manual description, which can be markdown text."
        },
        "descriptionMarkdown" : {
          "type" : "string",
          "example" : "${environment.VINSTDIR}/../markdown/myapi/method.md",
          "description" : "specifies a markdown file to use for description."
        },
        "descriptionUrl" : {
          "type" : "string",
          "example" : "https://myapi.org/docs/api#method",
          "description" : "Specifies a URL to use instead of description text."
        },
        "tags" : {
          "type" : "object",
          "example" : {
            "Category" : [ "Social Network, Photos" ],
            "Type" : [ "REST" ]
          },
          "description" : "The list of tags associated with this API method. Each tag can have multiple values.",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "op" : {
          "type" : "string",
          "example" : "MyAPI-1.0:GET:/things",
          "description" : "Internal use only."
        }
      },
      "description" : "Frontend API method export."
    },
    "VirtualizedAPIMethod" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "f2a0d13a-51f3-4256-855e-2b1d838a5cd2",
          "description" : "Unique ID of the method."
        },
        "virtualizedApiId" : {
          "type" : "string",
          "example" : "bacb827e-e555-43fa-b006-50c7404aa990",
          "description" : "The identifier of the [VirtualizedAPI](VirtualizedAPI.html)."
        },
        "name" : {
          "type" : "string",
          "example" : "MyMethod",
          "description" : "The virtualized method name.  This defaults to the original [APIDefinition](APIDefinition.html) method name."
        },
        "apiId" : {
          "type" : "string",
          "example" : "ec5e0a01-832b-4ecb-8cae-b35630527bb4",
          "description" : "The reference identifier for the original [APIDefinition](APIDefinition.html) that was virtualized."
        },
        "apiMethodId" : {
          "type" : "string",
          "example" : "21490aa6-ed14-4059-b8b7-d5bf0dc22dc6",
          "description" : "The reference identifier for the original API [APIDefinition](APIDefinition.html) method that was virtualized."
        },
        "summary" : {
          "type" : "string",
          "example" : "This is a summary of my API Method",
          "description" : "A summary of the API Method."
        },
        "descriptionType" : {
          "type" : "string",
          "example" : "original",
          "description" : "The source for the method's description.  One of: *original*, *manual*, *markdown*, or *url*.  Defaults to *original*."
        },
        "descriptionManual" : {
          "type" : "string",
          "example" : "This is _my_ API method",
          "description" : "Specifies a manual description, which can be markdown text."
        },
        "descriptionMarkdown" : {
          "type" : "string",
          "example" : "${environment.VINSTDIR}/../markdown/myapi/method.md",
          "description" : "specifies a markdown file to use for description."
        },
        "descriptionUrl" : {
          "type" : "string",
          "example" : "https://myapi.org/docs/api#method",
          "description" : "Specifies a URL to use instead of description text."
        },
        "tags" : {
          "type" : "object",
          "example" : {
            "Category" : [ "Social Network, Photos" ],
            "Type" : [ "REST" ]
          },
          "description" : "The list of tags associated with this API method. Each tag can have multiple values.",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "description" : "Referenced entity."
    },
    "AuthenticatedUserAttributes" : {
      "type" : "object",
      "properties" : {
        "firstLogin" : {
          "type" : "boolean"
        },
        "isSSOLogin" : {
          "type" : "boolean"
        },
        "userDn" : {
          "type" : "string"
        },
        "lastSeen" : {
          "type" : "integer",
          "format" : "int64"
        },
        "changePassword" : {
          "type" : "boolean"
        },
        "changePasswordMessage" : {
          "type" : "string"
        }
      }
    },
    "User" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "2be9fc6e-1110-474f-8029-bf1577ec3801",
          "description" : "The unique identifier for the user"
        },
        "organizationId" : {
          "type" : "string",
          "example" : "6fb4bd38-199a-4e9f-8c11-43233f530d82",
          "description" : "The unique identifier for the organization to which the user belongs"
        },
        "name" : {
          "type" : "string",
          "example" : "New User",
          "description" : "The user's name"
        },
        "description" : {
          "type" : "string",
          "example" : "Created by admin",
          "description" : "A description of the user"
        },
        "loginName" : {
          "type" : "string",
          "example" : "jbloggs",
          "description" : "A unique login name for the user"
        },
        "email" : {
          "type" : "string",
          "example" : "jbloggs@acmecorp.com",
          "description" : "An email address for the user"
        },
        "phone" : {
          "type" : "string",
          "example" : "+353 (1) 6742000",
          "description" : "The user's phone number"
        },
        "mobile" : {
          "type" : "string",
          "example" : "+353 (89) 6742087",
          "description" : "The user's mobile number"
        },
        "role" : {
          "type" : "string",
          "example" : "user",
          "description" : "The user's role, one of: user, oadmin, or admin"
        },
        "image" : {
          "type" : "string",
          "example" : "resources/photo.jpg",
          "description" : "The user's photo. To update the image, please refer to the API."
        },
        "enabled" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Indicates whether or not the user account is enabled or not"
        },
        "createdOn" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1367337125476,
          "description" : "Epoch/Unix time stamp when the organization was created"
        },
        "state" : {
          "type" : "string",
          "example" : "approved",
          "description" : "The current state of the account, one of: approved, pending"
        },
        "type" : {
          "type" : "string",
          "example" : "internal",
          "description" : "Indicates the type of user. Possible values: internal, external"
        },
        "orgs2Role" : {
          "type" : "object",
          "example" : {
            "63d434a6-f286-4d0e-9dc9-80b45b0f80f8" : "user"
          },
          "description" : "Maps the organization Id to the user's role for that organization (optional)",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "orgs2Name" : {
          "type" : "object",
          "example" : {
            "63d434a6-f286-4d0e-9dc9-80b45b0f80f8" : "Axway Inc."
          },
          "description" : "Maps the organization Id to the organization name (read-only)",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "authAttrs" : {
          "$ref" : "#/definitions/AuthenticatedUserAttributes"
        },
        "dn" : {
          "type" : "string"
        }
      },
      "description" : "The API Manager user is a member of organizations."
    },
    "OAuthProtectedResource" : {
      "type" : "object",
      "properties" : {
        "uriprefix" : {
          "type" : "string",
          "example" : "/api/oauth/protected",
          "description" : "Oauth protected path"
        },
        "scopes" : {
          "type" : "array",
          "example" : [ "resource.WRITE", "resource.READ" ],
          "description" : "List of scopes associated with the OAuth protected path",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "scope" : {
          "type" : "string",
          "example" : "Read",
          "description" : "Oauth Scope"
        },
        "description" : {
          "type" : "string",
          "example" : "Read access to resource",
          "description" : "Scope Description"
        }
      },
      "description" : "Scope and prefix information for OAuth protected resource."
    },
    "DiscoveryAPI" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "Flickr API",
          "description" : "The name of the API"
        },
        "summary" : {
          "type" : "string",
          "example" : "The Flickr photo-sharing API",
          "description" : "Summary of the API"
        },
        "id" : {
          "type" : "string",
          "example" : "925129c4-0c4b-4adb-95c4-fdbc741eb333",
          "description" : "The unique identifier for the API"
        },
        "uri" : {
          "type" : "string",
          "example" : "https://localhost:8075/api/portal/v1.0/discovery/swagger/api/Flickr",
          "description" : "The URL of where further information of the API is available in the portal"
        },
        "type" : {
          "type" : "string",
          "example" : "rest",
          "description" : "The type of API, either rest or wsdl"
        }
      },
      "description" : "REST API information."
    }
  }
}