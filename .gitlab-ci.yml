image: docker:dind

variables:
  GO111MODULE: "on"
  GOPRIVATE: "git.ecd.axway.org"
  GOFLAGS: "-mod=vendor"

  PROJECT: beano
  PACKAGE_NAME: apic-agents-sdk
  BINTRAY_NAMESPACE: agent
  DOCKER_DRIVER: overlay2
  DEPENDENCY_CHECK_FLAGS: "--scan=**/*"
  AWS_DISCOVERY_PROJECT_ID: 7397
  V7_DISCOVERY_PROJECT_ID: 7540
  FORTIFY_PROJECT: "10566"
  FORTIFY_BUILD_ID: "apic_agents_sdk"
stages:
  - test
  - sonar
  - security-scans
  - security-review
  - release
  - update-dep

############################################################
# Section for restrictions
############################################################
.except-feature: &except-feature
  only:
    - master
    - dev
    - tags
  except:
    - web
    - triggers

.only-feature: &only-feature
  only:
    - /^APIGOV-.*$/
  except:
    - web
    - triggers

.only-dev: &only-dev
  only:
    - dev
  except:
    - web
    - triggers

.only-protected: &only-protected
  only:
    - master
    - dev
  except:
    - web
    - triggers

.all: &all
  only:
    - master
    - dev
    - /^APIGOV-.*$/
  except:
    - web
    - triggers

.only-master: &only-master
  only:
    - master
  except:
    - web
    - triggers

.only-tags: &only-tags
  only:
    - tags

.only-release: &only-release
  only:
    - web
    - triggers

############################################################
# Section for build command scripts
############################################################
.configure-git-ssh: &configure-git-ssh |
  apk update && apk add openssl
  which ssh-agent || ( apk add openssh-client )
  mkdir -p ~/.ssh
  chmod 700 ~/.ssh
  echo "$GIT_SSH_KEY" | tr -d '\r' > ~/.ssh/id_rsa
  chmod 700 ~/.ssh/id_rsa
  eval $(ssh-agent -s)
  ssh-add ~/.ssh/id_rsa
  echo "$GIT_SSH_KNOWN_HOST" > ~/.ssh/known_hosts
  chmod 644 ~/.ssh/known_hosts
  echo -n | openssl s_client -showcerts -connect git.ecd.axway.org:443 2>/dev/null  | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' > ~/git.ecd.axway.org.pem
  git config --global http."https://git.ecd.axway.org/".sslCAInfo ~/git.ecd.axway.org.pem
  git config --global url."git@git.ecd.axway.org:".insteadOf "https://git.ecd.axway.org/"
  git config --global push.default matching
  git config --global user.email "builder-lphxmjtnt11@axway.com"
  git config --global user.name "builder-lphxmjtnt11"
  git config --global push.followTags true
  git remote set-url --push origin "git@git.ecd.axway.org:${CI_PROJECT_PATH}.git"

.configure-artifactory-curl: &configure-artifactory-curl |
  cp /AxwayRootCA.crt /usr/local/share/ca-certificates/AxwayRootCA.crt
  cp /AxwayRootCANew.crt /usr/local/share/ca-certificates/AxwayRootCANew.crt
  update-ca-certificates

.prepare-path: &prepare-path |
  mkdir -p ${GOPATH}/src/git.ecd.axway.org/apigov
  cd ${GOPATH}/src/git.ecd.axway.org/apigov
  ln -s ${CI_PROJECT_DIR} apic_agents_sdk
  cd ${GOPATH}/src/git.ecd.axway.org/apigov/apic_agents_sdk

.get-latest-version: &get-latest-version |
  if [ $(git --version | grep -Eo '2.*') ]; then 
    export PACKAGE_VERSION=$(git tag -l --sort="version:refname" | grep -Eo '[0-9]{1,}\.[0-9]{1,}\.[0-9]{1,}' | tail -1)
  else
    export PACKAGE_VERSION=$(git describe --tags $(git rev-list --tags --max-count=1))
  fi

.get-ca-certs: &get-ca-certs |
  cat $AXWAY_ROOT_CA > /AxwayRootCA.crt
  echo "" >> /AxwayRootCA.crt
  cat $AXWAY_ROOT_CA_NEW > /AxwayRootCANew.crt
  echo "" >> /AxwayRootCANew.crt

############################################################
# Section for test and sonar
############################################################
test:
  stage: test
  image: beano.swf-artifactory.lab.phx.axway.int/beano-alpine-security:latest
  before_script:
    - *prepare-path
    - *configure-git-ssh
  script:
    - make test
  <<: *only-feature

sonar:
  stage: sonar
  image: beano.swf-artifactory.lab.phx.axway.int/beano-alpine-security:latest
  before_script:
    - *prepare-path
    - *configure-git-ssh
  script:
    - make sonar
  <<: *only-protected

############################################################
# Section for lint builds stage
############################################################
.lint-template: &lint-template
  image: beano.swf-artifactory.lab.phx.axway.int/beano-alpine-base:latest
  before_script:
    - *prepare-path
  script:
    - make lint

lint-test:
  stage: test
  <<: *lint-template
  <<: *only-feature

lint-sonar:
  stage: sonar
  <<: *lint-template
  <<: *only-protected

############################################################
# Section for error check tools
############################################################

error_check:
  stage: test
  image: beano.swf-artifactory.lab.phx.axway.int/beano-alpine-security:latest
  before_script:
    - *prepare-path
    - *configure-git-ssh
  script:
    - make error-check
  <<: *only-feature

############################################################
# Section for security tools
############################################################
include:
  - project: "scurity/gitlabci"
    ref: master
    file: "/.gitlab-ci-prepcsr.yml"
  - project: "scurity/gitlabci"
    ref: master
    file: "/.gitlab-ci-fortify.yml"
  - project: "scurity/gitlabci"
    ref: master
    file: "/.gitlab-ci-dependencycheck.yml"
  - project: "scurity/gitlabci"
    ref: master
    file: "/.gitlab-ci-gosec.yml"
  - project: "scurity/gitlabci"
    ref: master
    file: "/.gitlab-ci-csr.yml"

gosec:
  retry: 0
  except:
    - schedules
    - tags
    - web
    - triggers

dependencycheck:
  retry: 0
  except:
    - schedules
    - tags
    - web
    - triggers

fetch-fortify:
  retry: 0
  except:
    refs:
      - tags
      - web
      - triggers
    variables:
      - $CI_PIPELINE_SOURCE == "pipeline"

gosec:on-schedule:
  retry: 0
  before_script:
    - git config --global http.sslVerify false
    - git fetch && git checkout master
    - *get-latest-version
    - if [[ ${PACKAGE_VERSION} =~ "0.0.1-" ]]; then echo "Scanning 0.0.1 thru master branch"; else echo "Checking out v${PACKAGE_VERSION}" && git checkout v${PACKAGE_VERSION}; fi

dependencycheck:on-schedule:
  retry: 0
  before_script:
    - git config --global http.sslVerify false
    - git fetch && git checkout master
    - *get-latest-version
    - if [[ ${PACKAGE_VERSION} =~ "0.0.1-" ]]; then echo "Scanning 0.0.1 thru master branch"; else echo "Checking out v${PACKAGE_VERSION}" && git checkout v${PACKAGE_VERSION}; fi

run-csr:
  dependencies:
    - fetch-fortify
    - dependencycheck
    - gosec
  <<: *only-feature

update-csr:
  dependencies:
    - fetch-fortify
    - dependencycheck:on-schedule
    - gosec:on-schedule

############################################################
# Section for triggering agent updates
############################################################
trigger-aws-apigw-discovery-agent:
  stage: update-dep
  when: manual
  before_script:
    - apk update && apk add curl ca-certificates
    - *get-ca-certs
    - *configure-artifactory-curl
  script:
    - curl --request POST --form "token=${CI_JOB_TOKEN}" --form ref=master https://git.ecd.axway.org/api/v4/projects/${AWS_DISCOVERY_PROJECT_ID}/trigger/pipeline
  <<: *only-master

trigger-v7-discovery-agent:
  stage: update-dep
  when: manual
  before_script:
    - apk update && apk add curl ca-certificates
    - *get-ca-certs
    - *configure-artifactory-curl
  script:
    - curl --request POST --form "token=${CI_JOB_TOKEN}" --form ref=master https://git.ecd.axway.org/api/v4/projects/${V7_DISCOVERY_PROJECT_ID}/trigger/pipeline
  <<: *only-master

############################################################
# Section for release stage
############################################################
# Release Promotion job - Creates a tag from master branch
#   - Job runs only if pipeline triggered from Gitlab Web UI or trigger
#   - Job requires PROMOTION_TYPE environment variable with either of the following values
#       "major" - master branch is promoted with major number
#       "minor" - master branch is promoted with minor number
#       "patch" - master branch is promoted with patch number
# Note :
#   Job completion creates tags using current version of master and updates version of master
#   based on the promotion type. New Pipelines will be triggered for the new tag and updated
#   master.
release-promotion:
  stage: release
  image: beano.swf-artifactory.lab.phx.axway.int/beano-alpine-security:latest
  when: manual
  variables:
    GIT_STRATEGY: clone
  before_script:
    - *prepare-path
    - *configure-git-ssh
  script:
    - chmod +x ./build/scripts/promote.sh
    - ./build/scripts/promote.sh
  allow_failure: false
  <<: *only-release
