/*
 * This file is automatically generated
 */

package {{.res.version}}

import (
	"encoding/json"
	apiv1 "github.com/Axway/agent-sdk/pkg/apic/apiserver/models/api/v1"
)

var (
	_{{.res.kind}}GVK = apiv1.GroupVersionKind{
		GroupKind: apiv1.GroupKind{
			Group: "{{.res.group}}",
			Kind:  "{{.res.kind}}",
		},
		APIVersion: "{{.res.version}}",
	}
)

const (
	{{if .res.scope }}
	{{.res.kind}}Scope    = "{{.res.scope}}"
	{{else}}
	{{.res.kind}}Scope    = ""
	{{end}}
	{{.res.kind}}ResourceName = "{{.res.resource}}"
)

func {{.res.kind}}GVK() apiv1.GroupVersionKind {
	return _{{.res.kind}}GVK
}

func init() {
	apiv1.RegisterGVK(_{{.res.kind}}GVK, {{.res.kind}}Scope, {{.res.kind}}ResourceName)
}

// {{.res.kind}} Resource
type {{.res.kind}} struct {
	apiv1.ResourceMeta
	{{range $field, $isNotEmpty := .res.fields}}
		{{$field | strings.Title}} {{if $isNotEmpty}} {{$.res.kind | strings.ReplaceAll "API" "Api" | strings.ReplaceAll "AWS" "Aws"}}{{$field | strings.Title}} {{else}} interface{} {{end}} `json:"{{$field | strings.ToLower}}"`
	{{end}}
}

// FromInstance converts a ResourceInstance to a {{.res.kind}}
func (res *{{.res.kind}}) FromInstance(ri *apiv1.ResourceInstance) (error) {
	if ri == nil {
		res = nil
		return nil
	}

	err := json.Unmarshal(ri.RawResource, res)
	return err
}

// {{.res.kind}}FromInstanceArray converts a []*ResourceInstance to a []*{{.res.kind}}
func {{.res.kind}}FromInstanceArray(fromArray []*apiv1.ResourceInstance) ([]*{{.res.kind}}, error) {
	newArray := make([]*{{.res.kind}}, 0)
	for _, item := range fromArray {
		res := &{{.res.kind}}{}
		err := res.FromInstance(item)
		if err != nil {
			return make([]*{{.res.kind}}, 0), err
		}
		newArray = append(newArray, res)
	}

	return newArray, nil
}

// AsInstance converts a {{.res.kind}} to a ResourceInstance
func (res *{{.res.kind}}) AsInstance() (*apiv1.ResourceInstance, error) {
	m, err := json.Marshal(res.Spec)
	if err != nil {
		return nil, err
	}

	spec := map[string]interface{}{}
	err = json.Unmarshal(m, &spec)
	if err != nil {
		return nil, err
	}

        meta := res.ResourceMeta
        meta.GroupVersionKind = {{.res.kind}}GVK()

	return &apiv1.ResourceInstance{ResourceMeta: meta, Spec: spec}, nil
}
