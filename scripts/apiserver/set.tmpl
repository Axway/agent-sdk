/*
 * This file is automatically generated
 */

package clients

import (
        "fmt"
	cAPIV1 "git.ecd.axway.org/apigov/apic_agents_sdk/pkg/apic/apiserver/clients/api/v1";
	{{- range $i, $gv := .input.set }}
	{{ $gv.group }}_{{ $gv.version }} "git.ecd.axway.org/apigov/apic_agents_sdk/pkg/apic/apiserver/clients/{{ $gv.group }}/{{ $gv.version }}";
	{{- end}}
)

type Set struct {

	{{ range $i, $gv := .input.set -}}
	{{ range $j, $k := $gv.kinds -}}
	{{ $k.kind }}{{ $gv.group | strings.Title }}{{ $gv.version | strings.Title }} *{{ $gv.group }}_{{ $gv.version }}.{{ if $k.scoped }}Unscoped{{ end }}{{ $k.kind }}Client
	{{ end -}}
	{{ end -}}
}


func New(b cAPIV1.Base) *Set {
	s := &Set{}

	var err error

	{{ range $i, $gv := .input.set -}}
	{{ range $j, $k := $gv.kinds -}}
	s.{{ $k.kind }}{{ $gv.group | strings.Title }}{{ $gv.version | strings.Title }}, err = {{ $gv.group }}_{{ $gv.version }}.New{{ $k.kind }}Client(b)
        if err != nil {
        	panic(fmt.Sprintf("Failed to create client for git.ecd.axway.org/apigov/apic_agents_sdk/pkg/apic/apiserver/clients/{{ $gv.group }}/{{ $gv.version }}.{{ $k.kind }}: %s", err))
        }
	{{ end -}}
	{{ end -}}

	return s
}